2021-07-10 22:27:08.700 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.705 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.706 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000333(String)
2021-07-10 22:27:08.706 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.708 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.709 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000334(String)
2021-07-10 22:27:08.709 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.711 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.711 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000335(String)
2021-07-10 22:27:08.712 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.714 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.714 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000336(String)
2021-07-10 22:27:08.715 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.716 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.716 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000337(String)
2021-07-10 22:27:08.717 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.718 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.718 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000338(String)
2021-07-10 22:27:08.718 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.719 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.719 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000339(String)
2021-07-10 22:27:08.719 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.720 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.721 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000340(String)
2021-07-10 22:27:08.721 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.722 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.722 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000341(String)
2021-07-10 22:27:08.722 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.723 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.724 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000342(String)
2021-07-10 22:27:08.724 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.726 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.726 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000343(String)
2021-07-10 22:27:08.726 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.728 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.728 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000344(String)
2021-07-10 22:27:08.729 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.730 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.730 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000345(String)
2021-07-10 22:27:08.731 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.732 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.732 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000346(String)
2021-07-10 22:27:08.732 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.733 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.733 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000347(String)
2021-07-10 22:27:08.734 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.735 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.735 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000348(String)
2021-07-10 22:27:08.735 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.736 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.736 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000349(String)
2021-07-10 22:27:08.736 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.738 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.738 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000350(String)
2021-07-10 22:27:08.738 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.739 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.739 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000351(String)
2021-07-10 22:27:08.739 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.741 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.741 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000352(String)
2021-07-10 22:27:08.741 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.742 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.742 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000353(String)
2021-07-10 22:27:08.742 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.743 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.743 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000354(String)
2021-07-10 22:27:08.743 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.745 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.745 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000355(String)
2021-07-10 22:27:08.745 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.746 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.746 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000356(String)
2021-07-10 22:27:08.746 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.748 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.748 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000357(String)
2021-07-10 22:27:08.748 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.750 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.750 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000358(String)
2021-07-10 22:27:08.750 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.751 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.751 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000359(String)
2021-07-10 22:27:08.752 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.753 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.753 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000360(String)
2021-07-10 22:27:08.753 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.754 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.754 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000361(String)
2021-07-10 22:27:08.755 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.756 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.756 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000362(String)
2021-07-10 22:27:08.756 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.758 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.758 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000363(String)
2021-07-10 22:27:08.758 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.759 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.759 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000364(String)
2021-07-10 22:27:08.759 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.760 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.760 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000365(String)
2021-07-10 22:27:08.761 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.762 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.762 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000366(String)
2021-07-10 22:27:08.762 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.763 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.763 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000367(String)
2021-07-10 22:27:08.764 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.765 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.765 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000368(String)
2021-07-10 22:27:08.766 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.767 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.767 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000369(String)
2021-07-10 22:27:08.767 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.768 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.768 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000370(String)
2021-07-10 22:27:08.769 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.770 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.770 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000371(String)
2021-07-10 22:27:08.770 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.775 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.776 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000372(String)
2021-07-10 22:27:08.776 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.778 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.778 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000373(String)
2021-07-10 22:27:08.779 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.780 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.781 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000374(String)
2021-07-10 22:27:08.781 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.782 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.782 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000375(String)
2021-07-10 22:27:08.782 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.783 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.784 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000376(String)
2021-07-10 22:27:08.784 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.785 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.785 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000377(String)
2021-07-10 22:27:08.785 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.787 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.787 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000378(String)
2021-07-10 22:27:08.787 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.788 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.788 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000379(String)
2021-07-10 22:27:08.789 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.790 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.790 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000380(String)
2021-07-10 22:27:08.790 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.792 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.792 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000381(String)
2021-07-10 22:27:08.792 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.794 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.794 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000382(String)
2021-07-10 22:27:08.795 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.796 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.797 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000383(String)
2021-07-10 22:27:08.797 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.799 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.799 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000384(String)
2021-07-10 22:27:08.799 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.801 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.801 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000385(String)
2021-07-10 22:27:08.801 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.802 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.802 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000386(String)
2021-07-10 22:27:08.803 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.804 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.804 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000387(String)
2021-07-10 22:27:08.804 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.805 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.805 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000388(String)
2021-07-10 22:27:08.805 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.806 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.806 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000389(String)
2021-07-10 22:27:08.807 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.808 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.808 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000390(String)
2021-07-10 22:27:08.808 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.809 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.809 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000391(String)
2021-07-10 22:27:08.809 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.811 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.811 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000392(String)
2021-07-10 22:27:08.811 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.812 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.812 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000393(String)
2021-07-10 22:27:08.813 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.814 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.814 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000394(String)
2021-07-10 22:27:08.815 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.816 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.816 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000395(String)
2021-07-10 22:27:08.816 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.818 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.818 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000396(String)
2021-07-10 22:27:08.818 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.819 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.819 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000397(String)
2021-07-10 22:27:08.820 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.821 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.821 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000398(String)
2021-07-10 22:27:08.821 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.822 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.822 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000399(String)
2021-07-10 22:27:08.822 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.824 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.824 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000400(String)
2021-07-10 22:27:08.825 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.826 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.826 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000401(String)
2021-07-10 22:27:08.827 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.828 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.828 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000402(String)
2021-07-10 22:27:08.829 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.830 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.830 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000403(String)
2021-07-10 22:27:08.830 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.832 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.832 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000404(String)
2021-07-10 22:27:08.832 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.833 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.834 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000405(String)
2021-07-10 22:27:08.834 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.835 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.836 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000406(String)
2021-07-10 22:27:08.836 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.837 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.837 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000407(String)
2021-07-10 22:27:08.837 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.839 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.839 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000408(String)
2021-07-10 22:27:08.839 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.841 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.841 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000409(String)
2021-07-10 22:27:08.841 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.843 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.843 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000410(String)
2021-07-10 22:27:08.843 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.845 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.845 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000411(String)
2021-07-10 22:27:08.846 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.847 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.847 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000412(String)
2021-07-10 22:27:08.847 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.849 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.849 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000413(String)
2021-07-10 22:27:08.849 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.851 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.851 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000414(String)
2021-07-10 22:27:08.852 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.853 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.853 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000415(String)
2021-07-10 22:27:08.854 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.855 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.855 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000416(String)
2021-07-10 22:27:08.855 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.857 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.857 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000417(String)
2021-07-10 22:27:08.857 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.859 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.859 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000418(String)
2021-07-10 22:27:08.859 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.861 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.861 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000419(String)
2021-07-10 22:27:08.862 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.863 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.863 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000420(String)
2021-07-10 22:27:08.864 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.866 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.866 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000421(String)
2021-07-10 22:27:08.867 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.869 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.869 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000422(String)
2021-07-10 22:27:08.869 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.870 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.870 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000423(String)
2021-07-10 22:27:08.871 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.872 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.872 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000424(String)
2021-07-10 22:27:08.873 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.874 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.875 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000425(String)
2021-07-10 22:27:08.875 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.877 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.877 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000426(String)
2021-07-10 22:27:08.878 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.880 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.880 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000427(String)
2021-07-10 22:27:08.880 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.882 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.883 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000428(String)
2021-07-10 22:27:08.883 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.885 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.885 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000429(String)
2021-07-10 22:27:08.885 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.886 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.886 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000430(String)
2021-07-10 22:27:08.886 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.888 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.888 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000431(String)
2021-07-10 22:27:08.889 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.891 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.891 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000432(String)
2021-07-10 22:27:08.891 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.893 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.893 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000433(String)
2021-07-10 22:27:08.893 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.895 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.895 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000434(String)
2021-07-10 22:27:08.895 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.896 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.896 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000435(String)
2021-07-10 22:27:08.896 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.898 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.898 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000436(String)
2021-07-10 22:27:08.899 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.901 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.901 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000437(String)
2021-07-10 22:27:08.901 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.903 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.903 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000438(String)
2021-07-10 22:27:08.903 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.905 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.905 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000439(String)
2021-07-10 22:27:08.905 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.906 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.906 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000440(String)
2021-07-10 22:27:08.907 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.908 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.908 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000441(String)
2021-07-10 22:27:08.908 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.909 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.909 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000442(String)
2021-07-10 22:27:08.910 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.911 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.911 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000443(String)
2021-07-10 22:27:08.911 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.913 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.913 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000444(String)
2021-07-10 22:27:08.914 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.916 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.916 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000445(String)
2021-07-10 22:27:08.916 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.918 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.918 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000446(String)
2021-07-10 22:27:08.919 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.920 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.920 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000447(String)
2021-07-10 22:27:08.920 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.921 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.921 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000448(String)
2021-07-10 22:27:08.921 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.923 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.923 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000449(String)
2021-07-10 22:27:08.923 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.924 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.924 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000450(String)
2021-07-10 22:27:08.925 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.926 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.926 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000451(String)
2021-07-10 22:27:08.927 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.928 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.928 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000452(String)
2021-07-10 22:27:08.929 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.930 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.930 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000453(String)
2021-07-10 22:27:08.931 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.932 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.932 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000454(String)
2021-07-10 22:27:08.933 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.934 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.934 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000455(String)
2021-07-10 22:27:08.934 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.935 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.935 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000456(String)
2021-07-10 22:27:08.935 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.937 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.937 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000457(String)
2021-07-10 22:27:08.937 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.938 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.938 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000458(String)
2021-07-10 22:27:08.938 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.940 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.940 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000459(String)
2021-07-10 22:27:08.940 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.941 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.941 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000460(String)
2021-07-10 22:27:08.941 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.942 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.943 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000461(String)
2021-07-10 22:27:08.943 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.944 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.944 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000462(String)
2021-07-10 22:27:08.944 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.946 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.946 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000463(String)
2021-07-10 22:27:08.946 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.947 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.947 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000464(String)
2021-07-10 22:27:08.948 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.949 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.950 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000465(String)
2021-07-10 22:27:08.950 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.951 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.951 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000466(String)
2021-07-10 22:27:08.951 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.952 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.953 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000467(String)
2021-07-10 22:27:08.953 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.954 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.954 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000468(String)
2021-07-10 22:27:08.954 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.955 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.955 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000469(String)
2021-07-10 22:27:08.956 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.957 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.957 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000470(String)
2021-07-10 22:27:08.957 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.958 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.958 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000471(String)
2021-07-10 22:27:08.958 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.959 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.959 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000472(String)
2021-07-10 22:27:08.960 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.961 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.961 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000473(String)
2021-07-10 22:27:08.962 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.963 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.963 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000474(String)
2021-07-10 22:27:08.963 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.965 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.965 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000475(String)
2021-07-10 22:27:08.965 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.967 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.967 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000476(String)
2021-07-10 22:27:08.967 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.968 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.968 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000477(String)
2021-07-10 22:27:08.968 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.969 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.969 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000478(String)
2021-07-10 22:27:08.970 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.971 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.971 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000479(String)
2021-07-10 22:27:08.971 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.972 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.972 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000480(String)
2021-07-10 22:27:08.972 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.973 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.973 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000481(String)
2021-07-10 22:27:08.973 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.974 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.974 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000482(String)
2021-07-10 22:27:08.974 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.975 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.975 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000483(String)
2021-07-10 22:27:08.975 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.977 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.977 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000484(String)
2021-07-10 22:27:08.977 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.978 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.978 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000485(String)
2021-07-10 22:27:08.978 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.980 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.980 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000486(String)
2021-07-10 22:27:08.980 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.982 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.982 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000487(String)
2021-07-10 22:27:08.982 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.983 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.983 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000488(String)
2021-07-10 22:27:08.984 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.985 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.985 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000489(String)
2021-07-10 22:27:08.986 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.987 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.987 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000490(String)
2021-07-10 22:27:08.987 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.988 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.988 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000491(String)
2021-07-10 22:27:08.988 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.989 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.989 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000492(String)
2021-07-10 22:27:08.989 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.990 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.990 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000493(String)
2021-07-10 22:27:08.991 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.991 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.991 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000494(String)
2021-07-10 22:27:08.992 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.993 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.993 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000495(String)
2021-07-10 22:27:08.993 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.995 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.995 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000496(String)
2021-07-10 22:27:08.995 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.996 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.996 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000497(String)
2021-07-10 22:27:08.996 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:08.998 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:08.998 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000498(String)
2021-07-10 22:27:08.998 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.000 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.000 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000499(String)
2021-07-10 22:27:09.000 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.002 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.002 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000500(String)
2021-07-10 22:27:09.002 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.003 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.003 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000501(String)
2021-07-10 22:27:09.003 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.004 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.004 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000502(String)
2021-07-10 22:27:09.005 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.006 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.006 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000503(String)
2021-07-10 22:27:09.006 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.007 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.007 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000504(String)
2021-07-10 22:27:09.008 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.009 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.009 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000505(String)
2021-07-10 22:27:09.010 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.011 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.011 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000506(String)
2021-07-10 22:27:09.012 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.013 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.013 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000507(String)
2021-07-10 22:27:09.014 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.015 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.015 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000508(String)
2021-07-10 22:27:09.016 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.017 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.017 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000509(String)
2021-07-10 22:27:09.018 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.019 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.020 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000510(String)
2021-07-10 22:27:09.020 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.022 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.023 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000511(String)
2021-07-10 22:27:09.023 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.025 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.025 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000512(String)
2021-07-10 22:27:09.026 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.029 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.029 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000513(String)
2021-07-10 22:27:09.029 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.031 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.031 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000514(String)
2021-07-10 22:27:09.032 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.033 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.033 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000515(String)
2021-07-10 22:27:09.033 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.034 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.035 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000516(String)
2021-07-10 22:27:09.035 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.036 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.036 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000517(String)
2021-07-10 22:27:09.036 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.037 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.037 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000518(String)
2021-07-10 22:27:09.038 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.039 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.039 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000519(String)
2021-07-10 22:27:09.039 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.040 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.040 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000520(String)
2021-07-10 22:27:09.040 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.041 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.041 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000521(String)
2021-07-10 22:27:09.042 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.044 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.044 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000522(String)
2021-07-10 22:27:09.044 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.046 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.046 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000523(String)
2021-07-10 22:27:09.046 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.047 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.047 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000524(String)
2021-07-10 22:27:09.047 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.048 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.048 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000525(String)
2021-07-10 22:27:09.049 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.050 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.050 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000526(String)
2021-07-10 22:27:09.050 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.052 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.052 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000527(String)
2021-07-10 22:27:09.052 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.054 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.054 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000528(String)
2021-07-10 22:27:09.054 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.056 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.056 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000529(String)
2021-07-10 22:27:09.056 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.058 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.058 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000530(String)
2021-07-10 22:27:09.058 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.059 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.059 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000531(String)
2021-07-10 22:27:09.059 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.061 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.061 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000532(String)
2021-07-10 22:27:09.061 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.062 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.062 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000533(String)
2021-07-10 22:27:09.063 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.065 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.065 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000534(String)
2021-07-10 22:27:09.065 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.067 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.067 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000535(String)
2021-07-10 22:27:09.067 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.068 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.068 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000536(String)
2021-07-10 22:27:09.068 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.069 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.069 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000537(String)
2021-07-10 22:27:09.069 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.070 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.070 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000538(String)
2021-07-10 22:27:09.071 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.072 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.072 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000539(String)
2021-07-10 22:27:09.072 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.073 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.073 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000540(String)
2021-07-10 22:27:09.073 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.075 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.075 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000541(String)
2021-07-10 22:27:09.075 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.077 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.077 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000542(String)
2021-07-10 22:27:09.077 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.079 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.079 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000543(String)
2021-07-10 22:27:09.079 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.080 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.080 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000544(String)
2021-07-10 22:27:09.081 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.082 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.082 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000545(String)
2021-07-10 22:27:09.083 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.084 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.084 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000546(String)
2021-07-10 22:27:09.084 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.085 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.085 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000547(String)
2021-07-10 22:27:09.085 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.086 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.086 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000548(String)
2021-07-10 22:27:09.087 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.088 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.088 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000549(String)
2021-07-10 22:27:09.088 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.089 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.089 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000550(String)
2021-07-10 22:27:09.089 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.090 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.090 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000551(String)
2021-07-10 22:27:09.091 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.092 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.092 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000552(String)
2021-07-10 22:27:09.092 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.094 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.094 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000553(String)
2021-07-10 22:27:09.095 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.096 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.096 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000554(String)
2021-07-10 22:27:09.096 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.098 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.098 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000555(String)
2021-07-10 22:27:09.098 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.100 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.100 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000556(String)
2021-07-10 22:27:09.100 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.101 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.101 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000557(String)
2021-07-10 22:27:09.102 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.103 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.103 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000558(String)
2021-07-10 22:27:09.103 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.105 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.105 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000559(String)
2021-07-10 22:27:09.105 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.107 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.107 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000560(String)
2021-07-10 22:27:09.107 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.108 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.108 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000561(String)
2021-07-10 22:27:09.109 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.110 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.110 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000562(String)
2021-07-10 22:27:09.110 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.111 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.112 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000563(String)
2021-07-10 22:27:09.112 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.113 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.113 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000564(String)
2021-07-10 22:27:09.113 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.115 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.116 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000565(String)
2021-07-10 22:27:09.116 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.118 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.118 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000566(String)
2021-07-10 22:27:09.118 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.120 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.120 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000567(String)
2021-07-10 22:27:09.120 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.121 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.121 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000568(String)
2021-07-10 22:27:09.122 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.123 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.124 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000569(String)
2021-07-10 22:27:09.124 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.125 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.125 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000570(String)
2021-07-10 22:27:09.125 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.126 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.126 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000571(String)
2021-07-10 22:27:09.127 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.128 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.128 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000572(String)
2021-07-10 22:27:09.128 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.130 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.130 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000573(String)
2021-07-10 22:27:09.130 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.132 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.132 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000574(String)
2021-07-10 22:27:09.132 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.133 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.134 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000575(String)
2021-07-10 22:27:09.134 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.135 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.135 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000576(String)
2021-07-10 22:27:09.135 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.136 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.136 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000577(String)
2021-07-10 22:27:09.137 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.138 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.138 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000578(String)
2021-07-10 22:27:09.138 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.139 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.139 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000579(String)
2021-07-10 22:27:09.140 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.141 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.141 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000580(String)
2021-07-10 22:27:09.141 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.142 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.142 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000581(String)
2021-07-10 22:27:09.143 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.144 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.144 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000582(String)
2021-07-10 22:27:09.144 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.145 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.145 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000583(String)
2021-07-10 22:27:09.145 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.146 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.146 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000584(String)
2021-07-10 22:27:09.147 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.148 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.148 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000585(String)
2021-07-10 22:27:09.148 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.149 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.149 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000586(String)
2021-07-10 22:27:09.149 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.150 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.150 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000587(String)
2021-07-10 22:27:09.150 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.151 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.151 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000588(String)
2021-07-10 22:27:09.152 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.152 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.152 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000589(String)
2021-07-10 22:27:09.153 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.153 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.154 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000590(String)
2021-07-10 22:27:09.154 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.156 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.156 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000591(String)
2021-07-10 22:27:09.156 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.158 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.158 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000592(String)
2021-07-10 22:27:09.158 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.159 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.160 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000593(String)
2021-07-10 22:27:09.160 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.162 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.162 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000594(String)
2021-07-10 22:27:09.162 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.163 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.164 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000595(String)
2021-07-10 22:27:09.164 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.165 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.165 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000596(String)
2021-07-10 22:27:09.166 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.166 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.167 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000597(String)
2021-07-10 22:27:09.167 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.168 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.168 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000598(String)
2021-07-10 22:27:09.168 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.169 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.169 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000599(String)
2021-07-10 22:27:09.169 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.170 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.170 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000600(String)
2021-07-10 22:27:09.170 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.171 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.171 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000601(String)
2021-07-10 22:27:09.172 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.173 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.173 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000602(String)
2021-07-10 22:27:09.173 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.174 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.174 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000603(String)
2021-07-10 22:27:09.175 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.176 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.176 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000604(String)
2021-07-10 22:27:09.177 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.178 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.178 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000605(String)
2021-07-10 22:27:09.178 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.180 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.180 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000606(String)
2021-07-10 22:27:09.180 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.181 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.181 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000607(String)
2021-07-10 22:27:09.181 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.182 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.182 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000608(String)
2021-07-10 22:27:09.182 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.183 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.183 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000609(String)
2021-07-10 22:27:09.184 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.185 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.185 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000610(String)
2021-07-10 22:27:09.185 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.186 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.186 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000611(String)
2021-07-10 22:27:09.186 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.188 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.188 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000612(String)
2021-07-10 22:27:09.188 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.190 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.190 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000613(String)
2021-07-10 22:27:09.190 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.191 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.191 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000614(String)
2021-07-10 22:27:09.191 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.192 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.192 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000615(String)
2021-07-10 22:27:09.193 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.194 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.194 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000616(String)
2021-07-10 22:27:09.194 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.195 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.195 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000617(String)
2021-07-10 22:27:09.196 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.197 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.197 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000618(String)
2021-07-10 22:27:09.197 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.198 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.199 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000619(String)
2021-07-10 22:27:09.199 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.200 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.200 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000620(String)
2021-07-10 22:27:09.200 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.201 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.201 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000621(String)
2021-07-10 22:27:09.201 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.202 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.202 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000622(String)
2021-07-10 22:27:09.202 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.203 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.203 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000623(String)
2021-07-10 22:27:09.203 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.204 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.204 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000624(String)
2021-07-10 22:27:09.205 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.206 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.206 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000625(String)
2021-07-10 22:27:09.206 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.207 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.207 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000626(String)
2021-07-10 22:27:09.208 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.209 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.209 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000627(String)
2021-07-10 22:27:09.210 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.211 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.211 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000628(String)
2021-07-10 22:27:09.211 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.212 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.212 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000629(String)
2021-07-10 22:27:09.212 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.213 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.213 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000630(String)
2021-07-10 22:27:09.213 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.214 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.215 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000631(String)
2021-07-10 22:27:09.215 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.216 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.216 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000632(String)
2021-07-10 22:27:09.216 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.218 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.218 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000633(String)
2021-07-10 22:27:09.218 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.219 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.219 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000634(String)
2021-07-10 22:27:09.219 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.220 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.220 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000635(String)
2021-07-10 22:27:09.220 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.221 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.221 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000636(String)
2021-07-10 22:27:09.222 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.223 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.223 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000637(String)
2021-07-10 22:27:09.223 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.224 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.224 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000638(String)
2021-07-10 22:27:09.225 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.226 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.226 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000639(String)
2021-07-10 22:27:09.226 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.228 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.228 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000640(String)
2021-07-10 22:27:09.228 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.230 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.230 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000641(String)
2021-07-10 22:27:09.231 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.233 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.233 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000642(String)
2021-07-10 22:27:09.234 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.236 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.236 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000643(String)
2021-07-10 22:27:09.236 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.237 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.238 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000644(String)
2021-07-10 22:27:09.238 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.239 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.239 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000645(String)
2021-07-10 22:27:09.239 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.240 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.240 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000646(String)
2021-07-10 22:27:09.241 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.242 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.243 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000647(String)
2021-07-10 22:27:09.243 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.245 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.245 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000648(String)
2021-07-10 22:27:09.245 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.246 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.247 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000649(String)
2021-07-10 22:27:09.247 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.249 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.249 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000650(String)
2021-07-10 22:27:09.249 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.251 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.251 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000651(String)
2021-07-10 22:27:09.251 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.253 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.253 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000652(String)
2021-07-10 22:27:09.253 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.254 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.254 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000653(String)
2021-07-10 22:27:09.255 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.256 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.256 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000654(String)
2021-07-10 22:27:09.256 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.257 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.257 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000655(String)
2021-07-10 22:27:09.258 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.259 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.259 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000656(String)
2021-07-10 22:27:09.260 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.262 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.262 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000657(String)
2021-07-10 22:27:09.262 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.263 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.264 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000658(String)
2021-07-10 22:27:09.264 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.265 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.265 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000659(String)
2021-07-10 22:27:09.266 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.267 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.267 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000660(String)
2021-07-10 22:27:09.267 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.268 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.268 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000661(String)
2021-07-10 22:27:09.268 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.269 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.269 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000662(String)
2021-07-10 22:27:09.269 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.270 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.270 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000663(String)
2021-07-10 22:27:09.270 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.271 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.271 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000664(String)
2021-07-10 22:27:09.271 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.273 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.273 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000665(String)
2021-07-10 22:27:09.274 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.276 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.276 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000666(String)
2021-07-10 22:27:09.276 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.278 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.278 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000667(String)
2021-07-10 22:27:09.279 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.280 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.280 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000668(String)
2021-07-10 22:27:09.280 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.282 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.282 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000669(String)
2021-07-10 22:27:09.282 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.284 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.284 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000670(String)
2021-07-10 22:27:09.284 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.286 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.286 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000671(String)
2021-07-10 22:27:09.286 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.288 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.288 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000672(String)
2021-07-10 22:27:09.288 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.289 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.290 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000673(String)
2021-07-10 22:27:09.290 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.291 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.291 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000674(String)
2021-07-10 22:27:09.291 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.293 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.293 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000675(String)
2021-07-10 22:27:09.294 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.296 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.296 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000676(String)
2021-07-10 22:27:09.296 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.297 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.297 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000677(String)
2021-07-10 22:27:09.298 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.299 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.300 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000678(String)
2021-07-10 22:27:09.300 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.301 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.301 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000679(String)
2021-07-10 22:27:09.301 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.302 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.302 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000680(String)
2021-07-10 22:27:09.303 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.304 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.304 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000681(String)
2021-07-10 22:27:09.304 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.305 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.305 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000682(String)
2021-07-10 22:27:09.305 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.307 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.307 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000683(String)
2021-07-10 22:27:09.307 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.308 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.309 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000684(String)
2021-07-10 22:27:09.309 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.311 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.311 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000685(String)
2021-07-10 22:27:09.311 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.313 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.313 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000686(String)
2021-07-10 22:27:09.313 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.314 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.314 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000687(String)
2021-07-10 22:27:09.314 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.316 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.316 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000688(String)
2021-07-10 22:27:09.316 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.317 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.317 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000689(String)
2021-07-10 22:27:09.318 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.319 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.319 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000690(String)
2021-07-10 22:27:09.319 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.320 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.320 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000691(String)
2021-07-10 22:27:09.321 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.322 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.322 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000692(String)
2021-07-10 22:27:09.323 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.324 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.324 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000693(String)
2021-07-10 22:27:09.324 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.326 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.326 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000694(String)
2021-07-10 22:27:09.327 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.329 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.329 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000695(String)
2021-07-10 22:27:09.329 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.331 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.331 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000696(String)
2021-07-10 22:27:09.331 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.333 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.333 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000697(String)
2021-07-10 22:27:09.333 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.335 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.335 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000698(String)
2021-07-10 22:27:09.336 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.337 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.337 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000699(String)
2021-07-10 22:27:09.337 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.339 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.339 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000700(String)
2021-07-10 22:27:09.339 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.341 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.341 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000701(String)
2021-07-10 22:27:09.342 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.343 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.343 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000702(String)
2021-07-10 22:27:09.343 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.345 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.345 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000703(String)
2021-07-10 22:27:09.345 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.346 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.346 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000704(String)
2021-07-10 22:27:09.347 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.348 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.348 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000705(String)
2021-07-10 22:27:09.348 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.350 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.350 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000706(String)
2021-07-10 22:27:09.350 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.351 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.351 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000707(String)
2021-07-10 22:27:09.351 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.352 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.352 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000708(String)
2021-07-10 22:27:09.353 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.354 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.354 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000709(String)
2021-07-10 22:27:09.354 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.355 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.355 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000710(String)
2021-07-10 22:27:09.355 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.357 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.357 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000711(String)
2021-07-10 22:27:09.358 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.359 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.359 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000712(String)
2021-07-10 22:27:09.359 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.361 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.361 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000713(String)
2021-07-10 22:27:09.361 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.363 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.363 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000714(String)
2021-07-10 22:27:09.363 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.364 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.364 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000715(String)
2021-07-10 22:27:09.364 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.365 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.365 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000716(String)
2021-07-10 22:27:09.365 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.366 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.366 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000717(String)
2021-07-10 22:27:09.367 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.368 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.368 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000718(String)
2021-07-10 22:27:09.368 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.369 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.370 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000719(String)
2021-07-10 22:27:09.370 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.371 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.371 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000720(String)
2021-07-10 22:27:09.371 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.372 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.372 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000721(String)
2021-07-10 22:27:09.372 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.373 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.373 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000722(String)
2021-07-10 22:27:09.373 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.374 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.374 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000723(String)
2021-07-10 22:27:09.375 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.376 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.376 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000724(String)
2021-07-10 22:27:09.376 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.377 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.377 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000725(String)
2021-07-10 22:27:09.377 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.378 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.378 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000726(String)
2021-07-10 22:27:09.379 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.379 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.380 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000727(String)
2021-07-10 22:27:09.380 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.381 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.381 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000728(String)
2021-07-10 22:27:09.381 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.382 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.382 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000729(String)
2021-07-10 22:27:09.382 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.383 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.383 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000730(String)
2021-07-10 22:27:09.384 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.385 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.385 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000731(String)
2021-07-10 22:27:09.385 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.386 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.386 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000732(String)
2021-07-10 22:27:09.386 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.387 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.387 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000733(String)
2021-07-10 22:27:09.387 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.388 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.388 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000734(String)
2021-07-10 22:27:09.388 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.389 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.389 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000735(String)
2021-07-10 22:27:09.389 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.390 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.390 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000736(String)
2021-07-10 22:27:09.390 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.391 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.391 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000737(String)
2021-07-10 22:27:09.392 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.392 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.393 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000738(String)
2021-07-10 22:27:09.393 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.394 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.394 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000739(String)
2021-07-10 22:27:09.395 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.395 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.395 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000740(String)
2021-07-10 22:27:09.396 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.397 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.397 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000741(String)
2021-07-10 22:27:09.397 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.398 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.398 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000742(String)
2021-07-10 22:27:09.398 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.399 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.399 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000743(String)
2021-07-10 22:27:09.399 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.400 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.400 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000744(String)
2021-07-10 22:27:09.400 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.401 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.401 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000745(String)
2021-07-10 22:27:09.402 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.402 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.403 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000746(String)
2021-07-10 22:27:09.403 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.404 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.404 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000747(String)
2021-07-10 22:27:09.404 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.405 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.406 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000748(String)
2021-07-10 22:27:09.406 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.407 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.407 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000749(String)
2021-07-10 22:27:09.407 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.408 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.408 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000750(String)
2021-07-10 22:27:09.409 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.410 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.410 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000751(String)
2021-07-10 22:27:09.411 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.413 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.413 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000752(String)
2021-07-10 22:27:09.413 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.415 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.415 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000753(String)
2021-07-10 22:27:09.415 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.416 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.416 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000754(String)
2021-07-10 22:27:09.416 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.417 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.417 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000755(String)
2021-07-10 22:27:09.418 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.419 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.419 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000756(String)
2021-07-10 22:27:09.419 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.420 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.420 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000757(String)
2021-07-10 22:27:09.420 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.421 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.421 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000758(String)
2021-07-10 22:27:09.421 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.422 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.422 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000759(String)
2021-07-10 22:27:09.422 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.423 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.423 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000760(String)
2021-07-10 22:27:09.423 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.424 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.425 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000761(String)
2021-07-10 22:27:09.425 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.426 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.426 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000762(String)
2021-07-10 22:27:09.427 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.428 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.428 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000763(String)
2021-07-10 22:27:09.428 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.429 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.429 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000764(String)
2021-07-10 22:27:09.429 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.430 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.430 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000765(String)
2021-07-10 22:27:09.430 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.431 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.431 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000766(String)
2021-07-10 22:27:09.431 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.433 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.433 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000767(String)
2021-07-10 22:27:09.434 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.436 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.437 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000768(String)
2021-07-10 22:27:09.437 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.439 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.439 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000769(String)
2021-07-10 22:27:09.439 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.441 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.441 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000770(String)
2021-07-10 22:27:09.442 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.444 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.444 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000771(String)
2021-07-10 22:27:09.444 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.446 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.446 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000772(String)
2021-07-10 22:27:09.447 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.448 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.448 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000773(String)
2021-07-10 22:27:09.449 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.450 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.450 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000774(String)
2021-07-10 22:27:09.450 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.452 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.452 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000775(String)
2021-07-10 22:27:09.452 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.454 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.454 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000776(String)
2021-07-10 22:27:09.454 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.455 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.455 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000777(String)
2021-07-10 22:27:09.456 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.457 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.457 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000778(String)
2021-07-10 22:27:09.457 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.459 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.459 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000779(String)
2021-07-10 22:27:09.459 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.461 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.461 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000780(String)
2021-07-10 22:27:09.462 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.463 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.464 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000781(String)
2021-07-10 22:27:09.464 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.466 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.467 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000782(String)
2021-07-10 22:27:09.467 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.469 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.469 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000783(String)
2021-07-10 22:27:09.469 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.471 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.471 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000784(String)
2021-07-10 22:27:09.471 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.472 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.472 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000785(String)
2021-07-10 22:27:09.473 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.474 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.474 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000786(String)
2021-07-10 22:27:09.474 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.476 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.476 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000787(String)
2021-07-10 22:27:09.477 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.479 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.479 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000788(String)
2021-07-10 22:27:09.479 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.481 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.481 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000789(String)
2021-07-10 22:27:09.482 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.484 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.484 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000790(String)
2021-07-10 22:27:09.484 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.486 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.486 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000791(String)
2021-07-10 22:27:09.486 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.487 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.488 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000792(String)
2021-07-10 22:27:09.488 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.490 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.490 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000793(String)
2021-07-10 22:27:09.490 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.492 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.492 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000794(String)
2021-07-10 22:27:09.492 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.495 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.495 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000795(String)
2021-07-10 22:27:09.496 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.498 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.498 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000796(String)
2021-07-10 22:27:09.499 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.501 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.501 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000797(String)
2021-07-10 22:27:09.502 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.504 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.504 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000798(String)
2021-07-10 22:27:09.504 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.507 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.507 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000799(String)
2021-07-10 22:27:09.507 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.510 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.510 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000800(String)
2021-07-10 22:27:09.510 DEBUG 36520 --- [http-nio-8888-exec-68] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.513 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.513 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000801(String)
2021-07-10 22:27:09.513 DEBUG 36520 --- [http-nio-8888-exec-141] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.515 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.515 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000802(String)
2021-07-10 22:27:09.516 DEBUG 36520 --- [http-nio-8888-exec-179] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.518 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.518 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000803(String)
2021-07-10 22:27:09.518 DEBUG 36520 --- [http-nio-8888-exec-96] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.520 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.521 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000804(String)
2021-07-10 22:27:09.521 DEBUG 36520 --- [http-nio-8888-exec-154] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.523 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.523 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000805(String)
2021-07-10 22:27:09.524 DEBUG 36520 --- [http-nio-8888-exec-123] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.526 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.526 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000806(String)
2021-07-10 22:27:09.526 DEBUG 36520 --- [http-nio-8888-exec-166] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.528 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.528 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000807(String)
2021-07-10 22:27:09.529 DEBUG 36520 --- [http-nio-8888-exec-144] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.531 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.531 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000808(String)
2021-07-10 22:27:09.532 DEBUG 36520 --- [http-nio-8888-exec-109] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.534 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.534 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000809(String)
2021-07-10 22:27:09.535 DEBUG 36520 --- [http-nio-8888-exec-45] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.536 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.536 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000810(String)
2021-07-10 22:27:09.537 DEBUG 36520 --- [http-nio-8888-exec-98] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.539 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.539 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000811(String)
2021-07-10 22:27:09.539 DEBUG 36520 --- [http-nio-8888-exec-137] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.541 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.541 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000812(String)
2021-07-10 22:27:09.541 DEBUG 36520 --- [http-nio-8888-exec-200] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.543 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.544 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000813(String)
2021-07-10 22:27:09.544 DEBUG 36520 --- [http-nio-8888-exec-103] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.546 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.547 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000814(String)
2021-07-10 22:27:09.547 DEBUG 36520 --- [http-nio-8888-exec-88] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.549 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.549 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000815(String)
2021-07-10 22:27:09.550 DEBUG 36520 --- [http-nio-8888-exec-169] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.552 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.552 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000816(String)
2021-07-10 22:27:09.552 DEBUG 36520 --- [http-nio-8888-exec-100] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.553 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.553 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000817(String)
2021-07-10 22:27:09.554 DEBUG 36520 --- [http-nio-8888-exec-159] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.555 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.555 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000818(String)
2021-07-10 22:27:09.555 DEBUG 36520 --- [http-nio-8888-exec-111] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.557 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.557 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000819(String)
2021-07-10 22:27:09.558 DEBUG 36520 --- [http-nio-8888-exec-26] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.560 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.560 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000820(String)
2021-07-10 22:27:09.560 DEBUG 36520 --- [http-nio-8888-exec-132] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.562 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.562 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000821(String)
2021-07-10 22:27:09.563 DEBUG 36520 --- [http-nio-8888-exec-180] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.565 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.565 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000822(String)
2021-07-10 22:27:09.565 DEBUG 36520 --- [http-nio-8888-exec-143] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.567 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.568 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000823(String)
2021-07-10 22:27:09.568 DEBUG 36520 --- [http-nio-8888-exec-17] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.570 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.570 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000824(String)
2021-07-10 22:27:09.570 DEBUG 36520 --- [http-nio-8888-exec-31] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.573 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.573 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000825(String)
2021-07-10 22:27:09.573 DEBUG 36520 --- [http-nio-8888-exec-95] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.575 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.575 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000826(String)
2021-07-10 22:27:09.575 DEBUG 36520 --- [http-nio-8888-exec-177] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.578 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.578 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000827(String)
2021-07-10 22:27:09.578 DEBUG 36520 --- [http-nio-8888-exec-158] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.580 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.580 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000828(String)
2021-07-10 22:27:09.580 DEBUG 36520 --- [http-nio-8888-exec-149] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.582 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.582 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000829(String)
2021-07-10 22:27:09.583 DEBUG 36520 --- [http-nio-8888-exec-101] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.584 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.584 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000830(String)
2021-07-10 22:27:09.584 DEBUG 36520 --- [http-nio-8888-exec-187] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.585 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.585 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000831(String)
2021-07-10 22:27:09.585 DEBUG 36520 --- [http-nio-8888-exec-102] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.586 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.586 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000832(String)
2021-07-10 22:27:09.587 DEBUG 36520 --- [http-nio-8888-exec-15] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.588 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.588 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000833(String)
2021-07-10 22:27:09.589 DEBUG 36520 --- [http-nio-8888-exec-176] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.590 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.590 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000834(String)
2021-07-10 22:27:09.590 DEBUG 36520 --- [http-nio-8888-exec-110] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.591 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.591 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000835(String)
2021-07-10 22:27:09.592 DEBUG 36520 --- [http-nio-8888-exec-197] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.593 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.594 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000836(String)
2021-07-10 22:27:09.594 DEBUG 36520 --- [http-nio-8888-exec-156] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.596 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.596 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000837(String)
2021-07-10 22:27:09.596 DEBUG 36520 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.597 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.597 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000838(String)
2021-07-10 22:27:09.598 DEBUG 36520 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.599 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.599 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000839(String)
2021-07-10 22:27:09.599 DEBUG 36520 --- [http-nio-8888-exec-170] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.601 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.601 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000840(String)
2021-07-10 22:27:09.601 DEBUG 36520 --- [http-nio-8888-exec-30] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.604 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.604 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000841(String)
2021-07-10 22:27:09.604 DEBUG 36520 --- [http-nio-8888-exec-127] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.607 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.607 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000842(String)
2021-07-10 22:27:09.608 DEBUG 36520 --- [http-nio-8888-exec-32] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.610 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.611 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000843(String)
2021-07-10 22:27:09.611 DEBUG 36520 --- [http-nio-8888-exec-194] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.614 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.614 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000844(String)
2021-07-10 22:27:09.615 DEBUG 36520 --- [http-nio-8888-exec-57] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.618 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.618 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000845(String)
2021-07-10 22:27:09.619 DEBUG 36520 --- [http-nio-8888-exec-186] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.621 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.622 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000846(String)
2021-07-10 22:27:09.622 DEBUG 36520 --- [http-nio-8888-exec-140] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.624 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.625 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000847(String)
2021-07-10 22:27:09.625 DEBUG 36520 --- [http-nio-8888-exec-147] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.628 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.628 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000848(String)
2021-07-10 22:27:09.629 DEBUG 36520 --- [http-nio-8888-exec-60] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.631 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.631 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000849(String)
2021-07-10 22:27:09.632 DEBUG 36520 --- [http-nio-8888-exec-46] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.635 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.635 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000850(String)
2021-07-10 22:27:09.635 DEBUG 36520 --- [http-nio-8888-exec-42] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.637 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.637 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000851(String)
2021-07-10 22:27:09.638 DEBUG 36520 --- [http-nio-8888-exec-29] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.639 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.639 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000852(String)
2021-07-10 22:27:09.640 DEBUG 36520 --- [http-nio-8888-exec-185] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.642 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.643 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000853(String)
2021-07-10 22:27:09.643 DEBUG 36520 --- [http-nio-8888-exec-69] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.646 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.646 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000854(String)
2021-07-10 22:27:09.646 DEBUG 36520 --- [http-nio-8888-exec-164] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.649 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.649 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000855(String)
2021-07-10 22:27:09.649 DEBUG 36520 --- [http-nio-8888-exec-124] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.652 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.652 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000856(String)
2021-07-10 22:27:09.653 DEBUG 36520 --- [http-nio-8888-exec-178] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.656 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.656 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000857(String)
2021-07-10 22:27:09.656 DEBUG 36520 --- [http-nio-8888-exec-11] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.658 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.659 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000858(String)
2021-07-10 22:27:09.659 DEBUG 36520 --- [http-nio-8888-exec-198] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.661 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.661 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000859(String)
2021-07-10 22:27:09.662 DEBUG 36520 --- [http-nio-8888-exec-113] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.664 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.664 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000860(String)
2021-07-10 22:27:09.664 DEBUG 36520 --- [http-nio-8888-exec-20] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.666 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.667 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000861(String)
2021-07-10 22:27:09.667 DEBUG 36520 --- [http-nio-8888-exec-122] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.670 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.670 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000862(String)
2021-07-10 22:27:09.670 DEBUG 36520 --- [http-nio-8888-exec-190] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.672 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.672 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000863(String)
2021-07-10 22:27:09.673 DEBUG 36520 --- [http-nio-8888-exec-82] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.675 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.675 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000864(String)
2021-07-10 22:27:09.675 DEBUG 36520 --- [http-nio-8888-exec-168] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.678 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.678 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000865(String)
2021-07-10 22:27:09.679 DEBUG 36520 --- [http-nio-8888-exec-128] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.681 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.681 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000866(String)
2021-07-10 22:27:09.681 DEBUG 36520 --- [http-nio-8888-exec-131] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.683 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.683 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000867(String)
2021-07-10 22:27:09.684 DEBUG 36520 --- [http-nio-8888-exec-22] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.686 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.686 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000868(String)
2021-07-10 22:27:09.687 DEBUG 36520 --- [http-nio-8888-exec-56] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.689 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.689 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000869(String)
2021-07-10 22:27:09.689 DEBUG 36520 --- [http-nio-8888-exec-39] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.691 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.691 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000870(String)
2021-07-10 22:27:09.691 DEBUG 36520 --- [http-nio-8888-exec-53] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.693 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.693 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000871(String)
2021-07-10 22:27:09.694 DEBUG 36520 --- [http-nio-8888-exec-173] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.696 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.696 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000872(String)
2021-07-10 22:27:09.697 DEBUG 36520 --- [http-nio-8888-exec-77] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.698 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.699 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000873(String)
2021-07-10 22:27:09.699 DEBUG 36520 --- [http-nio-8888-exec-64] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.700 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.700 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000874(String)
2021-07-10 22:27:09.701 DEBUG 36520 --- [http-nio-8888-exec-70] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.702 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.702 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000875(String)
2021-07-10 22:27:09.702 DEBUG 36520 --- [http-nio-8888-exec-9] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.703 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.704 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000876(String)
2021-07-10 22:27:09.704 DEBUG 36520 --- [http-nio-8888-exec-157] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.706 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.707 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000877(String)
2021-07-10 22:27:09.707 DEBUG 36520 --- [http-nio-8888-exec-83] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.708 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.709 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000878(String)
2021-07-10 22:27:09.709 DEBUG 36520 --- [http-nio-8888-exec-151] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.711 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.711 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000879(String)
2021-07-10 22:27:09.711 DEBUG 36520 --- [http-nio-8888-exec-48] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.713 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.713 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000880(String)
2021-07-10 22:27:09.713 DEBUG 36520 --- [http-nio-8888-exec-35] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.714 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.715 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000881(String)
2021-07-10 22:27:09.715 DEBUG 36520 --- [http-nio-8888-exec-79] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.717 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.717 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000882(String)
2021-07-10 22:27:09.718 DEBUG 36520 --- [http-nio-8888-exec-106] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.720 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.720 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000883(String)
2021-07-10 22:27:09.721 DEBUG 36520 --- [http-nio-8888-exec-135] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.722 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.722 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000884(String)
2021-07-10 22:27:09.723 DEBUG 36520 --- [http-nio-8888-exec-50] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.724 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.725 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000885(String)
2021-07-10 22:27:09.725 DEBUG 36520 --- [http-nio-8888-exec-3] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.727 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.727 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000886(String)
2021-07-10 22:27:09.727 DEBUG 36520 --- [http-nio-8888-exec-150] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.729 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.730 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000887(String)
2021-07-10 22:27:09.730 DEBUG 36520 --- [http-nio-8888-exec-75] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.732 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.732 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000888(String)
2021-07-10 22:27:09.733 DEBUG 36520 --- [http-nio-8888-exec-136] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.735 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.735 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000889(String)
2021-07-10 22:27:09.735 DEBUG 36520 --- [http-nio-8888-exec-138] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.738 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.738 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000890(String)
2021-07-10 22:27:09.738 DEBUG 36520 --- [http-nio-8888-exec-126] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.740 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.740 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000891(String)
2021-07-10 22:27:09.741 DEBUG 36520 --- [http-nio-8888-exec-76] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.742 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.742 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000892(String)
2021-07-10 22:27:09.743 DEBUG 36520 --- [http-nio-8888-exec-195] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.745 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.745 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000893(String)
2021-07-10 22:27:09.746 DEBUG 36520 --- [http-nio-8888-exec-125] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.749 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.749 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000894(String)
2021-07-10 22:27:09.749 DEBUG 36520 --- [http-nio-8888-exec-49] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.752 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.752 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000895(String)
2021-07-10 22:27:09.752 DEBUG 36520 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.755 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.755 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000896(String)
2021-07-10 22:27:09.755 DEBUG 36520 --- [http-nio-8888-exec-72] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.757 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.757 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000897(String)
2021-07-10 22:27:09.758 DEBUG 36520 --- [http-nio-8888-exec-199] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.760 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.760 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000898(String)
2021-07-10 22:27:09.760 DEBUG 36520 --- [http-nio-8888-exec-121] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.762 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.762 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000899(String)
2021-07-10 22:27:09.763 DEBUG 36520 --- [http-nio-8888-exec-62] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.765 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.765 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000900(String)
2021-07-10 22:27:09.765 DEBUG 36520 --- [http-nio-8888-exec-28] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.767 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.767 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000901(String)
2021-07-10 22:27:09.767 DEBUG 36520 --- [http-nio-8888-exec-81] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.769 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.769 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000902(String)
2021-07-10 22:27:09.769 DEBUG 36520 --- [http-nio-8888-exec-115] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.770 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.771 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000903(String)
2021-07-10 22:27:09.771 DEBUG 36520 --- [http-nio-8888-exec-171] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.772 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.772 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000904(String)
2021-07-10 22:27:09.772 DEBUG 36520 --- [http-nio-8888-exec-181] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.774 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.774 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000905(String)
2021-07-10 22:27:09.774 DEBUG 36520 --- [http-nio-8888-exec-112] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.775 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.775 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000906(String)
2021-07-10 22:27:09.775 DEBUG 36520 --- [http-nio-8888-exec-37] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.777 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.777 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000907(String)
2021-07-10 22:27:09.777 DEBUG 36520 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.779 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.779 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000908(String)
2021-07-10 22:27:09.779 DEBUG 36520 --- [http-nio-8888-exec-117] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.780 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.780 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000909(String)
2021-07-10 22:27:09.781 DEBUG 36520 --- [http-nio-8888-exec-162] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.782 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.782 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000910(String)
2021-07-10 22:27:09.783 DEBUG 36520 --- [http-nio-8888-exec-192] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.785 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.785 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000911(String)
2021-07-10 22:27:09.785 DEBUG 36520 --- [http-nio-8888-exec-116] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.787 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.788 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000912(String)
2021-07-10 22:27:09.788 DEBUG 36520 --- [http-nio-8888-exec-78] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.789 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.789 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000913(String)
2021-07-10 22:27:09.789 DEBUG 36520 --- [http-nio-8888-exec-148] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.790 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.790 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000914(String)
2021-07-10 22:27:09.790 DEBUG 36520 --- [http-nio-8888-exec-129] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.791 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.791 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000915(String)
2021-07-10 22:27:09.791 DEBUG 36520 --- [http-nio-8888-exec-188] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.792 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.792 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000916(String)
2021-07-10 22:27:09.792 DEBUG 36520 --- [http-nio-8888-exec-51] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.793 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.793 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000917(String)
2021-07-10 22:27:09.794 DEBUG 36520 --- [http-nio-8888-exec-105] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.795 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.795 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000918(String)
2021-07-10 22:27:09.795 DEBUG 36520 --- [http-nio-8888-exec-12] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.797 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.797 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000919(String)
2021-07-10 22:27:09.797 DEBUG 36520 --- [http-nio-8888-exec-94] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.799 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.799 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000920(String)
2021-07-10 22:27:09.799 DEBUG 36520 --- [http-nio-8888-exec-163] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.800 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.800 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000921(String)
2021-07-10 22:27:09.800 DEBUG 36520 --- [http-nio-8888-exec-193] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.801 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.801 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000922(String)
2021-07-10 22:27:09.802 DEBUG 36520 --- [http-nio-8888-exec-183] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.803 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.803 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000923(String)
2021-07-10 22:27:09.803 DEBUG 36520 --- [http-nio-8888-exec-73] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.804 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.804 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000924(String)
2021-07-10 22:27:09.804 DEBUG 36520 --- [http-nio-8888-exec-139] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.805 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.805 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000925(String)
2021-07-10 22:27:09.805 DEBUG 36520 --- [http-nio-8888-exec-130] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.807 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.807 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000926(String)
2021-07-10 22:27:09.807 DEBUG 36520 --- [http-nio-8888-exec-86] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.809 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.809 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000927(String)
2021-07-10 22:27:09.809 DEBUG 36520 --- [http-nio-8888-exec-27] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.811 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.811 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000928(String)
2021-07-10 22:27:09.812 DEBUG 36520 --- [http-nio-8888-exec-167] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.813 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.813 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000929(String)
2021-07-10 22:27:09.813 DEBUG 36520 --- [http-nio-8888-exec-92] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.815 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.815 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000930(String)
2021-07-10 22:27:09.815 DEBUG 36520 --- [http-nio-8888-exec-172] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.816 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.816 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000931(String)
2021-07-10 22:27:09.816 DEBUG 36520 --- [http-nio-8888-exec-33] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.817 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.817 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000932(String)
2021-07-10 22:27:09.817 DEBUG 36520 --- [http-nio-8888-exec-189] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.818 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.818 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000933(String)
2021-07-10 22:27:09.819 DEBUG 36520 --- [http-nio-8888-exec-146] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.819 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.819 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000934(String)
2021-07-10 22:27:09.820 DEBUG 36520 --- [http-nio-8888-exec-47] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.821 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.821 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000935(String)
2021-07-10 22:27:09.821 DEBUG 36520 --- [http-nio-8888-exec-184] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.823 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.823 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000936(String)
2021-07-10 22:27:09.823 DEBUG 36520 --- [http-nio-8888-exec-118] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.824 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.825 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000937(String)
2021-07-10 22:27:09.825 DEBUG 36520 --- [http-nio-8888-exec-52] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.827 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.827 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000938(String)
2021-07-10 22:27:09.827 DEBUG 36520 --- [http-nio-8888-exec-196] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.829 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.829 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000939(String)
2021-07-10 22:27:09.829 DEBUG 36520 --- [http-nio-8888-exec-191] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.831 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.831 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000940(String)
2021-07-10 22:27:09.831 DEBUG 36520 --- [http-nio-8888-exec-43] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.833 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.833 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000941(String)
2021-07-10 22:27:09.833 DEBUG 36520 --- [http-nio-8888-exec-104] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.835 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.835 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000942(String)
2021-07-10 22:27:09.836 DEBUG 36520 --- [http-nio-8888-exec-80] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.838 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.838 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000943(String)
2021-07-10 22:27:09.838 DEBUG 36520 --- [http-nio-8888-exec-97] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.840 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.840 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000944(String)
2021-07-10 22:27:09.840 DEBUG 36520 --- [http-nio-8888-exec-58] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.842 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.842 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000945(String)
2021-07-10 22:27:09.843 DEBUG 36520 --- [http-nio-8888-exec-87] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.845 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.845 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000946(String)
2021-07-10 22:27:09.845 DEBUG 36520 --- [http-nio-8888-exec-34] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.848 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.848 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000947(String)
2021-07-10 22:27:09.848 DEBUG 36520 --- [http-nio-8888-exec-91] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.850 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.850 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000948(String)
2021-07-10 22:27:09.850 DEBUG 36520 --- [http-nio-8888-exec-7] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.852 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.852 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000949(String)
2021-07-10 22:27:09.853 DEBUG 36520 --- [http-nio-8888-exec-61] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.855 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.855 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000950(String)
2021-07-10 22:27:09.855 DEBUG 36520 --- [http-nio-8888-exec-55] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.857 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.857 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000951(String)
2021-07-10 22:27:09.858 DEBUG 36520 --- [http-nio-8888-exec-18] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.860 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.860 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000952(String)
2021-07-10 22:27:09.861 DEBUG 36520 --- [http-nio-8888-exec-14] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.863 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.863 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000953(String)
2021-07-10 22:27:09.863 DEBUG 36520 --- [http-nio-8888-exec-133] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.865 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.865 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000954(String)
2021-07-10 22:27:09.866 DEBUG 36520 --- [http-nio-8888-exec-23] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.868 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.868 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000955(String)
2021-07-10 22:27:09.868 DEBUG 36520 --- [http-nio-8888-exec-44] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.870 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.870 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000956(String)
2021-07-10 22:27:09.871 DEBUG 36520 --- [http-nio-8888-exec-175] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.873 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.873 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000957(String)
2021-07-10 22:27:09.873 DEBUG 36520 --- [http-nio-8888-exec-66] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.875 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.875 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000958(String)
2021-07-10 22:27:09.876 DEBUG 36520 --- [http-nio-8888-exec-152] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.878 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.878 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000959(String)
2021-07-10 22:27:09.878 DEBUG 36520 --- [http-nio-8888-exec-134] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.880 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.880 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000960(String)
2021-07-10 22:27:09.880 DEBUG 36520 --- [http-nio-8888-exec-36] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.882 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.882 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000961(String)
2021-07-10 22:27:09.883 DEBUG 36520 --- [http-nio-8888-exec-114] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.885 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.885 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000962(String)
2021-07-10 22:27:09.885 DEBUG 36520 --- [http-nio-8888-exec-19] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.886 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.886 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000963(String)
2021-07-10 22:27:09.887 DEBUG 36520 --- [http-nio-8888-exec-67] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.887 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.887 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000964(String)
2021-07-10 22:27:09.888 DEBUG 36520 --- [http-nio-8888-exec-41] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.888 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.888 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000965(String)
2021-07-10 22:27:09.889 DEBUG 36520 --- [http-nio-8888-exec-165] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.889 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.889 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000966(String)
2021-07-10 22:27:09.890 DEBUG 36520 --- [http-nio-8888-exec-119] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.891 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.891 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000967(String)
2021-07-10 22:27:09.891 DEBUG 36520 --- [http-nio-8888-exec-54] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.892 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.892 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000968(String)
2021-07-10 22:27:09.892 DEBUG 36520 --- [http-nio-8888-exec-99] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.893 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.893 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000969(String)
2021-07-10 22:27:09.894 DEBUG 36520 --- [http-nio-8888-exec-84] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.895 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.895 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000970(String)
2021-07-10 22:27:09.895 DEBUG 36520 --- [http-nio-8888-exec-63] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.896 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.896 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000971(String)
2021-07-10 22:27:09.896 DEBUG 36520 --- [http-nio-8888-exec-145] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.897 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.897 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000972(String)
2021-07-10 22:27:09.897 DEBUG 36520 --- [http-nio-8888-exec-5] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.898 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.898 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000973(String)
2021-07-10 22:27:09.898 DEBUG 36520 --- [http-nio-8888-exec-65] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.899 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.899 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000974(String)
2021-07-10 22:27:09.899 DEBUG 36520 --- [http-nio-8888-exec-71] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.900 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.900 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000975(String)
2021-07-10 22:27:09.900 DEBUG 36520 --- [http-nio-8888-exec-108] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.901 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.901 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000976(String)
2021-07-10 22:27:09.902 DEBUG 36520 --- [http-nio-8888-exec-25] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.903 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.903 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000977(String)
2021-07-10 22:27:09.903 DEBUG 36520 --- [http-nio-8888-exec-174] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.904 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.904 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000978(String)
2021-07-10 22:27:09.904 DEBUG 36520 --- [http-nio-8888-exec-59] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.905 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.905 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000979(String)
2021-07-10 22:27:09.905 DEBUG 36520 --- [http-nio-8888-exec-21] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.906 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.906 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000980(String)
2021-07-10 22:27:09.906 DEBUG 36520 --- [http-nio-8888-exec-107] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.907 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.907 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000981(String)
2021-07-10 22:27:09.907 DEBUG 36520 --- [http-nio-8888-exec-16] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.908 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.908 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000982(String)
2021-07-10 22:27:09.908 DEBUG 36520 --- [http-nio-8888-exec-155] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.909 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.909 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000983(String)
2021-07-10 22:27:09.910 DEBUG 36520 --- [http-nio-8888-exec-93] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.911 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.911 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000984(String)
2021-07-10 22:27:09.911 DEBUG 36520 --- [http-nio-8888-exec-160] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.912 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.912 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000985(String)
2021-07-10 22:27:09.912 DEBUG 36520 --- [http-nio-8888-exec-153] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.913 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.913 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000986(String)
2021-07-10 22:27:09.913 DEBUG 36520 --- [http-nio-8888-exec-6] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.914 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.914 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000987(String)
2021-07-10 22:27:09.914 DEBUG 36520 --- [http-nio-8888-exec-90] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.915 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.915 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000988(String)
2021-07-10 22:27:09.916 DEBUG 36520 --- [http-nio-8888-exec-182] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.916 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.917 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000989(String)
2021-07-10 22:27:09.917 DEBUG 36520 --- [http-nio-8888-exec-89] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.917 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.918 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000990(String)
2021-07-10 22:27:09.918 DEBUG 36520 --- [http-nio-8888-exec-85] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.919 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.919 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000991(String)
2021-07-10 22:27:09.919 DEBUG 36520 --- [http-nio-8888-exec-38] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.920 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.920 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000992(String)
2021-07-10 22:27:09.920 DEBUG 36520 --- [http-nio-8888-exec-24] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.921 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.921 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000993(String)
2021-07-10 22:27:09.922 DEBUG 36520 --- [http-nio-8888-exec-40] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.923 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.923 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000994(String)
2021-07-10 22:27:09.923 DEBUG 36520 --- [http-nio-8888-exec-74] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.924 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.924 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000995(String)
2021-07-10 22:27:09.924 DEBUG 36520 --- [http-nio-8888-exec-120] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.925 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.925 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000996(String)
2021-07-10 22:27:09.925 DEBUG 36520 --- [http-nio-8888-exec-13] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.926 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.927 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000997(String)
2021-07-10 22:27:09.927 DEBUG 36520 --- [http-nio-8888-exec-10] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.928 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.928 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000998(String)
2021-07-10 22:27:09.928 DEBUG 36520 --- [http-nio-8888-exec-142] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:09.929 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 22:27:09.929 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 13000000999(String)
2021-07-10 22:27:09.929 DEBUG 36520 --- [http-nio-8888-exec-161] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000114,"loginCount":1,"nickname":"user114","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-58] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000144,"loginCount":1,"nickname":"user144","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000098,"loginCount":1,"nickname":"user98","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-162] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000109,"loginCount":1,"nickname":"user109","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000119,"loginCount":1,"nickname":"user119","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000090,"loginCount":1,"nickname":"user90","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-83] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000077,"loginCount":1,"nickname":"user77","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.263  INFO 36520 --- [http-nio-8888-exec-36] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000161,"loginCount":1,"nickname":"user161","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000140,"loginCount":1,"nickname":"user140","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-128] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000065,"loginCount":1,"nickname":"user65","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000110,"loginCount":1,"nickname":"user110","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-26] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000019,"loginCount":1,"nickname":"user19","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000132,"loginCount":1,"nickname":"user132","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-169] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000015,"loginCount":1,"nickname":"user15","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-87] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000145,"loginCount":1,"nickname":"user145","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-112] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000105,"loginCount":1,"nickname":"user105","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-111] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000018,"loginCount":1,"nickname":"user18","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-186] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000045,"loginCount":1,"nickname":"user45","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-15] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000032,"loginCount":1,"nickname":"user32","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-69] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000053,"loginCount":1,"nickname":"user53","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000167,"loginCount":1,"nickname":"user167","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-166] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000006,"loginCount":1,"nickname":"user6","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.264  INFO 36520 --- [http-nio-8888-exec-80] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000142,"loginCount":1,"nickname":"user142","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-62] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000099,"loginCount":1,"nickname":"user99","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-181] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000104,"loginCount":1,"nickname":"user104","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000039,"loginCount":1,"nickname":"user39","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-177] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000025,"loginCount":1,"nickname":"user25","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-3] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000085,"loginCount":1,"nickname":"user85","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-138] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000089,"loginCount":1,"nickname":"user89","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-167] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000128,"loginCount":1,"nickname":"user128","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000048,"loginCount":1,"nickname":"user48","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-122] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000061,"loginCount":1,"nickname":"user61","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000069,"loginCount":1,"nickname":"user69","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.265  INFO 36520 --- [http-nio-8888-exec-17] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000023,"loginCount":1,"nickname":"user23","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.266  INFO 36520 --- [http-nio-8888-exec-67] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000163,"loginCount":1,"nickname":"user163","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.266  INFO 36520 --- [http-nio-8888-exec-190] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000062,"loginCount":1,"nickname":"user62","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.266  INFO 36520 --- [http-nio-8888-exec-73] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000124,"loginCount":1,"nickname":"user124","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.268  INFO 36520 --- [http-nio-8888-exec-100] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000016,"loginCount":1,"nickname":"user16","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.269  INFO 36520 --- [http-nio-8888-exec-139] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000123,"loginCount":1,"nickname":"user123","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.270  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000011,"loginCount":1,"nickname":"user11","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.281  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000022,"loginCount":1,"nickname":"user22","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.287  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000080,"loginCount":1,"nickname":"user80","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.288  INFO 36520 --- [http-nio-8888-exec-91] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000147,"loginCount":1,"nickname":"user147","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.288  INFO 36520 --- [http-nio-8888-exec-19] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000162,"loginCount":1,"nickname":"user162","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.288  INFO 36520 --- [http-nio-8888-exec-105] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000117,"loginCount":1,"nickname":"user117","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.305  INFO 36520 --- [http-nio-8888-exec-78] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000112,"loginCount":1,"nickname":"user112","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.307  INFO 36520 --- [http-nio-8888-exec-40] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000193,"loginCount":1,"nickname":"user193","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.308  INFO 36520 --- [http-nio-8888-exec-115] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000102,"loginCount":1,"nickname":"user102","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.308  INFO 36520 --- [http-nio-8888-exec-70] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000074,"loginCount":1,"nickname":"user74","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.308  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000149,"loginCount":1,"nickname":"user149","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.308  INFO 36520 --- [http-nio-8888-exec-45] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000009,"loginCount":1,"nickname":"user9","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.308  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000156,"loginCount":1,"nickname":"user156","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.309  INFO 36520 --- [http-nio-8888-exec-158] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000027,"loginCount":1,"nickname":"user27","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.309  INFO 36520 --- [http-nio-8888-exec-199] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000097,"loginCount":1,"nickname":"user97","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.309  INFO 36520 --- [http-nio-8888-exec-124] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000055,"loginCount":1,"nickname":"user55","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.309  INFO 36520 --- [http-nio-8888-exec-172] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000130,"loginCount":1,"nickname":"user130","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.310  INFO 36520 --- [http-nio-8888-exec-96] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000000,"loginCount":1,"nickname":"user0","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.310  INFO 36520 --- [http-nio-8888-exec-85] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000190,"loginCount":1,"nickname":"user190","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.310  INFO 36520 --- [http-nio-8888-exec-48] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000079,"loginCount":1,"nickname":"user79","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.310  INFO 36520 --- [http-nio-8888-exec-127] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000041,"loginCount":1,"nickname":"user41","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.310  INFO 36520 --- [http-nio-8888-exec-161] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000199,"loginCount":1,"nickname":"user199","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.311  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000192,"loginCount":1,"nickname":"user192","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.311  INFO 36520 --- [http-nio-8888-exec-74] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000194,"loginCount":1,"nickname":"user194","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.312  INFO 36520 --- [http-nio-8888-exec-107] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000180,"loginCount":1,"nickname":"user180","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.312  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000196,"loginCount":1,"nickname":"user196","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.312  INFO 36520 --- [http-nio-8888-exec-21] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000179,"loginCount":1,"nickname":"user179","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.312  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000120,"loginCount":1,"nickname":"user120","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.312  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000195,"loginCount":1,"nickname":"user195","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.313  INFO 36520 --- [http-nio-8888-exec-81] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000101,"loginCount":1,"nickname":"user101","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.313  INFO 36520 --- [http-nio-8888-exec-142] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000198,"loginCount":1,"nickname":"user198","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.313  INFO 36520 --- [http-nio-8888-exec-89] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000189,"loginCount":1,"nickname":"user189","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.314  INFO 36520 --- [http-nio-8888-exec-184] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000135,"loginCount":1,"nickname":"user135","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.314  INFO 36520 --- [http-nio-8888-exec-11] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000057,"loginCount":1,"nickname":"user57","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.314  INFO 36520 --- [http-nio-8888-exec-75] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000088,"loginCount":1,"nickname":"user88","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.314  INFO 36520 --- [http-nio-8888-exec-90] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000187,"loginCount":1,"nickname":"user187","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.315  INFO 36520 --- [http-nio-8888-exec-46] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000049,"loginCount":1,"nickname":"user49","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.315  INFO 36520 --- [http-nio-8888-exec-7] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000148,"loginCount":1,"nickname":"user148","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.315  INFO 36520 --- [http-nio-8888-exec-156] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000036,"loginCount":1,"nickname":"user36","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.315  INFO 36520 --- [http-nio-8888-exec-93] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000183,"loginCount":1,"nickname":"user183","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.315  INFO 36520 --- [http-nio-8888-exec-195] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000092,"loginCount":1,"nickname":"user92","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-27] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000127,"loginCount":1,"nickname":"user127","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-63] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000170,"loginCount":1,"nickname":"user170","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000146,"loginCount":1,"nickname":"user146","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-42] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000050,"loginCount":1,"nickname":"user50","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-55] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000150,"loginCount":1,"nickname":"user150","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-194] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000043,"loginCount":1,"nickname":"user43","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-149] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000028,"loginCount":1,"nickname":"user28","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000133,"loginCount":1,"nickname":"user133","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-106] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000082,"loginCount":1,"nickname":"user82","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-152] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000158,"loginCount":1,"nickname":"user158","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-30] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000040,"loginCount":1,"nickname":"user40","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000075,"loginCount":1,"nickname":"user75","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-171] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000103,"loginCount":1,"nickname":"user103","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-153] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000185,"loginCount":1,"nickname":"user185","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-135] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000083,"loginCount":1,"nickname":"user83","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-52] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000137,"loginCount":1,"nickname":"user137","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-16] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000181,"loginCount":1,"nickname":"user181","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-77] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000072,"loginCount":1,"nickname":"user72","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-200] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000012,"loginCount":1,"nickname":"user12","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-68] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000002,"loginCount":1,"nickname":"user2","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-71] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000174,"loginCount":1,"nickname":"user174","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-6] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000186,"loginCount":1,"nickname":"user186","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.316  INFO 36520 --- [http-nio-8888-exec-180] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000021,"loginCount":1,"nickname":"user21","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-101] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000029,"loginCount":1,"nickname":"user29","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-183] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000122,"loginCount":1,"nickname":"user122","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-113] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000059,"loginCount":1,"nickname":"user59","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-141] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000003,"loginCount":1,"nickname":"user3","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-1] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000107,"loginCount":1,"nickname":"user107","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-14] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000152,"loginCount":1,"nickname":"user152","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-191] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000139,"loginCount":1,"nickname":"user139","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-103] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000013,"loginCount":1,"nickname":"user13","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000086,"loginCount":1,"nickname":"user86","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-174] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000177,"loginCount":1,"nickname":"user177","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000126,"loginCount":1,"nickname":"user126","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-134] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000159,"loginCount":1,"nickname":"user159","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.317  INFO 36520 --- [http-nio-8888-exec-117] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000108,"loginCount":1,"nickname":"user108","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.318  INFO 36520 --- [http-nio-8888-exec-118] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000136,"loginCount":1,"nickname":"user136","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.318  INFO 36520 --- [http-nio-8888-exec-145] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000171,"loginCount":1,"nickname":"user171","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.318  INFO 36520 --- [http-nio-8888-exec-193] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000121,"loginCount":1,"nickname":"user121","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.318  INFO 36520 --- [http-nio-8888-exec-178] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000056,"loginCount":1,"nickname":"user56","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.318  INFO 36520 --- [http-nio-8888-exec-51] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000116,"loginCount":1,"nickname":"user116","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-28] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000100,"loginCount":1,"nickname":"user100","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-18] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000151,"loginCount":1,"nickname":"user151","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-32] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000042,"loginCount":1,"nickname":"user42","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-188] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000115,"loginCount":1,"nickname":"user115","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-187] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000030,"loginCount":1,"nickname":"user30","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-25] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000176,"loginCount":1,"nickname":"user176","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-98] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000010,"loginCount":1,"nickname":"user10","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-12] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000118,"loginCount":1,"nickname":"user118","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.319  INFO 36520 --- [http-nio-8888-exec-50] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000084,"loginCount":1,"nickname":"user84","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.320  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000131,"loginCount":1,"nickname":"user131","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.320  INFO 36520 --- [http-nio-8888-exec-116] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000111,"loginCount":1,"nickname":"user111","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.320  INFO 36520 --- [http-nio-8888-exec-5] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000172,"loginCount":1,"nickname":"user172","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.320  INFO 36520 --- [http-nio-8888-exec-20] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000060,"loginCount":1,"nickname":"user60","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.320  INFO 36520 --- [http-nio-8888-exec-72] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000096,"loginCount":1,"nickname":"user96","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.320  INFO 36520 --- [http-nio-8888-exec-198] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000058,"loginCount":1,"nickname":"user58","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.321  INFO 36520 --- [http-nio-8888-exec-47] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000134,"loginCount":1,"nickname":"user134","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-140] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000046,"loginCount":1,"nickname":"user46","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-196] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000138,"loginCount":1,"nickname":"user138","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.321  INFO 36520 --- [http-nio-8888-exec-197] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000035,"loginCount":1,"nickname":"user35","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.321  INFO 36520 --- [http-nio-8888-exec-22] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000067,"loginCount":1,"nickname":"user67","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-79] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000081,"loginCount":1,"nickname":"user81","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-64] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000073,"loginCount":1,"nickname":"user73","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000221,"loginCount":1,"nickname":"user221","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-165] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000165,"loginCount":1,"nickname":"user165","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000201,"loginCount":1,"nickname":"user201","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-190] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000211,"loginCount":1,"nickname":"user211","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-138] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000213,"loginCount":1,"nickname":"user213","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-122] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000200,"loginCount":1,"nickname":"user200","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-49] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000094,"loginCount":1,"nickname":"user94","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-110] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000034,"loginCount":1,"nickname":"user34","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-67] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000231,"loginCount":1,"nickname":"user231","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000054,"loginCount":1,"nickname":"user54","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-130] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000125,"loginCount":1,"nickname":"user125","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-168] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000064,"loginCount":1,"nickname":"user64","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-127] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000240,"loginCount":1,"nickname":"user240","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000078,"loginCount":1,"nickname":"user78","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000204,"loginCount":1,"nickname":"user204","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-80] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000238,"loginCount":1,"nickname":"user238","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-73] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000212,"loginCount":1,"nickname":"user212","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-59] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000178,"loginCount":1,"nickname":"user178","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-114] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000160,"loginCount":1,"nickname":"user160","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-108] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000175,"loginCount":1,"nickname":"user175","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-99] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000168,"loginCount":1,"nickname":"user168","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000091,"loginCount":1,"nickname":"user91","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-37] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000106,"loginCount":1,"nickname":"user106","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-100] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000210,"loginCount":1,"nickname":"user210","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-119] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000166,"loginCount":1,"nickname":"user166","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.322  INFO 36520 --- [http-nio-8888-exec-102] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000031,"loginCount":1,"nickname":"user31","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.323  INFO 36520 --- [http-nio-8888-exec-17] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000202,"loginCount":1,"nickname":"user202","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.323  INFO 36520 --- [http-nio-8888-exec-19] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000219,"loginCount":1,"nickname":"user219","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000038,"loginCount":1,"nickname":"user38","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.323  INFO 36520 --- [http-nio-8888-exec-84] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000169,"loginCount":1,"nickname":"user169","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000223,"loginCount":1,"nickname":"user223","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-166] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000217,"loginCount":1,"nickname":"user217","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.324  INFO 36520 --- [http-nio-8888-exec-57] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000044,"loginCount":1,"nickname":"user44","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-97] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000143,"loginCount":1,"nickname":"user143","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-172] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000230,"loginCount":1,"nickname":"user230","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-125] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000093,"loginCount":1,"nickname":"user93","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-133] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000153,"loginCount":1,"nickname":"user153","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-154] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000004,"loginCount":1,"nickname":"user4","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.325  INFO 36520 --- [http-nio-8888-exec-66] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000157,"loginCount":1,"nickname":"user157","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-88] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000014,"loginCount":1,"nickname":"user14","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-21] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000215,"loginCount":1,"nickname":"user215","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000229,"loginCount":1,"nickname":"user229","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-107] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000208,"loginCount":1,"nickname":"user208","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-74] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000206,"loginCount":1,"nickname":"user206","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-160] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000184,"loginCount":1,"nickname":"user184","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-82] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000063,"loginCount":1,"nickname":"user63","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-147] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000047,"loginCount":1,"nickname":"user47","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-132] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000020,"loginCount":1,"nickname":"user20","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.326  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000113,"loginCount":1,"nickname":"user113","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-159] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000017,"loginCount":1,"nickname":"user17","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-157] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000076,"loginCount":1,"nickname":"user76","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-92] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000129,"loginCount":1,"nickname":"user129","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-131] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000066,"loginCount":1,"nickname":"user66","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-136] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000087,"loginCount":1,"nickname":"user87","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000222,"loginCount":1,"nickname":"user222","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-167] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000225,"loginCount":1,"nickname":"user225","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000024,"loginCount":1,"nickname":"user24","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-111] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000218,"loginCount":1,"nickname":"user218","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-53] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000070,"loginCount":1,"nickname":"user70","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000155,"loginCount":1,"nickname":"user155","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000235,"loginCount":1,"nickname":"user235","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-8] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000095,"loginCount":1,"nickname":"user95","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.327  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000188,"loginCount":1,"nickname":"user188","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-173] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000071,"loginCount":1,"nickname":"user71","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-155] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000182,"loginCount":1,"nickname":"user182","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-29] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000051,"loginCount":1,"nickname":"user51","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-123] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000005,"loginCount":1,"nickname":"user5","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-23] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000154,"loginCount":1,"nickname":"user154","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000008,"loginCount":1,"nickname":"user8","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000233,"loginCount":1,"nickname":"user233","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-85] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000226,"loginCount":1,"nickname":"user226","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-95] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000026,"loginCount":1,"nickname":"user26","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-58] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000214,"loginCount":1,"nickname":"user214","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-65] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000173,"loginCount":1,"nickname":"user173","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-169] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000220,"loginCount":1,"nickname":"user220","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.328  INFO 36520 --- [http-nio-8888-exec-185] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000052,"loginCount":1,"nickname":"user52","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-41] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000164,"loginCount":1,"nickname":"user164","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-142] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000232,"loginCount":1,"nickname":"user232","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-2] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000037,"loginCount":1,"nickname":"user37","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-104] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000141,"loginCount":1,"nickname":"user141","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000216,"loginCount":1,"nickname":"user216","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-179] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000001,"loginCount":1,"nickname":"user1","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000068,"loginCount":1,"nickname":"user68","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-144] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000007,"loginCount":1,"nickname":"user7","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000203,"loginCount":1,"nickname":"user203","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-10] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000197,"loginCount":1,"nickname":"user197","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-176] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000033,"loginCount":1,"nickname":"user33","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.329  INFO 36520 --- [http-nio-8888-exec-38] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000191,"loginCount":1,"nickname":"user191","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.330  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000207,"loginCount":1,"nickname":"user207","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.330  INFO 36520 --- [http-nio-8888-exec-161] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000205,"loginCount":1,"nickname":"user205","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.330  INFO 36520 --- [http-nio-8888-exec-89] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000236,"loginCount":1,"nickname":"user236","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.330  INFO 36520 --- [http-nio-8888-exec-81] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000234,"loginCount":1,"nickname":"user234","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.332  INFO 36520 --- [http-nio-8888-exec-83] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000237,"loginCount":1,"nickname":"user237","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.332  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000224,"loginCount":1,"nickname":"user224","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.332  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000209,"loginCount":1,"nickname":"user209","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.332  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000228,"loginCount":1,"nickname":"user228","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.332  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000227,"loginCount":1,"nickname":"user227","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.332  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000239,"loginCount":1,"nickname":"user239","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.338  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000023,"loginCount":1,"nickname":"user23","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.338  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000079,"loginCount":1,"nickname":"user79","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.339  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000167,"loginCount":1,"nickname":"user167","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.338  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000163,"loginCount":1,"nickname":"user163","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.338  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000000,"loginCount":1,"nickname":"user0","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.339  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000196,"loginCount":1,"nickname":"user196","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.340  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000162,"loginCount":1,"nickname":"user162","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.340  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000249,"loginCount":1,"nickname":"user249","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.340  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000190,"loginCount":1,"nickname":"user190","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.340  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000130,"loginCount":1,"nickname":"user130","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.340  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000041,"loginCount":1,"nickname":"user41","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.343  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000241,"loginCount":1,"nickname":"user241","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.349  INFO 36520 --- [http-nio-8888-exec-89] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000267,"loginCount":1,"nickname":"user267","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.349  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000242,"loginCount":1,"nickname":"user242","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.353 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.353 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.355 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.356  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000259,"loginCount":1,"nickname":"user259","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.356  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000283,"loginCount":1,"nickname":"user283","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.357  INFO 36520 --- [http-nio-8888-exec-10] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000260,"loginCount":1,"nickname":"user260","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.364  INFO 36520 --- [http-nio-8888-exec-157] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000289,"loginCount":1,"nickname":"user289","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.357  INFO 36520 --- [http-nio-8888-exec-53] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000277,"loginCount":1,"nickname":"user277","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.358  INFO 36520 --- [http-nio-8888-exec-95] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000278,"loginCount":1,"nickname":"user278","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.358  INFO 36520 --- [http-nio-8888-exec-169] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000280,"loginCount":1,"nickname":"user280","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.357  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000243,"loginCount":1,"nickname":"user243","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.358  INFO 36520 --- [http-nio-8888-exec-142] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000282,"loginCount":1,"nickname":"user282","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.362  INFO 36520 --- [http-nio-8888-exec-85] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000257,"loginCount":1,"nickname":"user257","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.358  INFO 36520 --- [http-nio-8888-exec-58] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000276,"loginCount":1,"nickname":"user276","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.358 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.362 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.362  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000258,"loginCount":1,"nickname":"user258","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.363  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000250,"loginCount":1,"nickname":"user250","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.363  INFO 36520 --- [http-nio-8888-exec-159] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000291,"loginCount":1,"nickname":"user291","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.365 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.364  INFO 36520 --- [http-nio-8888-exec-130] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000326,"loginCount":1,"nickname":"user326","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.364  INFO 36520 --- [http-nio-8888-exec-161] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000247,"loginCount":1,"nickname":"user247","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.364  INFO 36520 --- [http-nio-8888-exec-173] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000274,"loginCount":1,"nickname":"user274","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.364  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000264,"loginCount":1,"nickname":"user264","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.365 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.367 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.363  INFO 36520 --- [http-nio-8888-exec-147] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000295,"loginCount":1,"nickname":"user295","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.364  INFO 36520 --- [http-nio-8888-exec-185] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000281,"loginCount":1,"nickname":"user281","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.370  INFO 36520 --- [http-nio-8888-exec-2] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000252,"loginCount":1,"nickname":"user252","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.370  INFO 36520 --- [http-nio-8888-exec-104] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000253,"loginCount":1,"nickname":"user253","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.370  INFO 36520 --- [http-nio-8888-exec-83] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000270,"loginCount":1,"nickname":"user270","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.372  INFO 36520 --- [http-nio-8888-exec-176] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000246,"loginCount":1,"nickname":"user246","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.370  INFO 36520 --- [http-nio-8888-exec-66] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000296,"loginCount":1,"nickname":"user296","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.372  INFO 36520 --- [http-nio-8888-exec-179] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000248,"loginCount":1,"nickname":"user248","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.370  INFO 36520 --- [http-nio-8888-exec-144] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000254,"loginCount":1,"nickname":"user254","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.372  INFO 36520 --- [http-nio-8888-exec-81] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000272,"loginCount":1,"nickname":"user272","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.370 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.371  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000266,"loginCount":1,"nickname":"user266","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.371 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.391  INFO 36520 --- [http-nio-8888-exec-8] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000271,"loginCount":1,"nickname":"user271","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.371  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000275,"loginCount":1,"nickname":"user275","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.391  INFO 36520 --- [http-nio-8888-exec-23] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000261,"loginCount":1,"nickname":"user261","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.394  INFO 36520 --- [http-nio-8888-exec-21] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000306,"loginCount":1,"nickname":"user306","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.393 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.389  INFO 36520 --- [http-nio-8888-exec-38] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000262,"loginCount":1,"nickname":"user262","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.394 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.393 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.397 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.398 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.389  INFO 36520 --- [http-nio-8888-exec-65] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000255,"loginCount":1,"nickname":"user255","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.398 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.389 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.390 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.390  INFO 36520 --- [http-nio-8888-exec-29] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000265,"loginCount":1,"nickname":"user265","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.400  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000251,"loginCount":1,"nickname":"user251","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.390  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000273,"loginCount":1,"nickname":"user273","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.390  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000269,"loginCount":1,"nickname":"user269","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.401  WARN 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 60584
2021-07-10 22:27:33.402  WARN 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 60577
2021-07-10 22:27:33.402 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.402 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.402 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.402 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.393  INFO 36520 --- [http-nio-8888-exec-41] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000256,"loginCount":1,"nickname":"user256","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.393  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000245,"loginCount":1,"nickname":"user245","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.404 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.404 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.404  WARN 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 60580
2021-07-10 22:27:33.406 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.407 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.407  WARN 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 60575
2021-07-10 22:27:33.407 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.407 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.408 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.408 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.413  INFO 36520 --- [http-nio-8888-exec-114] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000329,"loginCount":1,"nickname":"user329","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.413  INFO 36520 --- [http-nio-8888-exec-108] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000318,"loginCount":1,"nickname":"user318","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.413  INFO 36520 --- [http-nio-8888-exec-102] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000322,"loginCount":1,"nickname":"user322","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.413  INFO 36520 --- [http-nio-8888-exec-89] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000307,"loginCount":1,"nickname":"user307","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.418  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000301,"loginCount":1,"nickname":"user301","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.418  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000308,"loginCount":1,"nickname":"user308","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.414  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000335,"loginCount":1,"nickname":"user335","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.414  INFO 36520 --- [http-nio-8888-exec-172] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000316,"loginCount":1,"nickname":"user316","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.418  INFO 36520 --- [http-nio-8888-exec-198] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000339,"loginCount":1,"nickname":"user339","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.419  INFO 36520 --- [http-nio-8888-exec-193] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000369,"loginCount":1,"nickname":"user369","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.414  INFO 36520 --- [http-nio-8888-exec-110] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000337,"loginCount":1,"nickname":"user337","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.419  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000304,"loginCount":1,"nickname":"user304","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.414  INFO 36520 --- [http-nio-8888-exec-122] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000330,"loginCount":1,"nickname":"user330","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-23] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000340,"loginCount":1,"nickname":"user340","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.415  INFO 36520 --- [http-nio-8888-exec-125] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000297,"loginCount":1,"nickname":"user297","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.415  INFO 36520 --- [http-nio-8888-exec-28] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000362,"loginCount":1,"nickname":"user362","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.416  INFO 36520 --- [http-nio-8888-exec-20] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000349,"loginCount":1,"nickname":"user349","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.426  INFO 36520 --- [http-nio-8888-exec-59] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000324,"loginCount":1,"nickname":"user324","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.416  INFO 36520 --- [http-nio-8888-exec-132] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000294,"loginCount":1,"nickname":"user294","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.417  INFO 36520 --- [http-nio-8888-exec-72] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000347,"loginCount":1,"nickname":"user347","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.417  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000336,"loginCount":1,"nickname":"user336","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.417  INFO 36520 --- [http-nio-8888-exec-97] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000314,"loginCount":1,"nickname":"user314","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.417  INFO 36520 --- [http-nio-8888-exec-166] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000313,"loginCount":1,"nickname":"user313","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.417  INFO 36520 --- [http-nio-8888-exec-19] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000311,"loginCount":1,"nickname":"user311","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.417  INFO 36520 --- [http-nio-8888-exec-49] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000332,"loginCount":1,"nickname":"user332","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.419  INFO 36520 --- [http-nio-8888-exec-113] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000385,"loginCount":1,"nickname":"user385","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.420  INFO 36520 --- [http-nio-8888-exec-57] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000310,"loginCount":1,"nickname":"user310","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.420  INFO 36520 --- [http-nio-8888-exec-152] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000413,"loginCount":1,"nickname":"user413","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.421  INFO 36520 --- [http-nio-8888-exec-77] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000405,"loginCount":1,"nickname":"user405","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-158] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000398,"loginCount":1,"nickname":"user398","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-119] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000312,"loginCount":1,"nickname":"user312","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.427  INFO 36520 --- [http-nio-8888-exec-168] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000319,"loginCount":1,"nickname":"user319","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-87] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000244,"loginCount":1,"nickname":"user244","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000356,"loginCount":1,"nickname":"user356","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-107] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000315,"loginCount":1,"nickname":"user315","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.422  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000380,"loginCount":1,"nickname":"user380","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.423  INFO 36520 --- [http-nio-8888-exec-17] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000302,"loginCount":1,"nickname":"user302","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.423  INFO 36520 --- [http-nio-8888-exec-154] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000309,"loginCount":1,"nickname":"user309","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.423  INFO 36520 --- [http-nio-8888-exec-82] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000300,"loginCount":1,"nickname":"user300","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.428  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000430,"loginCount":1,"nickname":"user430","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.428  INFO 36520 --- [http-nio-8888-exec-37] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000317,"loginCount":1,"nickname":"user317","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.423  INFO 36520 --- [http-nio-8888-exec-88] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000305,"loginCount":1,"nickname":"user305","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.423  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000303,"loginCount":1,"nickname":"user303","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.423  INFO 36520 --- [http-nio-8888-exec-29] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000370,"loginCount":1,"nickname":"user370","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.424  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000290,"loginCount":1,"nickname":"user290","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000331,"loginCount":1,"nickname":"user331","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-149] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000423,"loginCount":1,"nickname":"user423","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000333,"loginCount":1,"nickname":"user333","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000325,"loginCount":1,"nickname":"user325","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-99] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000320,"loginCount":1,"nickname":"user320","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.428  INFO 36520 --- [http-nio-8888-exec-133] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000321,"loginCount":1,"nickname":"user321","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-191] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000360,"loginCount":1,"nickname":"user360","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.429  INFO 36520 --- [http-nio-8888-exec-42] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000427,"loginCount":1,"nickname":"user427","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.425  INFO 36520 --- [http-nio-8888-exec-71] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000414,"loginCount":1,"nickname":"user414","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.426  INFO 36520 --- [http-nio-8888-exec-40] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000415,"loginCount":1,"nickname":"user415","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.426  INFO 36520 --- [http-nio-8888-exec-100] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000323,"loginCount":1,"nickname":"user323","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.428  INFO 36520 --- [http-nio-8888-exec-160] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000299,"loginCount":1,"nickname":"user299","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.426  INFO 36520 --- [http-nio-8888-exec-196] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000400,"loginCount":1,"nickname":"user400","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.430  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000293,"loginCount":1,"nickname":"user293","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.430  INFO 36520 --- [http-nio-8888-exec-67] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000327,"loginCount":1,"nickname":"user327","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.430  INFO 36520 --- [http-nio-8888-exec-74] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000298,"loginCount":1,"nickname":"user298","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.431  INFO 36520 --- [http-nio-8888-exec-73] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000328,"loginCount":1,"nickname":"user328","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.430  INFO 36520 --- [http-nio-8888-exec-131] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000288,"loginCount":1,"nickname":"user288","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.431  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000292,"loginCount":1,"nickname":"user292","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.431  INFO 36520 --- [http-nio-8888-exec-123] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000263,"loginCount":1,"nickname":"user263","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.431  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000285,"loginCount":1,"nickname":"user285","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.431  INFO 36520 --- [http-nio-8888-exec-92] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000287,"loginCount":1,"nickname":"user287","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.432  INFO 36520 --- [http-nio-8888-exec-111] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000284,"loginCount":1,"nickname":"user284","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.432  INFO 36520 --- [http-nio-8888-exec-155] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000268,"loginCount":1,"nickname":"user268","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.432  INFO 36520 --- [http-nio-8888-exec-167] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000279,"loginCount":1,"nickname":"user279","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.433  INFO 36520 --- [http-nio-8888-exec-96] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000433,"loginCount":1,"nickname":"user433","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.433  INFO 36520 --- [http-nio-8888-exec-136] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000286,"loginCount":1,"nickname":"user286","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.433  INFO 36520 --- [http-nio-8888-exec-36] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000434,"loginCount":1,"nickname":"user434","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.433  INFO 36520 --- [http-nio-8888-exec-133] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000436,"loginCount":1,"nickname":"user436","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.433  INFO 36520 --- [http-nio-8888-exec-195] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000432,"loginCount":1,"nickname":"user432","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.434  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000428,"loginCount":1,"nickname":"user428","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.434  INFO 36520 --- [http-nio-8888-exec-162] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000431,"loginCount":1,"nickname":"user431","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.435  INFO 36520 --- [http-nio-8888-exec-1] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000372,"loginCount":1,"nickname":"user372","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.435  INFO 36520 --- [http-nio-8888-exec-141] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000358,"loginCount":1,"nickname":"user358","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.435  INFO 36520 --- [http-nio-8888-exec-55] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000424,"loginCount":1,"nickname":"user424","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.435  INFO 36520 --- [http-nio-8888-exec-117] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000387,"loginCount":1,"nickname":"user387","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.436  INFO 36520 --- [http-nio-8888-exec-116] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000368,"loginCount":1,"nickname":"user368","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.436  INFO 36520 --- [http-nio-8888-exec-112] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000429,"loginCount":1,"nickname":"user429","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.437  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000371,"loginCount":1,"nickname":"user371","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.437  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000373,"loginCount":1,"nickname":"user373","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.438  INFO 36520 --- [http-nio-8888-exec-64] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000395,"loginCount":1,"nickname":"user395","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.438  INFO 36520 --- [http-nio-8888-exec-25] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000364,"loginCount":1,"nickname":"user364","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.439  INFO 36520 --- [http-nio-8888-exec-63] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000425,"loginCount":1,"nickname":"user425","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.439  INFO 36520 --- [http-nio-8888-exec-3] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000439,"loginCount":1,"nickname":"user439","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.446  INFO 36520 --- [http-nio-8888-exec-194] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000426,"loginCount":1,"nickname":"user426","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.446  INFO 36520 --- [http-nio-8888-exec-183] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000394,"loginCount":1,"nickname":"user394","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.446  INFO 36520 --- [http-nio-8888-exec-70] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000418,"loginCount":1,"nickname":"user418","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.446  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000367,"loginCount":1,"nickname":"user367","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.447  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000346,"loginCount":1,"nickname":"user346","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.450  INFO 36520 --- [http-nio-8888-exec-171] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000417,"loginCount":1,"nickname":"user417","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.450  INFO 36520 --- [http-nio-8888-exec-105] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000441,"loginCount":1,"nickname":"user441","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.450  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000444,"loginCount":1,"nickname":"user444","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.450  INFO 36520 --- [http-nio-8888-exec-197] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000350,"loginCount":1,"nickname":"user350","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.451  INFO 36520 --- [http-nio-8888-exec-140] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000359,"loginCount":1,"nickname":"user359","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.451  INFO 36520 --- [http-nio-8888-exec-30] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000412,"loginCount":1,"nickname":"user412","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.452  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000422,"loginCount":1,"nickname":"user422","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000375,"loginCount":1,"nickname":"user375","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-118] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000389,"loginCount":1,"nickname":"user389","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000450,"loginCount":1,"nickname":"user450","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-145] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000392,"loginCount":1,"nickname":"user392","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000343,"loginCount":1,"nickname":"user343","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-174] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000377,"loginCount":1,"nickname":"user377","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-50] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000378,"loginCount":1,"nickname":"user378","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.453  INFO 36520 --- [http-nio-8888-exec-101] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000402,"loginCount":1,"nickname":"user402","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.455 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.455 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.455 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.456 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.456 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.456 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.457 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.457 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.457 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.457 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.460  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000452,"loginCount":1,"nickname":"user452","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.460  INFO 36520 --- [http-nio-8888-exec-193] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000419,"loginCount":1,"nickname":"user419","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.462 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.462 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.462 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.460  INFO 36520 --- [http-nio-8888-exec-188] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000386,"loginCount":1,"nickname":"user386","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.463 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.466 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.466 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.466 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.466 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.465 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.469 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.469 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.468 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.468 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.465 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.470 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.470 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.470  INFO 36520 --- [http-nio-8888-exec-115] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000420,"loginCount":1,"nickname":"user420","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.470 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.471  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000416,"loginCount":1,"nickname":"user416","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.471 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.471 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.474 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==>  Preparing: SELECT id,goods_id,seckill_price,stock_count,start_date,end_date FROM t_seckill_goods WHERE (goods_id = ?)
2021-07-10 22:27:33.474 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TSeckillGoodsMapper.selectOne    : ==> Parameters: 1(Long)
2021-07-10 22:27:33.474  INFO 36520 --- [http-nio-8888-exec-153] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000411,"loginCount":1,"nickname":"user411","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.474  INFO 36520 --- [http-nio-8888-exec-110] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000421,"loginCount":1,"nickname":"user421","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.471 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.476 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TSeckillGoodsMapper.selectOne    : <==      Total: 1
2021-07-10 22:27:33.471 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.477 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.477  INFO 36520 --- [http-nio-8888-exec-180] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000382,"loginCount":1,"nickname":"user382","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.476 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.479 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.480 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.484  INFO 36520 --- [http-nio-8888-exec-47] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000352,"loginCount":1,"nickname":"user352","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.484  INFO 36520 --- [http-nio-8888-exec-98] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000365,"loginCount":1,"nickname":"user365","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.485  INFO 36520 --- [http-nio-8888-exec-165] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000338,"loginCount":1,"nickname":"user338","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.486  INFO 36520 --- [http-nio-8888-exec-190] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000345,"loginCount":1,"nickname":"user345","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.486  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000354,"loginCount":1,"nickname":"user354","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.487  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000351,"loginCount":1,"nickname":"user351","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.488  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000475,"loginCount":1,"nickname":"user475","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.488  INFO 36520 --- [http-nio-8888-exec-124] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000361,"loginCount":1,"nickname":"user361","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.488  INFO 36520 --- [http-nio-8888-exec-22] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000342,"loginCount":1,"nickname":"user342","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.490 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.492 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.492  INFO 36520 --- [http-nio-8888-exec-116] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000471,"loginCount":1,"nickname":"user471","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.492  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000353,"loginCount":1,"nickname":"user353","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.492  INFO 36520 --- [http-nio-8888-exec-199] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000376,"loginCount":1,"nickname":"user376","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.490  INFO 36520 --- [http-nio-8888-exec-12] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000381,"loginCount":1,"nickname":"user381","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.491  INFO 36520 --- [http-nio-8888-exec-101] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000469,"loginCount":1,"nickname":"user469","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.497  INFO 36520 --- [http-nio-8888-exec-197] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000484,"loginCount":1,"nickname":"user484","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.497  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000479,"loginCount":1,"nickname":"user479","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.497  INFO 36520 --- [http-nio-8888-exec-32] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000390,"loginCount":1,"nickname":"user390","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.497  INFO 36520 --- [http-nio-8888-exec-65] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000388,"loginCount":1,"nickname":"user388","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.500 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.501  INFO 36520 --- [http-nio-8888-exec-103] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000355,"loginCount":1,"nickname":"user355","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.501 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.501  INFO 36520 --- [http-nio-8888-exec-6] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000393,"loginCount":1,"nickname":"user393","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.509  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000495,"loginCount":1,"nickname":"user495","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.501  INFO 36520 --- [http-nio-8888-exec-21] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000399,"loginCount":1,"nickname":"user399","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.506  INFO 36520 --- [http-nio-8888-exec-18] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000391,"loginCount":1,"nickname":"user391","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.508 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.mapper.TSeckillGoodsMapper.update  : ==>  Preparing: UPDATE t_seckill_goods SET stock_count=stock_count-1 WHERE (goods_id = ? AND stock_count > ?)
2021-07-10 22:27:33.506  INFO 36520 --- [http-nio-8888-exec-90] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000493,"loginCount":1,"nickname":"user493","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.511 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.mapper.TSeckillGoodsMapper.update  : ==> Parameters: 1(Long), 0(Integer)
2021-07-10 22:27:33.507  INFO 36520 --- [http-nio-8888-exec-107] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000491,"loginCount":1,"nickname":"user491","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.510  INFO 36520 --- [http-nio-8888-exec-52] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000408,"loginCount":1,"nickname":"user408","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.515 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.516  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000396,"loginCount":1,"nickname":"user396","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.517  INFO 36520 --- [http-nio-8888-exec-68] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000397,"loginCount":1,"nickname":"user397","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.517  INFO 36520 --- [http-nio-8888-exec-101] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000501,"loginCount":1,"nickname":"user501","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.518 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.519  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000406,"loginCount":1,"nickname":"user406","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.517  INFO 36520 --- [http-nio-8888-exec-200] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000410,"loginCount":1,"nickname":"user410","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.520  INFO 36520 --- [http-nio-8888-exec-14] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000401,"loginCount":1,"nickname":"user401","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.517  INFO 36520 --- [http-nio-8888-exec-135] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000409,"loginCount":1,"nickname":"user409","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.520  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000512,"loginCount":1,"nickname":"user512","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.520  INFO 36520 --- [http-nio-8888-exec-131] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000508,"loginCount":1,"nickname":"user508","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.517  INFO 36520 --- [http-nio-8888-exec-134] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000404,"loginCount":1,"nickname":"user404","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.521  INFO 36520 --- [http-nio-8888-exec-41] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000403,"loginCount":1,"nickname":"user403","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.522 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000130(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.516(Timestamp)
2021-07-10 22:27:33.523  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000513,"loginCount":1,"nickname":"user513","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.523  INFO 36520 --- [http-nio-8888-exec-72] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000511,"loginCount":1,"nickname":"user511","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.523  INFO 36520 --- [http-nio-8888-exec-138] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000344,"loginCount":1,"nickname":"user344","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.523  INFO 36520 --- [http-nio-8888-exec-142] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000518,"loginCount":1,"nickname":"user518","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.523  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000522,"loginCount":1,"nickname":"user522","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.524  INFO 36520 --- [http-nio-8888-exec-45] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000384,"loginCount":1,"nickname":"user384","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.524  INFO 36520 --- [http-nio-8888-exec-80] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000334,"loginCount":1,"nickname":"user334","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.524  INFO 36520 --- [http-nio-8888-exec-38] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000383,"loginCount":1,"nickname":"user383","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.524  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000363,"loginCount":1,"nickname":"user363","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.524  INFO 36520 --- [http-nio-8888-exec-5] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000357,"loginCount":1,"nickname":"user357","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.525  INFO 36520 --- [http-nio-8888-exec-51] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000366,"loginCount":1,"nickname":"user366","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.525  INFO 36520 --- [http-nio-8888-exec-178] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000374,"loginCount":1,"nickname":"user374","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.525  INFO 36520 --- [http-nio-8888-exec-16] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000407,"loginCount":1,"nickname":"user407","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.525  INFO 36520 --- [http-nio-8888-exec-187] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000379,"loginCount":1,"nickname":"user379","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.530  INFO 36520 --- [http-nio-8888-exec-127] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000348,"loginCount":1,"nickname":"user348","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.530  INFO 36520 --- [http-nio-8888-exec-79] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000341,"loginCount":1,"nickname":"user341","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.530  INFO 36520 --- [http-nio-8888-exec-108] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000529,"loginCount":1,"nickname":"user529","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.530  INFO 36520 --- [http-nio-8888-exec-41] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000525,"loginCount":1,"nickname":"user525","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.530  INFO 36520 --- [http-nio-8888-exec-167] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000528,"loginCount":1,"nickname":"user528","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-107] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000519,"loginCount":1,"nickname":"user519","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-66] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000526,"loginCount":1,"nickname":"user526","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-113] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000515,"loginCount":1,"nickname":"user515","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-155] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000527,"loginCount":1,"nickname":"user527","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-197] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000521,"loginCount":1,"nickname":"user521","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-97] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000524,"loginCount":1,"nickname":"user524","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.537  INFO 36520 --- [http-nio-8888-exec-200] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000523,"loginCount":1,"nickname":"user523","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000510,"loginCount":1,"nickname":"user510","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000520,"loginCount":1,"nickname":"user520","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000517,"loginCount":1,"nickname":"user517","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-154] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000503,"loginCount":1,"nickname":"user503","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-130] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000507,"loginCount":1,"nickname":"user507","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000502,"loginCount":1,"nickname":"user502","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-122] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000509,"loginCount":1,"nickname":"user509","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-77] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000506,"loginCount":1,"nickname":"user506","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000514,"loginCount":1,"nickname":"user514","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-52] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000516,"loginCount":1,"nickname":"user516","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-106] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000499,"loginCount":1,"nickname":"user499","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000505,"loginCount":1,"nickname":"user505","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-47] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000498,"loginCount":1,"nickname":"user498","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.539  INFO 36520 --- [http-nio-8888-exec-82] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000504,"loginCount":1,"nickname":"user504","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-145] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000496,"loginCount":1,"nickname":"user496","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000492,"loginCount":1,"nickname":"user492","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000490,"loginCount":1,"nickname":"user490","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-165] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000497,"loginCount":1,"nickname":"user497","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.542  INFO 36520 --- [http-nio-8888-exec-196] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000532,"loginCount":1,"nickname":"user532","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000485,"loginCount":1,"nickname":"user485","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-190] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000494,"loginCount":1,"nickname":"user494","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000487,"loginCount":1,"nickname":"user487","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-181] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000467,"loginCount":1,"nickname":"user467","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.542  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000534,"loginCount":1,"nickname":"user534","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.542  INFO 36520 --- [http-nio-8888-exec-118] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000533,"loginCount":1,"nickname":"user533","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-91] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000476,"loginCount":1,"nickname":"user476","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-25] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000468,"loginCount":1,"nickname":"user468","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-70] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000461,"loginCount":1,"nickname":"user461","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-64] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000470,"loginCount":1,"nickname":"user470","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-115] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000464,"loginCount":1,"nickname":"user464","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-46] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000448,"loginCount":1,"nickname":"user448","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-99] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000480,"loginCount":1,"nickname":"user480","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-11] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000478,"loginCount":1,"nickname":"user478","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.543  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000544,"loginCount":1,"nickname":"user544","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-30] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000500,"loginCount":1,"nickname":"user500","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-140] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000488,"loginCount":1,"nickname":"user488","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-128] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000477,"loginCount":1,"nickname":"user477","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-171] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000481,"loginCount":1,"nickname":"user481","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-117] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000472,"loginCount":1,"nickname":"user472","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-149] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000454,"loginCount":1,"nickname":"user454","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000447,"loginCount":1,"nickname":"user447","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-93] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000442,"loginCount":1,"nickname":"user442","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-191] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000445,"loginCount":1,"nickname":"user445","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000456,"loginCount":1,"nickname":"user456","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-42] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000438,"loginCount":1,"nickname":"user438","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-98] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000483,"loginCount":1,"nickname":"user483","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-69] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000459,"loginCount":1,"nickname":"user459","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-177] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000451,"loginCount":1,"nickname":"user451","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-186] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000446,"loginCount":1,"nickname":"user446","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-119] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000455,"loginCount":1,"nickname":"user455","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-75] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000482,"loginCount":1,"nickname":"user482","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.544  INFO 36520 --- [http-nio-8888-exec-133] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000542,"loginCount":1,"nickname":"user542","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.544  INFO 36520 --- [http-nio-8888-exec-184] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000547,"loginCount":1,"nickname":"user547","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-15] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000457,"loginCount":1,"nickname":"user457","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.540  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000489,"loginCount":1,"nickname":"user489","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.544  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000538,"loginCount":1,"nickname":"user538","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000449,"loginCount":1,"nickname":"user449","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-62] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000466,"loginCount":1,"nickname":"user466","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-141] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000463,"loginCount":1,"nickname":"user463","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-139] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000458,"loginCount":1,"nickname":"user458","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000462,"loginCount":1,"nickname":"user462","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-156] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000473,"loginCount":1,"nickname":"user473","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-48] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000465,"loginCount":1,"nickname":"user465","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-174] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000474,"loginCount":1,"nickname":"user474","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-105] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000486,"loginCount":1,"nickname":"user486","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-63] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000531,"loginCount":1,"nickname":"user531","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-78] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000460,"loginCount":1,"nickname":"user460","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-162] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000453,"loginCount":1,"nickname":"user453","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.544  INFO 36520 --- [http-nio-8888-exec-102] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000537,"loginCount":1,"nickname":"user537","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-26] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000437,"loginCount":1,"nickname":"user437","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-27] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000435,"loginCount":1,"nickname":"user435","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-7] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000440,"loginCount":1,"nickname":"user440","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-92] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000443,"loginCount":1,"nickname":"user443","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.541  INFO 36520 --- [http-nio-8888-exec-193] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000535,"loginCount":1,"nickname":"user535","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.542  INFO 36520 --- [http-nio-8888-exec-136] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000539,"loginCount":1,"nickname":"user539","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.544  INFO 36520 --- [http-nio-8888-exec-84] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000541,"loginCount":1,"nickname":"user541","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.544  INFO 36520 --- [http-nio-8888-exec-95] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000540,"loginCount":1,"nickname":"user540","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.542  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000530,"loginCount":1,"nickname":"user530","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.545  INFO 36520 --- [http-nio-8888-exec-159] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000543,"loginCount":1,"nickname":"user543","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.546  INFO 36520 --- [http-nio-8888-exec-1] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000546,"loginCount":1,"nickname":"user546","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.546  INFO 36520 --- [http-nio-8888-exec-36] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000545,"loginCount":1,"nickname":"user545","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.546  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000536,"loginCount":1,"nickname":"user536","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.549  INFO 36520 --- [http-nio-8888-exec-183] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000548,"loginCount":1,"nickname":"user548","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.550  INFO 36520 --- [http-nio-8888-exec-153] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000549,"loginCount":1,"nickname":"user549","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.550  INFO 36520 --- [http-nio-8888-exec-3] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000550,"loginCount":1,"nickname":"user550","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.556  INFO 36520 --- [http-nio-8888-exec-6] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000551,"loginCount":1,"nickname":"user551","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.556  INFO 36520 --- [http-nio-8888-exec-188] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000553,"loginCount":1,"nickname":"user553","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.556  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000554,"loginCount":1,"nickname":"user554","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.557  INFO 36520 --- [http-nio-8888-exec-194] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000552,"loginCount":1,"nickname":"user552","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.558  INFO 36520 --- [http-nio-8888-exec-195] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000555,"loginCount":1,"nickname":"user555","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.559 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.559 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.559 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.559 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.559  INFO 36520 --- [http-nio-8888-exec-169] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000561,"loginCount":1,"nickname":"user561","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.559 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.559 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.560  INFO 36520 --- [http-nio-8888-exec-21] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000560,"loginCount":1,"nickname":"user560","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.560  INFO 36520 --- [http-nio-8888-exec-50] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000556,"loginCount":1,"nickname":"user556","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.560  INFO 36520 --- [http-nio-8888-exec-10] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000559,"loginCount":1,"nickname":"user559","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.560  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000558,"loginCount":1,"nickname":"user558","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.560  INFO 36520 --- [http-nio-8888-exec-18] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000562,"loginCount":1,"nickname":"user562","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000000(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.559(Timestamp)
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000190(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.559(Timestamp)
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000163(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.559(Timestamp)
2021-07-10 22:27:33.560 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000196(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.559(Timestamp)
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000167(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.559(Timestamp)
2021-07-10 22:27:33.561 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000023(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.559(Timestamp)
2021-07-10 22:27:33.563 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000162(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.56(Timestamp)
2021-07-10 22:27:33.563 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.563  INFO 36520 --- [http-nio-8888-exec-112] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000563,"loginCount":1,"nickname":"user563","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.563  INFO 36520 --- [http-nio-8888-exec-55] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000557,"loginCount":1,"nickname":"user557","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.564 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000079(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.562(Timestamp)
2021-07-10 22:27:33.566  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000566,"loginCount":1,"nickname":"user566","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.567  INFO 36520 --- [http-nio-8888-exec-131] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000565,"loginCount":1,"nickname":"user565","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.567  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000564,"loginCount":1,"nickname":"user564","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.567  INFO 36520 --- [http-nio-8888-exec-96] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000569,"loginCount":1,"nickname":"user569","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.568  INFO 36520 --- [http-nio-8888-exec-134] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000567,"loginCount":1,"nickname":"user567","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.568  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000568,"loginCount":1,"nickname":"user568","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.568  INFO 36520 --- [http-nio-8888-exec-29] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000570,"loginCount":1,"nickname":"user570","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.569  INFO 36520 --- [http-nio-8888-exec-135] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000572,"loginCount":1,"nickname":"user572","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.569  INFO 36520 --- [http-nio-8888-exec-90] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000571,"loginCount":1,"nickname":"user571","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.570  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000573,"loginCount":1,"nickname":"user573","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.573  INFO 36520 --- [http-nio-8888-exec-188] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000574,"loginCount":1,"nickname":"user574","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.575  INFO 36520 --- [http-nio-8888-exec-199] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000575,"loginCount":1,"nickname":"user575","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.581  INFO 36520 --- [http-nio-8888-exec-198] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000576,"loginCount":1,"nickname":"user576","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.586  INFO 36520 --- [http-nio-8888-exec-27] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000577,"loginCount":1,"nickname":"user577","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.592 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.mapper.TSeckillGoodsMapper.update  : <==    Updates: 1
2021-07-10 22:27:33.592 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.593 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.seckill.mapper.TOrderMapper.insert   : ==>  Preparing: INSERT INTO t_order ( user_id, goods_id, delivery_addr_id, goods_name, goods_count, goods_price, order_channel, status, create_date ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2021-07-10 22:27:33.593  INFO 36520 --- [http-nio-8888-exec-23] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000580,"loginCount":1,"nickname":"user580","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.592  INFO 36520 --- [http-nio-8888-exec-114] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000578,"loginCount":1,"nickname":"user578","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.593 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.seckill.mapper.TOrderMapper.insert   : ==> Parameters: 13000000041(Long), 1(Long), 0(Long), SUPRIM_3080(String), 1(Integer), 2999.00(BigDecimal), 1(Integer), 0(Integer), 2021-07-10 22:27:33.592(Timestamp)
2021-07-10 22:27:33.594  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000579,"loginCount":1,"nickname":"user579","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.594  INFO 36520 --- [http-nio-8888-exec-177] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000588,"loginCount":1,"nickname":"user588","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.594  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000586,"loginCount":1,"nickname":"user586","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.594  INFO 36520 --- [http-nio-8888-exec-162] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000581,"loginCount":1,"nickname":"user581","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.595  INFO 36520 --- [http-nio-8888-exec-7] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000584,"loginCount":1,"nickname":"user584","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.595  INFO 36520 --- [http-nio-8888-exec-144] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000587,"loginCount":1,"nickname":"user587","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.595  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000585,"loginCount":1,"nickname":"user585","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.595  INFO 36520 --- [http-nio-8888-exec-95] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000582,"loginCount":1,"nickname":"user582","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.596  INFO 36520 --- [http-nio-8888-exec-159] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000589,"loginCount":1,"nickname":"user589","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.596  INFO 36520 --- [http-nio-8888-exec-62] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000583,"loginCount":1,"nickname":"user583","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.596  INFO 36520 --- [http-nio-8888-exec-186] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000590,"loginCount":1,"nickname":"user590","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.596  INFO 36520 --- [http-nio-8888-exec-136] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000592,"loginCount":1,"nickname":"user592","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.598  INFO 36520 --- [http-nio-8888-exec-116] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000591,"loginCount":1,"nickname":"user591","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.599  INFO 36520 --- [http-nio-8888-exec-82] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000594,"loginCount":1,"nickname":"user594","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.599  INFO 36520 --- [http-nio-8888-exec-172] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000593,"loginCount":1,"nickname":"user593","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.599  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000595,"loginCount":1,"nickname":"user595","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.599  INFO 36520 --- [http-nio-8888-exec-1] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000597,"loginCount":1,"nickname":"user597","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.599 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.599  INFO 36520 --- [http-nio-8888-exec-191] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000598,"loginCount":1,"nickname":"user598","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.599 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000130(Long), 216(Long), 1(Long)
2021-07-10 22:27:33.599  INFO 36520 --- [http-nio-8888-exec-99] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000599,"loginCount":1,"nickname":"user599","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.600  INFO 36520 --- [http-nio-8888-exec-171] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000596,"loginCount":1,"nickname":"user596","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.600  INFO 36520 --- [http-nio-8888-exec-92] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000600,"loginCount":1,"nickname":"user600","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.601  INFO 36520 --- [http-nio-8888-exec-77] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000601,"loginCount":1,"nickname":"user601","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.602  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000603,"loginCount":1,"nickname":"user603","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.602  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000602,"loginCount":1,"nickname":"user602","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.603  INFO 36520 --- [http-nio-8888-exec-183] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000605,"loginCount":1,"nickname":"user605","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.603  INFO 36520 --- [http-nio-8888-exec-149] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000604,"loginCount":1,"nickname":"user604","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.605  INFO 36520 --- [http-nio-8888-exec-190] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000607,"loginCount":1,"nickname":"user607","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.605  INFO 36520 --- [http-nio-8888-exec-58] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000606,"loginCount":1,"nickname":"user606","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.606  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000608,"loginCount":1,"nickname":"user608","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.610  INFO 36520 --- [http-nio-8888-exec-64] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000610,"loginCount":1,"nickname":"user610","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.610  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000609,"loginCount":1,"nickname":"user609","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.610  INFO 36520 --- [http-nio-8888-exec-115] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000612,"loginCount":1,"nickname":"user612","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.610  INFO 36520 --- [http-nio-8888-exec-89] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000611,"loginCount":1,"nickname":"user611","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.613  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000613,"loginCount":1,"nickname":"user613","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.615  INFO 36520 --- [http-nio-8888-exec-75] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000614,"loginCount":1,"nickname":"user614","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.615  INFO 36520 --- [http-nio-8888-exec-46] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000616,"loginCount":1,"nickname":"user616","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.615  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000617,"loginCount":1,"nickname":"user617","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.615  INFO 36520 --- [http-nio-8888-exec-174] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000615,"loginCount":1,"nickname":"user615","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.615  INFO 36520 --- [http-nio-8888-exec-83] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000618,"loginCount":1,"nickname":"user618","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.616  INFO 36520 --- [http-nio-8888-exec-68] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000619,"loginCount":1,"nickname":"user619","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.617 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000167(Long), 221(Long), 1(Long)
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000023(Long), 222(Long), 1(Long)
2021-07-10 22:27:33.618 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000163(Long), 217(Long), 1(Long)
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000000(Long), 220(Long), 1(Long)
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000079(Long), 224(Long), 1(Long)
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000190(Long), 218(Long), 1(Long)
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000196(Long), 219(Long), 1(Long)
2021-07-10 22:27:33.619 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000162(Long), 223(Long), 1(Long)
2021-07-10 22:27:33.620  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000620,"loginCount":1,"nickname":"user620","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.621  INFO 36520 --- [http-nio-8888-exec-2] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000621,"loginCount":1,"nickname":"user621","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.623  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000622,"loginCount":1,"nickname":"user622","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.623  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000624,"loginCount":1,"nickname":"user624","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.624  INFO 36520 --- [http-nio-8888-exec-53] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000623,"loginCount":1,"nickname":"user623","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.624  INFO 36520 --- [http-nio-8888-exec-169] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000626,"loginCount":1,"nickname":"user626","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.625  INFO 36520 --- [http-nio-8888-exec-160] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000625,"loginCount":1,"nickname":"user625","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.629  INFO 36520 --- [http-nio-8888-exec-106] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000627,"loginCount":1,"nickname":"user627","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.631  INFO 36520 --- [http-nio-8888-exec-147] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000628,"loginCount":1,"nickname":"user628","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.631  INFO 36520 --- [http-nio-8888-exec-136] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000629,"loginCount":1,"nickname":"user629","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.632  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000631,"loginCount":1,"nickname":"user631","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.632  INFO 36520 --- [http-nio-8888-exec-157] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000630,"loginCount":1,"nickname":"user630","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.632  INFO 36520 --- [http-nio-8888-exec-110] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000632,"loginCount":1,"nickname":"user632","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.632  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000633,"loginCount":1,"nickname":"user633","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.633  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000634,"loginCount":1,"nickname":"user634","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.637  INFO 36520 --- [http-nio-8888-exec-197] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000635,"loginCount":1,"nickname":"user635","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.637  INFO 36520 --- [http-nio-8888-exec-78] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000637,"loginCount":1,"nickname":"user637","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.638  INFO 36520 --- [http-nio-8888-exec-180] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000638,"loginCount":1,"nickname":"user638","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.638  INFO 36520 --- [http-nio-8888-exec-139] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000636,"loginCount":1,"nickname":"user636","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.639 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.seckill.mapper.TOrderMapper.insert   : <==    Updates: 1
2021-07-10 22:27:33.639 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.639 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.mapper.TSeckillOrderMapper.insert  : ==>  Preparing: INSERT INTO t_seckill_order ( user_id, order_id, goods_id ) VALUES ( ?, ?, ? )
2021-07-10 22:27:33.639 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.mapper.TSeckillOrderMapper.insert  : ==> Parameters: 13000000041(Long), 225(Long), 1(Long)
2021-07-10 22:27:33.640  INFO 36520 --- [http-nio-8888-exec-187] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000640,"loginCount":1,"nickname":"user640","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.641  INFO 36520 --- [http-nio-8888-exec-32] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000641,"loginCount":1,"nickname":"user641","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.641  INFO 36520 --- [http-nio-8888-exec-200] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000639,"loginCount":1,"nickname":"user639","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.643  INFO 36520 --- [http-nio-8888-exec-115] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000642,"loginCount":1,"nickname":"user642","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.644  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000643,"loginCount":1,"nickname":"user643","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.645  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000018,"loginCount":1,"nickname":"user18","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.645 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.645 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.646  INFO 36520 --- [http-nio-8888-exec-104] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000644,"loginCount":1,"nickname":"user644","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.646  INFO 36520 --- [http-nio-8888-exec-25] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000646,"loginCount":1,"nickname":"user646","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.646 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.647  INFO 36520 --- [http-nio-8888-exec-22] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000648,"loginCount":1,"nickname":"user648","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.647  INFO 36520 --- [http-nio-8888-exec-198] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000647,"loginCount":1,"nickname":"user647","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.647  INFO 36520 --- [http-nio-8888-exec-118] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000645,"loginCount":1,"nickname":"user645","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.647  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000199,"loginCount":1,"nickname":"user199","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.647 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.648 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.648 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.650  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000652,"loginCount":1,"nickname":"user652","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.650  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000650,"loginCount":1,"nickname":"user650","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.650  INFO 36520 --- [http-nio-8888-exec-57] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000649,"loginCount":1,"nickname":"user649","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.650  INFO 36520 --- [http-nio-8888-exec-19] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000651,"loginCount":1,"nickname":"user651","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.650  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000119,"loginCount":1,"nickname":"user119","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.651 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.651  INFO 36520 --- [http-nio-8888-exec-93] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000653,"loginCount":1,"nickname":"user653","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.651 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.652 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.653  INFO 36520 --- [http-nio-8888-exec-53] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000654,"loginCount":1,"nickname":"user654","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.653  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000192,"loginCount":1,"nickname":"user192","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.654 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.654 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.655  INFO 36520 --- [http-nio-8888-exec-160] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000655,"loginCount":1,"nickname":"user655","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.656 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.656  INFO 36520 --- [http-nio-8888-exec-130] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000656,"loginCount":1,"nickname":"user656","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.657  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000140,"loginCount":1,"nickname":"user140","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.658 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.658 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.658  INFO 36520 --- [http-nio-8888-exec-2] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000660,"loginCount":1,"nickname":"user660","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.658  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000659,"loginCount":1,"nickname":"user659","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.659  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000658,"loginCount":1,"nickname":"user658","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.659  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000657,"loginCount":1,"nickname":"user657","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.659 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.660  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000661,"loginCount":1,"nickname":"user661","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.661  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000194,"loginCount":1,"nickname":"user194","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.661 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.661 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.661  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000662,"loginCount":1,"nickname":"user662","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.662 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.662  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000039,"loginCount":1,"nickname":"user39","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.663  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000663,"loginCount":1,"nickname":"user663","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.663 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.663 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.663  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000664,"loginCount":1,"nickname":"user664","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.664 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.664  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000665,"loginCount":1,"nickname":"user665","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.664  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000180,"loginCount":1,"nickname":"user180","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.664 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.664 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.665 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.666  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000128,"loginCount":1,"nickname":"user128","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.666 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.666 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.666 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.666  INFO 36520 --- [http-nio-8888-exec-161] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000667,"loginCount":1,"nickname":"user667","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.666  INFO 36520 --- [http-nio-8888-exec-117] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000666,"loginCount":1,"nickname":"user666","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.667  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000668,"loginCount":1,"nickname":"user668","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.667  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000179,"loginCount":1,"nickname":"user179","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.668 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.668 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.668 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.669  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000110,"loginCount":1,"nickname":"user110","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.669  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000120,"loginCount":1,"nickname":"user120","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.669  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000195,"loginCount":1,"nickname":"user195","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.669  INFO 36520 --- [http-nio-8888-exec-179] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000669,"loginCount":1,"nickname":"user669","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.669  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000015,"loginCount":1,"nickname":"user15","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.669  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000144,"loginCount":1,"nickname":"user144","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.670  INFO 36520 --- [http-nio-8888-exec-58] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000670,"loginCount":1,"nickname":"user670","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.670 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.671 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.671  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000101,"loginCount":1,"nickname":"user101","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.671  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000198,"loginCount":1,"nickname":"user198","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.671  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000062,"loginCount":1,"nickname":"user62","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.671 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.671 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.671 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000671,"loginCount":1,"nickname":"user671","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.672  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000189,"loginCount":1,"nickname":"user189","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.672  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000132,"loginCount":1,"nickname":"user132","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.672  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000011,"loginCount":1,"nickname":"user11","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.672  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000061,"loginCount":1,"nickname":"user61","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.672  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000069,"loginCount":1,"nickname":"user69","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.672 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.673  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000016,"loginCount":1,"nickname":"user16","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.673 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.674  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000124,"loginCount":1,"nickname":"user124","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.674  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000089,"loginCount":1,"nickname":"user89","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.674 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.674  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000006,"loginCount":1,"nickname":"user6","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.675 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.675 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.675 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.676 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.677  INFO 36520 --- [http-nio-8888-exec-63] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000672,"loginCount":1,"nickname":"user672","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000114,"loginCount":1,"nickname":"user114","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [http-nio-8888-exec-165] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000674,"loginCount":1,"nickname":"user674","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000048,"loginCount":1,"nickname":"user48","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000077,"loginCount":1,"nickname":"user77","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000104,"loginCount":1,"nickname":"user104","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000022,"loginCount":1,"nickname":"user22","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000080,"loginCount":1,"nickname":"user80","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000065,"loginCount":1,"nickname":"user65","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000145,"loginCount":1,"nickname":"user145","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000142,"loginCount":1,"nickname":"user142","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.678 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677  INFO 36520 --- [http-nio-8888-exec-185] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000673,"loginCount":1,"nickname":"user673","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.677 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.678 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.678 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.678 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.679 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.679  INFO 36520 --- [http-nio-8888-exec-183] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000675,"loginCount":1,"nickname":"user675","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.678 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.678 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.679 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.680 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.680 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000053,"loginCount":1,"nickname":"user53","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000045,"loginCount":1,"nickname":"user45","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000112,"loginCount":1,"nickname":"user112","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000147,"loginCount":1,"nickname":"user147","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000032,"loginCount":1,"nickname":"user32","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000098,"loginCount":1,"nickname":"user98","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000099,"loginCount":1,"nickname":"user99","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000123,"loginCount":1,"nickname":"user123","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000025,"loginCount":1,"nickname":"user25","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.681 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682  INFO 36520 --- [http-nio-8888-exec-74] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000678,"loginCount":1,"nickname":"user678","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.682 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.682  INFO 36520 --- [http-nio-8888-exec-97] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000685,"loginCount":1,"nickname":"user685","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.682  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000679,"loginCount":1,"nickname":"user679","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.683  INFO 36520 --- [http-nio-8888-exec-111] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000676,"loginCount":1,"nickname":"user676","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.683  INFO 36520 --- [http-nio-8888-exec-149] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000677,"loginCount":1,"nickname":"user677","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.683  INFO 36520 --- [http-nio-8888-exec-99] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000681,"loginCount":1,"nickname":"user681","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.683  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000683,"loginCount":1,"nickname":"user683","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.684  INFO 36520 --- [http-nio-8888-exec-73] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000684,"loginCount":1,"nickname":"user684","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.684  INFO 36520 --- [http-nio-8888-exec-26] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000680,"loginCount":1,"nickname":"user680","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.684  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000682,"loginCount":1,"nickname":"user682","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.685  INFO 36520 --- [http-nio-8888-exec-67] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000686,"loginCount":1,"nickname":"user686","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000117,"loginCount":1,"nickname":"user117","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000019,"loginCount":1,"nickname":"user19","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000161,"loginCount":1,"nickname":"user161","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000090,"loginCount":1,"nickname":"user90","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000193,"loginCount":1,"nickname":"user193","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000085,"loginCount":1,"nickname":"user85","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000105,"loginCount":1,"nickname":"user105","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000109,"loginCount":1,"nickname":"user109","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000102,"loginCount":1,"nickname":"user102","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.687 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.688  INFO 36520 --- [http-nio-8888-exec-191] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000687,"loginCount":1,"nickname":"user687","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.688  INFO 36520 --- [http-nio-8888-exec-113] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000688,"loginCount":1,"nickname":"user688","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.688 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.689  INFO 36520 --- [http-nio-8888-exec-62] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000689,"loginCount":1,"nickname":"user689","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.690  INFO 36520 --- [http-nio-8888-exec-7] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000691,"loginCount":1,"nickname":"user691","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.690  INFO 36520 --- [http-nio-8888-exec-98] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000690,"loginCount":1,"nickname":"user690","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.690  INFO 36520 --- [http-nio-8888-exec-23] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000693,"loginCount":1,"nickname":"user693","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.690  INFO 36520 --- [http-nio-8888-exec-95] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000692,"loginCount":1,"nickname":"user692","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000027,"loginCount":1,"nickname":"user27","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000074,"loginCount":1,"nickname":"user74","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000097,"loginCount":1,"nickname":"user97","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000009,"loginCount":1,"nickname":"user9","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000149,"loginCount":1,"nickname":"user149","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000055,"loginCount":1,"nickname":"user55","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000156,"loginCount":1,"nickname":"user156","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.691 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.691 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.691 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.692 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.694  INFO 36520 --- [http-nio-8888-exec-184] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000696,"loginCount":1,"nickname":"user696","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.695  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000694,"loginCount":1,"nickname":"user694","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.695  INFO 36520 --- [http-nio-8888-exec-145] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000695,"loginCount":1,"nickname":"user695","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.697 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.mapper.TSeckillOrderMapper.insert  : <==    Updates: 1
2021-07-10 22:27:33.698  INFO 36520 --- [http-nio-8888-exec-41] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000697,"loginCount":1,"nickname":"user697","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.698  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000698,"loginCount":1,"nickname":"user698","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.698  INFO 36520 --- [http-nio-8888-exec-105] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000699,"loginCount":1,"nickname":"user699","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.699  INFO 36520 --- [http-nio-8888-exec-194] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000700,"loginCount":1,"nickname":"user700","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.700  INFO 36520 --- [http-nio-8888-exec-186] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000701,"loginCount":1,"nickname":"user701","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.701  INFO 36520 --- [http-nio-8888-exec-65] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000702,"loginCount":1,"nickname":"user702","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.703  INFO 36520 --- [http-nio-8888-exec-102] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000703,"loginCount":1,"nickname":"user703","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.705  INFO 36520 --- [http-nio-8888-exec-196] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000704,"loginCount":1,"nickname":"user704","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.705  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000705,"loginCount":1,"nickname":"user705","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.705  INFO 36520 --- [http-nio-8888-exec-96] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000707,"loginCount":1,"nickname":"user707","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.705  INFO 36520 --- [http-nio-8888-exec-134] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000706,"loginCount":1,"nickname":"user706","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.706  INFO 36520 --- [http-nio-8888-exec-178] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000708,"loginCount":1,"nickname":"user708","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.707  INFO 36520 --- [http-nio-8888-exec-180] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000709,"loginCount":1,"nickname":"user709","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.707  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000209,"loginCount":1,"nickname":"user209","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.707  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000227,"loginCount":1,"nickname":"user227","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.707 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.707 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.707 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.707 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.708 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.709 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.709  INFO 36520 --- [http-nio-8888-exec-119] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000710,"loginCount":1,"nickname":"user710","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.709  INFO 36520 --- [http-nio-8888-exec-81] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000711,"loginCount":1,"nickname":"user711","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.712  INFO 36520 --- [http-nio-8888-exec-156] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000712,"loginCount":1,"nickname":"user712","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.712  INFO 36520 --- [http-nio-8888-exec-42] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000713,"loginCount":1,"nickname":"user713","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.712  INFO 36520 --- [http-nio-8888-exec-153] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000714,"loginCount":1,"nickname":"user714","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [http-nio-8888-exec-3] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000715,"loginCount":1,"nickname":"user715","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000205,"loginCount":1,"nickname":"user205","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000228,"loginCount":1,"nickname":"user228","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000182,"loginCount":1,"nickname":"user182","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000141,"loginCount":1,"nickname":"user141","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000033,"loginCount":1,"nickname":"user33","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000068,"loginCount":1,"nickname":"user68","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000051,"loginCount":1,"nickname":"user51","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000239,"loginCount":1,"nickname":"user239","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000216,"loginCount":1,"nickname":"user216","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.717  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000001,"loginCount":1,"nickname":"user1","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.717 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.719 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.718 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.719 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.719 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.719 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.719  INFO 36520 --- [http-nio-8888-exec-103] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000717,"loginCount":1,"nickname":"user717","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.721  INFO 36520 --- [http-nio-8888-exec-132] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000719,"loginCount":1,"nickname":"user719","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.721  INFO 36520 --- [http-nio-8888-exec-112] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000716,"loginCount":1,"nickname":"user716","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.721  INFO 36520 --- [http-nio-8888-exec-51] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000718,"loginCount":1,"nickname":"user718","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.721  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000720,"loginCount":1,"nickname":"user720","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000173,"loginCount":1,"nickname":"user173","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000226,"loginCount":1,"nickname":"user226","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000037,"loginCount":1,"nickname":"user37","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000007,"loginCount":1,"nickname":"user7","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000008,"loginCount":1,"nickname":"user8","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000233,"loginCount":1,"nickname":"user233","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000224,"loginCount":1,"nickname":"user224","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000154,"loginCount":1,"nickname":"user154","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000197,"loginCount":1,"nickname":"user197","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000164,"loginCount":1,"nickname":"user164","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.722 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.723  INFO 36520 --- [http-nio-8888-exec-87] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000721,"loginCount":1,"nickname":"user721","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.724  INFO 36520 --- [http-nio-8888-exec-45] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000722,"loginCount":1,"nickname":"user722","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.725  INFO 36520 --- [http-nio-8888-exec-135] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000723,"loginCount":1,"nickname":"user723","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [http-nio-8888-exec-55] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000724,"loginCount":1,"nickname":"user724","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000203,"loginCount":1,"nickname":"user203","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000234,"loginCount":1,"nickname":"user234","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000236,"loginCount":1,"nickname":"user236","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000005,"loginCount":1,"nickname":"user5","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000188,"loginCount":1,"nickname":"user188","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000207,"loginCount":1,"nickname":"user207","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000191,"loginCount":1,"nickname":"user191","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000095,"loginCount":1,"nickname":"user95","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.726 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.727  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000237,"loginCount":1,"nickname":"user237","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.727  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000235,"loginCount":1,"nickname":"user235","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.727  INFO 36520 --- [http-nio-8888-exec-10] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000726,"loginCount":1,"nickname":"user726","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000725,"loginCount":1,"nickname":"user725","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.727 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.728  INFO 36520 --- [http-nio-8888-exec-32] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000727,"loginCount":1,"nickname":"user727","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000071,"loginCount":1,"nickname":"user71","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000026,"loginCount":1,"nickname":"user26","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000214,"loginCount":1,"nickname":"user214","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000220,"loginCount":1,"nickname":"user220","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000155,"loginCount":1,"nickname":"user155","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000070,"loginCount":1,"nickname":"user70","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000225,"loginCount":1,"nickname":"user225","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000052,"loginCount":1,"nickname":"user52","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000232,"loginCount":1,"nickname":"user232","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.729  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000222,"loginCount":1,"nickname":"user222","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730  INFO 36520 --- [http-nio-8888-exec-124] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000728,"loginCount":1,"nickname":"user728","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.730 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.731 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.733  INFO 36520 --- [http-nio-8888-exec-55] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000730,"loginCount":1,"nickname":"user730","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000024,"loginCount":1,"nickname":"user24","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000129,"loginCount":1,"nickname":"user129","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000076,"loginCount":1,"nickname":"user76","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000218,"loginCount":1,"nickname":"user218","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000017,"loginCount":1,"nickname":"user17","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000241,"loginCount":1,"nickname":"user241","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000066,"loginCount":1,"nickname":"user66","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000087,"loginCount":1,"nickname":"user87","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000249,"loginCount":1,"nickname":"user249","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.733 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.733 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.733 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.733  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000113,"loginCount":1,"nickname":"user113","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.734 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735  INFO 36520 --- [http-nio-8888-exec-158] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000731,"loginCount":1,"nickname":"user731","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.735 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.736  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000732,"loginCount":1,"nickname":"user732","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.736  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000733,"loginCount":1,"nickname":"user733","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.736  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000729,"loginCount":1,"nickname":"user729","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.736  INFO 36520 --- [http-nio-8888-exec-136] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000736,"loginCount":1,"nickname":"user736","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.737  INFO 36520 --- [http-nio-8888-exec-84] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000735,"loginCount":1,"nickname":"user735","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.737  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000020,"loginCount":1,"nickname":"user20","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.737 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.737 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.737  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000047,"loginCount":1,"nickname":"user47","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.737  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000063,"loginCount":1,"nickname":"user63","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.738  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000184,"loginCount":1,"nickname":"user184","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.738 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.738  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000093,"loginCount":1,"nickname":"user93","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.738  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000206,"loginCount":1,"nickname":"user206","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.739  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000157,"loginCount":1,"nickname":"user157","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.739  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000004,"loginCount":1,"nickname":"user4","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.739  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000737,"loginCount":1,"nickname":"user737","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.739  INFO 36520 --- [http-nio-8888-exec-106] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000734,"loginCount":1,"nickname":"user734","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.739 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.740  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000738,"loginCount":1,"nickname":"user738","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.740 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.740  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000217,"loginCount":1,"nickname":"user217","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.741  INFO 36520 --- [http-nio-8888-exec-174] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000739,"loginCount":1,"nickname":"user739","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.741 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.741  INFO 36520 --- [http-nio-8888-exec-200] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000740,"loginCount":1,"nickname":"user740","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.741 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.742 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.742  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000014,"loginCount":1,"nickname":"user14","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.742  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000267,"loginCount":1,"nickname":"user267","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.742  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000038,"loginCount":1,"nickname":"user38","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.742  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000229,"loginCount":1,"nickname":"user229","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.742  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000215,"loginCount":1,"nickname":"user215","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000242,"loginCount":1,"nickname":"user242","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000219,"loginCount":1,"nickname":"user219","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.742  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000169,"loginCount":1,"nickname":"user169","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000202,"loginCount":1,"nickname":"user202","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000044,"loginCount":1,"nickname":"user44","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.743  INFO 36520 --- [http-nio-8888-exec-37] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000741,"loginCount":1,"nickname":"user741","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743  INFO 36520 --- [http-nio-8888-exec-157] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000742,"loginCount":1,"nickname":"user742","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.743 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.744 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.744 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.744 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.744 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.744 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.744 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.745  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000743,"loginCount":1,"nickname":"user743","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000153,"loginCount":1,"nickname":"user153","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000143,"loginCount":1,"nickname":"user143","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000230,"loginCount":1,"nickname":"user230","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000091,"loginCount":1,"nickname":"user91","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000166,"loginCount":1,"nickname":"user166","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000106,"loginCount":1,"nickname":"user106","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000744,"loginCount":1,"nickname":"user744","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000168,"loginCount":1,"nickname":"user168","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000208,"loginCount":1,"nickname":"user208","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000223,"loginCount":1,"nickname":"user223","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.746 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.747  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000210,"loginCount":1,"nickname":"user210","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.748 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.748 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.748 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.748  INFO 36520 --- [http-nio-8888-exec-22] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000745,"loginCount":1,"nickname":"user745","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.748  INFO 36520 --- [http-nio-8888-exec-37] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000747,"loginCount":1,"nickname":"user747","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000031,"loginCount":1,"nickname":"user31","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000160,"loginCount":1,"nickname":"user160","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000212,"loginCount":1,"nickname":"user212","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000238,"loginCount":1,"nickname":"user238","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000178,"loginCount":1,"nickname":"user178","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000175,"loginCount":1,"nickname":"user175","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751  INFO 36520 --- [http-nio-8888-exec-83] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000746,"loginCount":1,"nickname":"user746","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000204,"loginCount":1,"nickname":"user204","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000240,"loginCount":1,"nickname":"user240","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000125,"loginCount":1,"nickname":"user125","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000064,"loginCount":1,"nickname":"user64","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000749,"loginCount":1,"nickname":"user749","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751  INFO 36520 --- [http-nio-8888-exec-140] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000750,"loginCount":1,"nickname":"user750","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.751 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.751  INFO 36520 --- [http-nio-8888-exec-138] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000748,"loginCount":1,"nickname":"user748","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.752 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.753 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.753  INFO 36520 --- [http-nio-8888-exec-14] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000751,"loginCount":1,"nickname":"user751","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.754  INFO 36520 --- [http-nio-8888-exec-25] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000753,"loginCount":1,"nickname":"user753","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000078,"loginCount":1,"nickname":"user78","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [http-nio-8888-exec-19] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000754,"loginCount":1,"nickname":"user754","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000054,"loginCount":1,"nickname":"user54","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000231,"loginCount":1,"nickname":"user231","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000201,"loginCount":1,"nickname":"user201","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000259,"loginCount":1,"nickname":"user259","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [http-nio-8888-exec-91] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000752,"loginCount":1,"nickname":"user752","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000213,"loginCount":1,"nickname":"user213","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000283,"loginCount":1,"nickname":"user283","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000200,"loginCount":1,"nickname":"user200","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000094,"loginCount":1,"nickname":"user94","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000034,"loginCount":1,"nickname":"user34","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.755 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.756 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.758  INFO 36520 --- [http-nio-8888-exec-57] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000757,"loginCount":1,"nickname":"user757","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.758  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000756,"loginCount":1,"nickname":"user756","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.758  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000755,"loginCount":1,"nickname":"user755","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000096,"loginCount":1,"nickname":"user96","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000058,"loginCount":1,"nickname":"user58","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000165,"loginCount":1,"nickname":"user165","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000035,"loginCount":1,"nickname":"user35","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000067,"loginCount":1,"nickname":"user67","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000221,"loginCount":1,"nickname":"user221","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000138,"loginCount":1,"nickname":"user138","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000081,"loginCount":1,"nickname":"user81","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000134,"loginCount":1,"nickname":"user134","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000060,"loginCount":1,"nickname":"user60","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.759 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.760 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.761  INFO 36520 --- [http-nio-8888-exec-53] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000758,"loginCount":1,"nickname":"user758","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.761  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000111,"loginCount":1,"nickname":"user111","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.761  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000211,"loginCount":1,"nickname":"user211","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.761  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000172,"loginCount":1,"nickname":"user172","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.761  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000073,"loginCount":1,"nickname":"user73","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.761  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000046,"loginCount":1,"nickname":"user46","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.761  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000131,"loginCount":1,"nickname":"user131","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.762  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000084,"loginCount":1,"nickname":"user84","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000010,"loginCount":1,"nickname":"user10","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000176,"loginCount":1,"nickname":"user176","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000118,"loginCount":1,"nickname":"user118","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.762 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.763  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000759,"loginCount":1,"nickname":"user759","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.764  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000762,"loginCount":1,"nickname":"user762","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.764  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000306,"loginCount":1,"nickname":"user306","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.765  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000275,"loginCount":1,"nickname":"user275","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.764  INFO 36520 --- [http-nio-8888-exec-80] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000760,"loginCount":1,"nickname":"user760","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.765  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000261,"loginCount":1,"nickname":"user261","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.764  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000115,"loginCount":1,"nickname":"user115","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.764  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000100,"loginCount":1,"nickname":"user100","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.764  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000151,"loginCount":1,"nickname":"user151","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.764  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000030,"loginCount":1,"nickname":"user30","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000042,"loginCount":1,"nickname":"user42","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000266,"loginCount":1,"nickname":"user266","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.765 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.766  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000262,"loginCount":1,"nickname":"user262","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.766  INFO 36520 --- [http-nio-8888-exec-2] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000761,"loginCount":1,"nickname":"user761","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.766  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000763,"loginCount":1,"nickname":"user763","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.766 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.767  INFO 36520 --- [http-nio-8888-exec-75] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000765,"loginCount":1,"nickname":"user765","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.767  INFO 36520 --- [http-nio-8888-exec-8] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000766,"loginCount":1,"nickname":"user766","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.767  INFO 36520 --- [http-nio-8888-exec-68] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000764,"loginCount":1,"nickname":"user764","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [http-nio-8888-exec-167] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000767,"loginCount":1,"nickname":"user767","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000056,"loginCount":1,"nickname":"user56","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.768  INFO 36520 --- [http-nio-8888-exec-173] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000768,"loginCount":1,"nickname":"user768","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000139,"loginCount":1,"nickname":"user139","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000770,"loginCount":1,"nickname":"user770","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000121,"loginCount":1,"nickname":"user121","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000265,"loginCount":1,"nickname":"user265","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000013,"loginCount":1,"nickname":"user13","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000116,"loginCount":1,"nickname":"user116","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.768 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.769  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000273,"loginCount":1,"nickname":"user273","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.769  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000086,"loginCount":1,"nickname":"user86","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.769  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000107,"loginCount":1,"nickname":"user107","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.769 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.770  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000769,"loginCount":1,"nickname":"user769","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.770  INFO 36520 --- [http-nio-8888-exec-16] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000771,"loginCount":1,"nickname":"user771","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.770  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000269,"loginCount":1,"nickname":"user269","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.770 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.771 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.771 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.771  INFO 36520 --- [http-nio-8888-exec-64] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000772,"loginCount":1,"nickname":"user772","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000108,"loginCount":1,"nickname":"user108","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000122,"loginCount":1,"nickname":"user122","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000126,"loginCount":1,"nickname":"user126","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000003,"loginCount":1,"nickname":"user3","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000177,"loginCount":1,"nickname":"user177","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000021,"loginCount":1,"nickname":"user21","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000255,"loginCount":1,"nickname":"user255","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000059,"loginCount":1,"nickname":"user59","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000186,"loginCount":1,"nickname":"user186","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000774,"loginCount":1,"nickname":"user774","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000136,"loginCount":1,"nickname":"user136","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773  INFO 36520 --- [http-nio-8888-exec-77] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000773,"loginCount":1,"nickname":"user773","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.773 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.774 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000171,"loginCount":1,"nickname":"user171","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000256,"loginCount":1,"nickname":"user256","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000245,"loginCount":1,"nickname":"user245","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000002,"loginCount":1,"nickname":"user2","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000029,"loginCount":1,"nickname":"user29","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000159,"loginCount":1,"nickname":"user159","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000152,"loginCount":1,"nickname":"user152","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000137,"loginCount":1,"nickname":"user137","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000072,"loginCount":1,"nickname":"user72","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.776 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777  INFO 36520 --- [http-nio-8888-exec-1] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000777,"loginCount":1,"nickname":"user777","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777  INFO 36520 --- [http-nio-8888-exec-63] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000776,"loginCount":1,"nickname":"user776","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.776  INFO 36520 --- [http-nio-8888-exec-165] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000775,"loginCount":1,"nickname":"user775","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.777 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.778  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000251,"loginCount":1,"nickname":"user251","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.778 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.778 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.778  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000778,"loginCount":1,"nickname":"user778","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.778 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.778  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000779,"loginCount":1,"nickname":"user779","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000185,"loginCount":1,"nickname":"user185","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000174,"loginCount":1,"nickname":"user174","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000103,"loginCount":1,"nickname":"user103","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000181,"loginCount":1,"nickname":"user181","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000040,"loginCount":1,"nickname":"user40","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000012,"loginCount":1,"nickname":"user12","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000075,"loginCount":1,"nickname":"user75","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000083,"loginCount":1,"nickname":"user83","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000158,"loginCount":1,"nickname":"user158","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.780 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.781  INFO 36520 --- [http-nio-8888-exec-74] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000780,"loginCount":1,"nickname":"user780","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.781 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000369,"loginCount":1,"nickname":"user369","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000082,"loginCount":1,"nickname":"user82","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000133,"loginCount":1,"nickname":"user133","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000337,"loginCount":1,"nickname":"user337","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000028,"loginCount":1,"nickname":"user28","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000150,"loginCount":1,"nickname":"user150","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000304,"loginCount":1,"nickname":"user304","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.782  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000146,"loginCount":1,"nickname":"user146","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000050,"loginCount":1,"nickname":"user50","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000043,"loginCount":1,"nickname":"user43","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000781,"loginCount":1,"nickname":"user781","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.783  INFO 36520 --- [http-nio-8888-exec-97] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000782,"loginCount":1,"nickname":"user782","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.783 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.784  INFO 36520 --- [http-nio-8888-exec-116] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000785,"loginCount":1,"nickname":"user785","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.785  INFO 36520 --- [http-nio-8888-exec-66] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000784,"loginCount":1,"nickname":"user784","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000786,"loginCount":1,"nickname":"user786","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [http-nio-8888-exec-125] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000783,"loginCount":1,"nickname":"user783","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000127,"loginCount":1,"nickname":"user127","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000331,"loginCount":1,"nickname":"user331","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000092,"loginCount":1,"nickname":"user92","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000170,"loginCount":1,"nickname":"user170","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000325,"loginCount":1,"nickname":"user325","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000333,"loginCount":1,"nickname":"user333","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000321,"loginCount":1,"nickname":"user321","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000183,"loginCount":1,"nickname":"user183","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000360,"loginCount":1,"nickname":"user360","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000312,"loginCount":1,"nickname":"user312","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.787 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.788 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.789  INFO 36520 --- [http-nio-8888-exec-144] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000787,"loginCount":1,"nickname":"user787","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.790  INFO 36520 --- [http-nio-8888-exec-67] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000790,"loginCount":1,"nickname":"user790","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.790  INFO 36520 --- [http-nio-8888-exec-26] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000788,"loginCount":1,"nickname":"user788","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.790  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000427,"loginCount":1,"nickname":"user427","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.790  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000320,"loginCount":1,"nickname":"user320","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000285,"loginCount":1,"nickname":"user285","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.790  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000423,"loginCount":1,"nickname":"user423","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000036,"loginCount":1,"nickname":"user36","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000290,"loginCount":1,"nickname":"user290","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000148,"loginCount":1,"nickname":"user148","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000287,"loginCount":1,"nickname":"user287","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.791  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000049,"loginCount":1,"nickname":"user49","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.792  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000431,"loginCount":1,"nickname":"user431","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.792  INFO 36520 --- [http-nio-8888-exec-114] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000791,"loginCount":1,"nickname":"user791","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000789,"loginCount":1,"nickname":"user789","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.791 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.792 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.793 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.794  INFO 36520 --- [http-nio-8888-exec-125] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000792,"loginCount":1,"nickname":"user792","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.795  INFO 36520 --- [http-nio-8888-exec-31] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000793,"loginCount":1,"nickname":"user793","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.795  INFO 36520 --- [http-nio-8888-exec-101] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000794,"loginCount":1,"nickname":"user794","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [http-nio-8888-exec-7] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000796,"loginCount":1,"nickname":"user796","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000088,"loginCount":1,"nickname":"user88","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000187,"loginCount":1,"nickname":"user187","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000428,"loginCount":1,"nickname":"user428","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000057,"loginCount":1,"nickname":"user57","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000402,"loginCount":1,"nickname":"user402","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000378,"loginCount":1,"nickname":"user378","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000343,"loginCount":1,"nickname":"user343","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000392,"loginCount":1,"nickname":"user392","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000444,"loginCount":1,"nickname":"user444","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000441,"loginCount":1,"nickname":"user441","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.797 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.798  INFO 36520 --- [http-nio-8888-exec-79] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000795,"loginCount":1,"nickname":"user795","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.797  INFO 36520 --- [http-nio-8888-exec-98] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000797,"loginCount":1,"nickname":"user797","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.798 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.799 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.799  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000798,"loginCount":1,"nickname":"user798","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.799  INFO 36520 --- [http-nio-8888-exec-184] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000799,"loginCount":1,"nickname":"user799","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.799  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000800,"loginCount":1,"nickname":"user800","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.800  INFO 36520 --- [http-nio-8888-exec-108] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000801,"loginCount":1,"nickname":"user801","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802  INFO 36520 --- [http-nio-8888-exec-27] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000802,"loginCount":1,"nickname":"user802","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000367,"loginCount":1,"nickname":"user367","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000452,"loginCount":1,"nickname":"user452","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000377,"loginCount":1,"nickname":"user377","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000373,"loginCount":1,"nickname":"user373","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000395,"loginCount":1,"nickname":"user395","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000364,"loginCount":1,"nickname":"user364","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000387,"loginCount":1,"nickname":"user387","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.802 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.803  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000418,"loginCount":1,"nickname":"user418","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.803  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000368,"loginCount":1,"nickname":"user368","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.803 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.804  INFO 36520 --- [http-nio-8888-exec-13] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000803,"loginCount":1,"nickname":"user803","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000420,"loginCount":1,"nickname":"user420","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000439,"loginCount":1,"nickname":"user439","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000394,"loginCount":1,"nickname":"user394","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000426,"loginCount":1,"nickname":"user426","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000416,"loginCount":1,"nickname":"user416","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000135,"loginCount":1,"nickname":"user135","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000292,"loginCount":1,"nickname":"user292","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000358,"loginCount":1,"nickname":"user358","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000419,"loginCount":1,"nickname":"user419","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000346,"loginCount":1,"nickname":"user346","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.805 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.806  INFO 36520 --- [http-nio-8888-exec-29] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000806,"loginCount":1,"nickname":"user806","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.806  INFO 36520 --- [http-nio-8888-exec-186] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000804,"loginCount":1,"nickname":"user804","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.806  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000807,"loginCount":1,"nickname":"user807","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.807  INFO 36520 --- [http-nio-8888-exec-102] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000808,"loginCount":1,"nickname":"user808","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.807  INFO 36520 --- [http-nio-8888-exec-65] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000805,"loginCount":1,"nickname":"user805","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.807  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000809,"loginCount":1,"nickname":"user809","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.808  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000350,"loginCount":1,"nickname":"user350","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.808  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000417,"loginCount":1,"nickname":"user417","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.808  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000365,"loginCount":1,"nickname":"user365","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.808  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000430,"loginCount":1,"nickname":"user430","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.808 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.809  INFO 36520 --- [http-nio-8888-exec-78] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000810,"loginCount":1,"nickname":"user810","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.809  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000359,"loginCount":1,"nickname":"user359","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000351,"loginCount":1,"nickname":"user351","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000345,"loginCount":1,"nickname":"user345","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000412,"loginCount":1,"nickname":"user412","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.809  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000338,"loginCount":1,"nickname":"user338","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000315,"loginCount":1,"nickname":"user315","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.809 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.810  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000354,"loginCount":1,"nickname":"user354","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.810  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000356,"loginCount":1,"nickname":"user356","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.810  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000422,"loginCount":1,"nickname":"user422","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.810 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.811  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000380,"loginCount":1,"nickname":"user380","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.811  INFO 36520 --- [http-nio-8888-exec-59] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000811,"loginCount":1,"nickname":"user811","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.811  INFO 36520 --- [http-nio-8888-exec-176] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000812,"loginCount":1,"nickname":"user812","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.811 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000375,"loginCount":1,"nickname":"user375","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000450,"loginCount":1,"nickname":"user450","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000389,"loginCount":1,"nickname":"user389","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000300,"loginCount":1,"nickname":"user300","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000309,"loginCount":1,"nickname":"user309","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000475,"loginCount":1,"nickname":"user475","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000385,"loginCount":1,"nickname":"user385","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000405,"loginCount":1,"nickname":"user405","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000314,"loginCount":1,"nickname":"user314","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.812  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000303,"loginCount":1,"nickname":"user303","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.812 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.813 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.815  INFO 36520 --- [http-nio-8888-exec-69] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000813,"loginCount":1,"nickname":"user813","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.815  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000347,"loginCount":1,"nickname":"user347","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.815  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000336,"loginCount":1,"nickname":"user336","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.815  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000370,"loginCount":1,"nickname":"user370","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.815  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000469,"loginCount":1,"nickname":"user469","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.815  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000414,"loginCount":1,"nickname":"user414","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.815 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.816  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000322,"loginCount":1,"nickname":"user322","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.816  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000352,"loginCount":1,"nickname":"user352","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.816  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000484,"loginCount":1,"nickname":"user484","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.816  INFO 36520 --- [http-nio-8888-exec-81] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000814,"loginCount":1,"nickname":"user814","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.816  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000318,"loginCount":1,"nickname":"user318","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.816  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000330,"loginCount":1,"nickname":"user330","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.816 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.817  INFO 36520 --- [http-nio-8888-exec-123] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000815,"loginCount":1,"nickname":"user815","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.817 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.817 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.817 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.817 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.817 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000425,"loginCount":1,"nickname":"user425","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000326,"loginCount":1,"nickname":"user326","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000291,"loginCount":1,"nickname":"user291","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000288,"loginCount":1,"nickname":"user288","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [http-nio-8888-exec-156] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000816,"loginCount":1,"nickname":"user816","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000279,"loginCount":1,"nickname":"user279","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000250,"loginCount":1,"nickname":"user250","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000286,"loginCount":1,"nickname":"user286","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000268,"loginCount":1,"nickname":"user268","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.818 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.819  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000278,"loginCount":1,"nickname":"user278","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.819 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.819 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.819  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000436,"loginCount":1,"nickname":"user436","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.819 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.840 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.819 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.840 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.840 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.821  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000434,"loginCount":1,"nickname":"user434","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.819 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.821  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000399,"loginCount":1,"nickname":"user399","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.840 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.841 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.844  INFO 36520 --- [http-nio-8888-exec-12] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000837,"loginCount":1,"nickname":"user837","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.844  INFO 36520 --- [http-nio-8888-exec-103] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000821,"loginCount":1,"nickname":"user821","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.845 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.845  INFO 36520 --- [http-nio-8888-exec-32] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000838,"loginCount":1,"nickname":"user838","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.821  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000372,"loginCount":1,"nickname":"user372","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.845 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.845 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.840 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.821  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000411,"loginCount":1,"nickname":"user411","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.846 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.846 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.846 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.841 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.846  INFO 36520 --- [http-nio-8888-exec-46] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000840,"loginCount":1,"nickname":"user840","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.846 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.846 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.841 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.841 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.842  INFO 36520 --- [http-nio-8888-exec-6] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000820,"loginCount":1,"nickname":"user820","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.842  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000819,"loginCount":1,"nickname":"user819","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.842  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000393,"loginCount":1,"nickname":"user393","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.842  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000386,"loginCount":1,"nickname":"user386","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.842  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000432,"loginCount":1,"nickname":"user432","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.843  INFO 36520 --- [http-nio-8888-exec-18] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000818,"loginCount":1,"nickname":"user818","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.843  INFO 36520 --- [http-nio-8888-exec-153] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000817,"loginCount":1,"nickname":"user817","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.843  INFO 36520 --- [http-nio-8888-exec-124] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000841,"loginCount":1,"nickname":"user841","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.848 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.847 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.844  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000835,"loginCount":1,"nickname":"user835","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.848 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.844  INFO 36520 --- [http-nio-8888-exec-112] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000825,"loginCount":1,"nickname":"user825","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.849 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.850  INFO 36520 --- [http-nio-8888-exec-20] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000847,"loginCount":1,"nickname":"user847","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-21] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000822,"loginCount":1,"nickname":"user822","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-51] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000823,"loginCount":1,"nickname":"user823","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-55] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000843,"loginCount":1,"nickname":"user843","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-152] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000833,"loginCount":1,"nickname":"user833","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-132] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000826,"loginCount":1,"nickname":"user826","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-87] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000827,"loginCount":1,"nickname":"user827","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-162] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000828,"loginCount":1,"nickname":"user828","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.852  INFO 36520 --- [http-nio-8888-exec-197] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000830,"loginCount":1,"nickname":"user830","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.852  INFO 36520 --- [http-nio-8888-exec-158] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000845,"loginCount":1,"nickname":"user845","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.851  INFO 36520 --- [http-nio-8888-exec-10] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000836,"loginCount":1,"nickname":"user836","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.852  INFO 36520 --- [http-nio-8888-exec-45] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000829,"loginCount":1,"nickname":"user829","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.853  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000824,"loginCount":1,"nickname":"user824","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.853  INFO 36520 --- [http-nio-8888-exec-49] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000844,"loginCount":1,"nickname":"user844","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.854  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000424,"loginCount":1,"nickname":"user424","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.854  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000429,"loginCount":1,"nickname":"user429","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.854  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000495,"loginCount":1,"nickname":"user495","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.854  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000260,"loginCount":1,"nickname":"user260","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.854  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000371,"loginCount":1,"nickname":"user371","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.855 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.854 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.855 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.855 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.854  INFO 36520 --- [http-nio-8888-exec-17] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000842,"loginCount":1,"nickname":"user842","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.855 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.855 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.856  INFO 36520 --- [http-nio-8888-exec-141] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000839,"loginCount":1,"nickname":"user839","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000848,"loginCount":1,"nickname":"user848","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000493,"loginCount":1,"nickname":"user493","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000391,"loginCount":1,"nickname":"user391","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000243,"loginCount":1,"nickname":"user243","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.856 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.856  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000433,"loginCount":1,"nickname":"user433","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.856 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.857 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.857  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000846,"loginCount":1,"nickname":"user846","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.856 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.856 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.857 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.857 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.857 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.857 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.857 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.857  INFO 36520 --- [http-nio-8888-exec-168] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000832,"loginCount":1,"nickname":"user832","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.858  INFO 36520 --- [http-nio-8888-exec-135] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000831,"loginCount":1,"nickname":"user831","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.858  INFO 36520 --- [http-nio-8888-exec-47] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000834,"loginCount":1,"nickname":"user834","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.858  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000280,"loginCount":1,"nickname":"user280","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.858 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.858 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.859 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.861  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000282,"loginCount":1,"nickname":"user282","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.861  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000408,"loginCount":1,"nickname":"user408","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.861  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000258,"loginCount":1,"nickname":"user258","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.861 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.861 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.861 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.861 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.861 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.861 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.862 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.862 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.862 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000491,"loginCount":1,"nickname":"user491","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000406,"loginCount":1,"nickname":"user406","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000397,"loginCount":1,"nickname":"user397","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000396,"loginCount":1,"nickname":"user396","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.862 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.862 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000501,"loginCount":1,"nickname":"user501","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000410,"loginCount":1,"nickname":"user410","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.862  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000401,"loginCount":1,"nickname":"user401","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.864 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.865 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.863 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.865 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.863  INFO 36520 --- [http-nio-8888-exec-39] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000849,"loginCount":1,"nickname":"user849","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.865 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.865 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.866  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000409,"loginCount":1,"nickname":"user409","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.866  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000508,"loginCount":1,"nickname":"user508","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.866  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000512,"loginCount":1,"nickname":"user512","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.866 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.866 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.866 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.866 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.866 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.867 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.867 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.867 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.867 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.867  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000854,"loginCount":1,"nickname":"user854","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.868  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000403,"loginCount":1,"nickname":"user403","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.868  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000246,"loginCount":1,"nickname":"user246","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.868  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000404,"loginCount":1,"nickname":"user404","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.868 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.868 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.868 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.868 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.868  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000296,"loginCount":1,"nickname":"user296","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.868 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.868  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000400,"loginCount":1,"nickname":"user400","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.869 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.870 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.870  INFO 36520 --- [http-nio-8888-exec-12] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000850,"loginCount":1,"nickname":"user850","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.870 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.870  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000353,"loginCount":1,"nickname":"user353","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.870 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.870 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.870  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000305,"loginCount":1,"nickname":"user305","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.871 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.871 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.871  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000299,"loginCount":1,"nickname":"user299","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.871 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.871 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.871 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.871 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.872  INFO 36520 --- [http-nio-8888-exec-198] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000853,"loginCount":1,"nickname":"user853","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.872  INFO 36520 --- [http-nio-8888-exec-51] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000855,"loginCount":1,"nickname":"user855","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.873 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.873  INFO 36520 --- [http-nio-8888-exec-200] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000852,"loginCount":1,"nickname":"user852","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.873  INFO 36520 --- [http-nio-8888-exec-122] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000851,"loginCount":1,"nickname":"user851","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.874  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000313,"loginCount":1,"nickname":"user313","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.874 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.874 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.874  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000415,"loginCount":1,"nickname":"user415","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.875 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.875 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.875  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000860,"loginCount":1,"nickname":"user860","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.876 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.876 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.876  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000861,"loginCount":1,"nickname":"user861","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.875  INFO 36520 --- [http-nio-8888-exec-130] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000865,"loginCount":1,"nickname":"user865","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.877  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000311,"loginCount":1,"nickname":"user311","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.877  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000317,"loginCount":1,"nickname":"user317","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.877  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000349,"loginCount":1,"nickname":"user349","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.877  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000332,"loginCount":1,"nickname":"user332","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.877  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000310,"loginCount":1,"nickname":"user310","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.878 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.879 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.879 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.879 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.880 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.880 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.881  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000864,"loginCount":1,"nickname":"user864","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.881  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000866,"loginCount":1,"nickname":"user866","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.881  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000873,"loginCount":1,"nickname":"user873","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.882  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000413,"loginCount":1,"nickname":"user413","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.882  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000398,"loginCount":1,"nickname":"user398","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.883 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.883 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.883 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.883 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.883 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.883 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.884  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000342,"loginCount":1,"nickname":"user342","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.884  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000361,"loginCount":1,"nickname":"user361","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.884  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000319,"loginCount":1,"nickname":"user319","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.884 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.884 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.884 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.884 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.884 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.884 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.885 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.885 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.885 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000244,"loginCount":1,"nickname":"user244","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000324,"loginCount":1,"nickname":"user324","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000390,"loginCount":1,"nickname":"user390","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000263,"loginCount":1,"nickname":"user263","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000302,"loginCount":1,"nickname":"user302","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000294,"loginCount":1,"nickname":"user294","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000323,"loginCount":1,"nickname":"user323","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.887 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.887 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.886 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.887 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.887 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.887  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000877,"loginCount":1,"nickname":"user877","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.888 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.888 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.888 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.889 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.888 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.889  INFO 36520 --- [http-nio-8888-exec-168] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000863,"loginCount":1,"nickname":"user863","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.890  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000297,"loginCount":1,"nickname":"user297","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.890 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.891 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.891  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000327,"loginCount":1,"nickname":"user327","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.891 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.891 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.891  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000328,"loginCount":1,"nickname":"user328","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.891 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.892  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000382,"loginCount":1,"nickname":"user382","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.892 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.892 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.892  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000298,"loginCount":1,"nickname":"user298","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.892 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.892  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000876,"loginCount":1,"nickname":"user876","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.892 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.902 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.902 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.893  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000293,"loginCount":1,"nickname":"user293","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.902 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.893  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000281,"loginCount":1,"nickname":"user281","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.893  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000284,"loginCount":1,"nickname":"user284","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.893  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000264,"loginCount":1,"nickname":"user264","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.893  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000247,"loginCount":1,"nickname":"user247","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.905 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.905 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.905 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.895  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000875,"loginCount":1,"nickname":"user875","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.906  INFO 36520 --- [http-nio-8888-exec-92] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000894,"loginCount":1,"nickname":"user894","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.895  INFO 36520 --- [http-nio-8888-exec-137] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000862,"loginCount":1,"nickname":"user862","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.895  INFO 36520 --- [http-nio-8888-exec-12] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000874,"loginCount":1,"nickname":"user874","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.895  INFO 36520 --- [http-nio-8888-exec-138] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000858,"loginCount":1,"nickname":"user858","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.900  INFO 36520 --- [http-nio-8888-exec-128] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000857,"loginCount":1,"nickname":"user857","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.909  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000870,"loginCount":1,"nickname":"user870","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.900  INFO 36520 --- [http-nio-8888-exec-57] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000867,"loginCount":1,"nickname":"user867","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.909  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000885,"loginCount":1,"nickname":"user885","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.900  INFO 36520 --- [http-nio-8888-exec-80] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000882,"loginCount":1,"nickname":"user882","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.910  INFO 36520 --- [http-nio-8888-exec-173] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000902,"loginCount":1,"nickname":"user902","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.901  INFO 36520 --- [http-nio-8888-exec-2] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000881,"loginCount":1,"nickname":"user881","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.911  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000886,"loginCount":1,"nickname":"user886","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.912  INFO 36520 --- [http-nio-8888-exec-8] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000893,"loginCount":1,"nickname":"user893","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.901  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000859,"loginCount":1,"nickname":"user859","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.913  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000883,"loginCount":1,"nickname":"user883","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.913  INFO 36520 --- [http-nio-8888-exec-181] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000896,"loginCount":1,"nickname":"user896","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.914  INFO 36520 --- [http-nio-8888-exec-179] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000900,"loginCount":1,"nickname":"user900","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.914  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000901,"loginCount":1,"nickname":"user901","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.901  INFO 36520 --- [http-nio-8888-exec-140] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000856,"loginCount":1,"nickname":"user856","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.901  INFO 36520 --- [http-nio-8888-exec-143] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000872,"loginCount":1,"nickname":"user872","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.901  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000274,"loginCount":1,"nickname":"user274","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.915 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.915 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.901  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000868,"loginCount":1,"nickname":"user868","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.915 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.901  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000884,"loginCount":1,"nickname":"user884","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.903 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.904 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.916 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.916 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.916 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.917 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.917  INFO 36520 --- [http-nio-8888-exec-58] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000903,"loginCount":1,"nickname":"user903","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.918  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000897,"loginCount":1,"nickname":"user897","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.904  INFO 36520 --- [http-nio-8888-exec-89] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000869,"loginCount":1,"nickname":"user869","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.904  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000878,"loginCount":1,"nickname":"user878","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.904  INFO 36520 --- [http-nio-8888-exec-148] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000891,"loginCount":1,"nickname":"user891","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.906  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000421,"loginCount":1,"nickname":"user421","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.905 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.906 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.907  INFO 36520 --- [http-nio-8888-exec-130] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000880,"loginCount":1,"nickname":"user880","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.918 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.918 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.919 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.919  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000887,"loginCount":1,"nickname":"user887","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.919  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000909,"loginCount":1,"nickname":"user909","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.907  INFO 36520 --- [http-nio-8888-exec-168] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000892,"loginCount":1,"nickname":"user892","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.920  INFO 36520 --- [http-nio-8888-exec-113] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000910,"loginCount":1,"nickname":"user910","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.919 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.907  INFO 36520 --- [http-nio-8888-exec-53] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000871,"loginCount":1,"nickname":"user871","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.921  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000899,"loginCount":1,"nickname":"user899","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.921  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000276,"loginCount":1,"nickname":"user276","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.921  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000289,"loginCount":1,"nickname":"user289","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.922 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.923 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.924  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000257,"loginCount":1,"nickname":"user257","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.924 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.924 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.924  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000879,"loginCount":1,"nickname":"user879","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.924  INFO 36520 --- [http-nio-8888-exec-24] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000905,"loginCount":1,"nickname":"user905","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.924 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.922  INFO 36520 --- [http-nio-8888-exec-16] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000907,"loginCount":1,"nickname":"user907","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.924  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000295,"loginCount":1,"nickname":"user295","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.922 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.925 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.925 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.926 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.923  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000912,"loginCount":1,"nickname":"user912","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.923  INFO 36520 --- [http-nio-8888-exec-127] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000913,"loginCount":1,"nickname":"user913","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.926  INFO 36520 --- [http-nio-8888-exec-57] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000916,"loginCount":1,"nickname":"user916","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.924 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.926 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.926 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.925  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000277,"loginCount":1,"nickname":"user277","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.925  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000252,"loginCount":1,"nickname":"user252","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.927 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.927 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.927 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.927 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.927 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.927 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.928  INFO 36520 --- [http-nio-8888-exec-68] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000895,"loginCount":1,"nickname":"user895","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.929  INFO 36520 --- [http-nio-8888-exec-171] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000904,"loginCount":1,"nickname":"user904","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.929  INFO 36520 --- [http-nio-8888-exec-167] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000898,"loginCount":1,"nickname":"user898","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.929  INFO 36520 --- [http-nio-8888-exec-11] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000908,"loginCount":1,"nickname":"user908","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.929  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000906,"loginCount":1,"nickname":"user906","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.930  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000253,"loginCount":1,"nickname":"user253","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.930  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000270,"loginCount":1,"nickname":"user270","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.930  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000248,"loginCount":1,"nickname":"user248","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.930 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.930 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.930 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.930 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.930 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.930 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.931 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.931 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.931 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.931  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000355,"loginCount":1,"nickname":"user355","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.931 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.931 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.931 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.933  INFO 36520 --- [http-nio-8888-exec-75] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000890,"loginCount":1,"nickname":"user890","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.933  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000919,"loginCount":1,"nickname":"user919","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.934  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000254,"loginCount":1,"nickname":"user254","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.934  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000388,"loginCount":1,"nickname":"user388","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.934  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000272,"loginCount":1,"nickname":"user272","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.934  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000479,"loginCount":1,"nickname":"user479","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.935 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.934 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.935  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000918,"loginCount":1,"nickname":"user918","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.935  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000915,"loginCount":1,"nickname":"user915","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.935  INFO 36520 --- [http-nio-8888-exec-181] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000920,"loginCount":1,"nickname":"user920","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.935  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000924,"loginCount":1,"nickname":"user924","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.935  INFO 36520 --- [http-nio-8888-exec-61] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000923,"loginCount":1,"nickname":"user923","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.935 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.935 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.936 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.936  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000308,"loginCount":1,"nickname":"user308","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000340,"loginCount":1,"nickname":"user340","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000329,"loginCount":1,"nickname":"user329","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000307,"loginCount":1,"nickname":"user307","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000271,"loginCount":1,"nickname":"user271","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.937 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.937 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.936  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000381,"loginCount":1,"nickname":"user381","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.937 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.938  INFO 36520 --- [http-nio-8888-exec-44] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000930,"loginCount":1,"nickname":"user930","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.937 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.937 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-138] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000914,"loginCount":1,"nickname":"user914","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.939  INFO 36520 --- [http-nio-8888-exec-33] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000922,"loginCount":1,"nickname":"user922","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-161] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000888,"loginCount":1,"nickname":"user888","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000911,"loginCount":1,"nickname":"user911","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.941  INFO 36520 --- [http-nio-8888-exec-180] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000935,"loginCount":1,"nickname":"user935","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-170] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000925,"loginCount":1,"nickname":"user925","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-26] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000921,"loginCount":1,"nickname":"user921","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-117] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000889,"loginCount":1,"nickname":"user889","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.936  INFO 36520 --- [http-nio-8888-exec-182] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000917,"loginCount":1,"nickname":"user917","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.937 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.946 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.946  INFO 36520 --- [http-nio-8888-exec-60] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000943,"loginCount":1,"nickname":"user943","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.938 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.940  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000471,"loginCount":1,"nickname":"user471","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.946 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.940  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000339,"loginCount":1,"nickname":"user339","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.947 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.940  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000376,"loginCount":1,"nickname":"user376","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.947 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.940  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000316,"loginCount":1,"nickname":"user316","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.948 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.948  INFO 36520 --- [http-nio-8888-exec-181] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000946,"loginCount":1,"nickname":"user946","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-65] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000934,"loginCount":1,"nickname":"user934","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-150] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000939,"loginCount":1,"nickname":"user939","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-75] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000938,"loginCount":1,"nickname":"user938","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-110] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000937,"loginCount":1,"nickname":"user937","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-129] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000931,"loginCount":1,"nickname":"user931","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-54] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000936,"loginCount":1,"nickname":"user936","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-113] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000926,"loginCount":1,"nickname":"user926","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-101] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000927,"loginCount":1,"nickname":"user927","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.942  INFO 36520 --- [http-nio-8888-exec-151] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000929,"loginCount":1,"nickname":"user929","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.943  INFO 36520 --- [http-nio-8888-exec-86] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000928,"loginCount":1,"nickname":"user928","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.943  INFO 36520 --- [http-nio-8888-exec-5] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000932,"loginCount":1,"nickname":"user932","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.943  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000301,"loginCount":1,"nickname":"user301","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.946 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.943  INFO 36520 --- [http-nio-8888-exec-68] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000933,"loginCount":1,"nickname":"user933","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.946 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.946 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.947 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.951 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.951 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.948  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000362,"loginCount":1,"nickname":"user362","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.947 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.948 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.948  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000335,"loginCount":1,"nickname":"user335","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.952  INFO 36520 --- [http-nio-8888-exec-142] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000950,"loginCount":1,"nickname":"user950","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.952  INFO 36520 --- [http-nio-8888-exec-43] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000945,"loginCount":1,"nickname":"user945","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.953  INFO 36520 --- [http-nio-8888-exec-34] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000951,"loginCount":1,"nickname":"user951","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.948  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000948,"loginCount":1,"nickname":"user948","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.948  INFO 36520 --- [http-nio-8888-exec-35] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000940,"loginCount":1,"nickname":"user940","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.953  INFO 36520 --- [http-nio-8888-exec-157] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000949,"loginCount":1,"nickname":"user949","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.948  INFO 36520 --- [http-nio-8888-exec-94] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000942,"loginCount":1,"nickname":"user942","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.948  INFO 36520 --- [http-nio-8888-exec-153] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000941,"loginCount":1,"nickname":"user941","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.948 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.948  INFO 36520 --- [http-nio-8888-exec-20] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000947,"loginCount":1,"nickname":"user947","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.954  INFO 36520 --- [http-nio-8888-exec-193] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000944,"loginCount":1,"nickname":"user944","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.952 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.955 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.954  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000558,"loginCount":1,"nickname":"user558","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.954  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000552,"loginCount":1,"nickname":"user552","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.955 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.954  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000561,"loginCount":1,"nickname":"user561","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.955 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.956 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.955 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.956 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.956  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000551,"loginCount":1,"nickname":"user551","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.956 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.956 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.956  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000553,"loginCount":1,"nickname":"user553","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.955  INFO 36520 --- [http-nio-8888-exec-72] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000952,"loginCount":1,"nickname":"user952","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.956  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000554,"loginCount":1,"nickname":"user554","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.956  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000549,"loginCount":1,"nickname":"user549","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.957  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000953,"loginCount":1,"nickname":"user953","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.957 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.957  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000550,"loginCount":1,"nickname":"user550","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.957  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000548,"loginCount":1,"nickname":"user548","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.959  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000539,"loginCount":1,"nickname":"user539","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.959  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000546,"loginCount":1,"nickname":"user546","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.959  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000536,"loginCount":1,"nickname":"user536","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.959  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000543,"loginCount":1,"nickname":"user543","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.957  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000545,"loginCount":1,"nickname":"user545","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.958 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.961 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.960 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.961 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.961 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.961 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.961 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.962 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.962 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.962 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.962 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.962  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000541,"loginCount":1,"nickname":"user541","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.962  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000540,"loginCount":1,"nickname":"user540","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.963  INFO 36520 --- [http-nio-8888-exec-126] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000959,"loginCount":1,"nickname":"user959","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.962 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.964 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.963  INFO 36520 --- [http-nio-8888-exec-14] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000957,"loginCount":1,"nickname":"user957","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.964  INFO 36520 --- [http-nio-8888-exec-118] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000954,"loginCount":1,"nickname":"user954","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.964 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.963  INFO 36520 --- [http-nio-8888-exec-110] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000956,"loginCount":1,"nickname":"user956","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000435,"loginCount":1,"nickname":"user435","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000443,"loginCount":1,"nickname":"user443","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000440,"loginCount":1,"nickname":"user440","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000537,"loginCount":1,"nickname":"user537","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.963 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000535,"loginCount":1,"nickname":"user535","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000574,"loginCount":1,"nickname":"user574","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000530,"loginCount":1,"nickname":"user530","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.966  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000437,"loginCount":1,"nickname":"user437","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.963  INFO 36520 --- [http-nio-8888-exec-56] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000955,"loginCount":1,"nickname":"user955","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.966 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.967 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.968  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000445,"loginCount":1,"nickname":"user445","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.968  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000453,"loginCount":1,"nickname":"user453","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.968  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000460,"loginCount":1,"nickname":"user460","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.968  INFO 36520 --- [http-nio-8888-exec-91] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000960,"loginCount":1,"nickname":"user960","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.968 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.969 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.969 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.969  INFO 36520 --- [http-nio-8888-exec-77] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000961,"loginCount":1,"nickname":"user961","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.970  INFO 36520 --- [http-nio-8888-exec-190] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000962,"loginCount":1,"nickname":"user962","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.970  INFO 36520 --- [http-nio-8888-exec-9] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000958,"loginCount":1,"nickname":"user958","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.971  INFO 36520 --- [http-nio-8888-exec-109] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000963,"loginCount":1,"nickname":"user963","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.971  INFO 36520 --- [http-nio-8888-exec-15] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000965,"loginCount":1,"nickname":"user965","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.971  INFO 36520 --- [http-nio-8888-exec-111] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000966,"loginCount":1,"nickname":"user966","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.972  INFO 36520 --- [http-nio-8888-exec-76] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000968,"loginCount":1,"nickname":"user968","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.972  INFO 36520 --- [http-nio-8888-exec-149] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000967,"loginCount":1,"nickname":"user967","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.972  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000467,"loginCount":1,"nickname":"user467","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.972  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000442,"loginCount":1,"nickname":"user442","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.972 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.972 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.972 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.972 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000531,"loginCount":1,"nickname":"user531","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.973  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000447,"loginCount":1,"nickname":"user447","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.973  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000483,"loginCount":1,"nickname":"user483","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000457,"loginCount":1,"nickname":"user457","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.973  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000465,"loginCount":1,"nickname":"user465","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.973  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000481,"loginCount":1,"nickname":"user481","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.973 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.974 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.974 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.974 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.974  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000969,"loginCount":1,"nickname":"user969","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.974 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.974 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.975  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000547,"loginCount":1,"nickname":"user547","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.975  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000477,"loginCount":1,"nickname":"user477","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.975 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.975 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.975 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.975 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.976  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000542,"loginCount":1,"nickname":"user542","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.976  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000486,"loginCount":1,"nickname":"user486","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.976  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000488,"loginCount":1,"nickname":"user488","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.976  INFO 36520 --- [http-nio-8888-exec-91] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000974,"loginCount":1,"nickname":"user974","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.976 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.976  INFO 36520 --- [http-nio-8888-exec-97] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000973,"loginCount":1,"nickname":"user973","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.977  INFO 36520 --- [http-nio-8888-exec-66] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000975,"loginCount":1,"nickname":"user975","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.977  INFO 36520 --- [http-nio-8888-exec-14] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000971,"loginCount":1,"nickname":"user971","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.977  INFO 36520 --- [http-nio-8888-exec-189] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000972,"loginCount":1,"nickname":"user972","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.977  INFO 36520 --- [http-nio-8888-exec-99] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000970,"loginCount":1,"nickname":"user970","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.978  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000462,"loginCount":1,"nickname":"user462","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.978  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000500,"loginCount":1,"nickname":"user500","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.978  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000544,"loginCount":1,"nickname":"user544","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.978 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.978 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.978 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.979  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000478,"loginCount":1,"nickname":"user478","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.979  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000482,"loginCount":1,"nickname":"user482","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.979 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.980 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.980 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.980  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000474,"loginCount":1,"nickname":"user474","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.980 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.980 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.980 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.980  INFO 36520 --- [http-nio-8888-exec-12] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000976,"loginCount":1,"nickname":"user976","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.981  INFO 36520 --- [http-nio-8888-exec-165] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000964,"loginCount":1,"nickname":"user964","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.982  INFO 36520 --- [http-nio-8888-exec-121] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000979,"loginCount":1,"nickname":"user979","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.982  INFO 36520 --- [http-nio-8888-exec-111] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000977,"loginCount":1,"nickname":"user977","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.982  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000473,"loginCount":1,"nickname":"user473","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000438,"loginCount":1,"nickname":"user438","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000470,"loginCount":1,"nickname":"user470","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000459,"loginCount":1,"nickname":"user459","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000461,"loginCount":1,"nickname":"user461","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000446,"loginCount":1,"nickname":"user446","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000480,"loginCount":1,"nickname":"user480","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000451,"loginCount":1,"nickname":"user451","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000449,"loginCount":1,"nickname":"user449","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.983  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000466,"loginCount":1,"nickname":"user466","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.983 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.984 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.984  INFO 36520 --- [http-nio-8888-exec-120] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000980,"loginCount":1,"nickname":"user980","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.985 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.985  INFO 36520 --- [http-nio-8888-exec-128] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000978,"loginCount":1,"nickname":"user978","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.985  INFO 36520 --- [http-nio-8888-exec-67] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000983,"loginCount":1,"nickname":"user983","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.985  INFO 36520 --- [http-nio-8888-exec-173] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000982,"loginCount":1,"nickname":"user982","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.986  INFO 36520 --- [http-nio-8888-exec-80] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000984,"loginCount":1,"nickname":"user984","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.986  INFO 36520 --- [http-nio-8888-exec-179] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000985,"loginCount":1,"nickname":"user985","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.987  INFO 36520 --- [http-nio-8888-exec-62] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000981,"loginCount":1,"nickname":"user981","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.987  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000458,"loginCount":1,"nickname":"user458","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.987 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.987 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000455,"loginCount":1,"nickname":"user455","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.988  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000489,"loginCount":1,"nickname":"user489","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.988  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000448,"loginCount":1,"nickname":"user448","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.988  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000476,"loginCount":1,"nickname":"user476","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000463,"loginCount":1,"nickname":"user463","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.988  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000472,"loginCount":1,"nickname":"user472","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.988 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.989 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.989 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.989 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.989  INFO 36520 --- [http-nio-8888-exec-95] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000987,"loginCount":1,"nickname":"user987","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.990  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000454,"loginCount":1,"nickname":"user454","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.990  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000494,"loginCount":1,"nickname":"user494","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.990  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000538,"loginCount":1,"nickname":"user538","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.990 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.991 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.991  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000986,"loginCount":1,"nickname":"user986","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.992  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000456,"loginCount":1,"nickname":"user456","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.992  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000485,"loginCount":1,"nickname":"user485","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.992  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000534,"loginCount":1,"nickname":"user534","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.993  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000487,"loginCount":1,"nickname":"user487","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.993 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.994 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.994 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.994 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.994 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000576,"loginCount":1,"nickname":"user576","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000497,"loginCount":1,"nickname":"user497","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000464,"loginCount":1,"nickname":"user464","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000490,"loginCount":1,"nickname":"user490","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000468,"loginCount":1,"nickname":"user468","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000492,"loginCount":1,"nickname":"user492","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.997  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000496,"loginCount":1,"nickname":"user496","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.997  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000504,"loginCount":1,"nickname":"user504","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.997  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000532,"loginCount":1,"nickname":"user532","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.996 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.996  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000533,"loginCount":1,"nickname":"user533","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.998 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.998 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.997 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.998 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.998 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.998 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:33.998  INFO 36520 --- [http-nio-8888-exec-164] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000988,"loginCount":1,"nickname":"user988","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.999  INFO 36520 --- [http-nio-8888-exec-192] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000989,"loginCount":1,"nickname":"user989","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.999  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000498,"loginCount":1,"nickname":"user498","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.999 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:33.999  INFO 36520 --- [http-nio-8888-exec-163] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000991,"loginCount":1,"nickname":"user991","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:33.999 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.000  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000499,"loginCount":1,"nickname":"user499","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.000 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.000 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.000  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000514,"loginCount":1,"nickname":"user514","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.000 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.000  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000579,"loginCount":1,"nickname":"user579","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.000  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000505,"loginCount":1,"nickname":"user505","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.001  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000507,"loginCount":1,"nickname":"user507","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.001  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000516,"loginCount":1,"nickname":"user516","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.001  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000509,"loginCount":1,"nickname":"user509","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.001 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.001  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000506,"loginCount":1,"nickname":"user506","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.002  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000592,"loginCount":1,"nickname":"user592","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.002  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000502,"loginCount":1,"nickname":"user502","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.002 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.003  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000517,"loginCount":1,"nickname":"user517","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.003  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000503,"loginCount":1,"nickname":"user503","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.003  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000510,"loginCount":1,"nickname":"user510","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.003  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000520,"loginCount":1,"nickname":"user520","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.004  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000524,"loginCount":1,"nickname":"user524","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.003 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.003  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000526,"loginCount":1,"nickname":"user526","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.004  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000527,"loginCount":1,"nickname":"user527","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000341,"loginCount":1,"nickname":"user341","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.004  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000519,"loginCount":1,"nickname":"user519","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.004  INFO 36520 --- [http-nio-8888-exec-23] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000990,"loginCount":1,"nickname":"user990","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.005  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000523,"loginCount":1,"nickname":"user523","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.005  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000525,"loginCount":1,"nickname":"user525","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.004 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.004  INFO 36520 --- [http-nio-8888-exec-146] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000997,"loginCount":1,"nickname":"user997","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.006  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000348,"loginCount":1,"nickname":"user348","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.006  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000528,"loginCount":1,"nickname":"user528","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.006  INFO 36520 --- [http-nio-8888-exec-4] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000993,"loginCount":1,"nickname":"user993","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.004  INFO 36520 --- [http-nio-8888-exec-175] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000994,"loginCount":1,"nickname":"user994","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.006 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.004  INFO 36520 --- [http-nio-8888-exec-41] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000992,"loginCount":1,"nickname":"user992","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.004  INFO 36520 --- [http-nio-8888-exec-184] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000995,"loginCount":1,"nickname":"user995","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.005  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000521,"loginCount":1,"nickname":"user521","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.005  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000515,"loginCount":1,"nickname":"user515","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.005 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.006  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000529,"loginCount":1,"nickname":"user529","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.007  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000379,"loginCount":1,"nickname":"user379","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.007  INFO 36520 --- [http-nio-8888-exec-105] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000996,"loginCount":1,"nickname":"user996","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.007 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.008 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.008 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.009  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000612,"loginCount":1,"nickname":"user612","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.009  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000374,"loginCount":1,"nickname":"user374","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.009  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000363,"loginCount":1,"nickname":"user363","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.009  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000383,"loginCount":1,"nickname":"user383","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.009 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000357,"loginCount":1,"nickname":"user357","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000611,"loginCount":1,"nickname":"user611","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000366,"loginCount":1,"nickname":"user366","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000384,"loginCount":1,"nickname":"user384","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000407,"loginCount":1,"nickname":"user407","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000334,"loginCount":1,"nickname":"user334","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010  INFO 36520 --- [http-nio-8888-exec-108] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000999,"loginCount":1,"nickname":"user999","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000518,"loginCount":1,"nickname":"user518","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000344,"loginCount":1,"nickname":"user344","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000522,"loginCount":1,"nickname":"user522","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.010 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000619,"loginCount":1,"nickname":"user619","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.010  INFO 36520 --- [http-nio-8888-exec-90] com.flipped.seckill.rabbitmq.MQSender    : 发送秒杀消息{"goodId":1,"user":{"id":13000000998,"loginCount":1,"nickname":"user998","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.011 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.012  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000511,"loginCount":1,"nickname":"user511","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.012  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000625,"loginCount":1,"nickname":"user625","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.012 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.012 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.012 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.012 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.012 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.012 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.013  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000626,"loginCount":1,"nickname":"user626","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.013  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000623,"loginCount":1,"nickname":"user623","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.013  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000513,"loginCount":1,"nickname":"user513","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.013 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.013 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.013  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000620,"loginCount":1,"nickname":"user620","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.013 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.013 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.013 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.013  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000624,"loginCount":1,"nickname":"user624","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.013 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.013  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000622,"loginCount":1,"nickname":"user622","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000617,"loginCount":1,"nickname":"user617","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.014  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000621,"loginCount":1,"nickname":"user621","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.014  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000614,"loginCount":1,"nickname":"user614","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.014 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.015 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.015  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000609,"loginCount":1,"nickname":"user609","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.015 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.015 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.015 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000615,"loginCount":1,"nickname":"user615","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000618,"loginCount":1,"nickname":"user618","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000613,"loginCount":1,"nickname":"user613","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000610,"loginCount":1,"nickname":"user610","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000608,"loginCount":1,"nickname":"user608","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000616,"loginCount":1,"nickname":"user616","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000606,"loginCount":1,"nickname":"user606","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000601,"loginCount":1,"nickname":"user601","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000602,"loginCount":1,"nickname":"user602","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.016 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.017 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.018  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000603,"loginCount":1,"nickname":"user603","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000596,"loginCount":1,"nickname":"user596","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000604,"loginCount":1,"nickname":"user604","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000599,"loginCount":1,"nickname":"user599","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000607,"loginCount":1,"nickname":"user607","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.018  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000600,"loginCount":1,"nickname":"user600","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.018  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000605,"loginCount":1,"nickname":"user605","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000595,"loginCount":1,"nickname":"user595","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000597,"loginCount":1,"nickname":"user597","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000628,"loginCount":1,"nickname":"user628","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.019 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.020 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.020 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.020 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.020 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000590,"loginCount":1,"nickname":"user590","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000598,"loginCount":1,"nickname":"user598","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000583,"loginCount":1,"nickname":"user583","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.022  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000588,"loginCount":1,"nickname":"user588","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000594,"loginCount":1,"nickname":"user594","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000589,"loginCount":1,"nickname":"user589","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000593,"loginCount":1,"nickname":"user593","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000586,"loginCount":1,"nickname":"user586","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.021  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000591,"loginCount":1,"nickname":"user591","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000587,"loginCount":1,"nickname":"user587","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.022 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.023 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.023 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.023 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.023 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000584,"loginCount":1,"nickname":"user584","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000577,"loginCount":1,"nickname":"user577","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000575,"loginCount":1,"nickname":"user575","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000585,"loginCount":1,"nickname":"user585","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000571,"loginCount":1,"nickname":"user571","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000580,"loginCount":1,"nickname":"user580","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000578,"loginCount":1,"nickname":"user578","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000581,"loginCount":1,"nickname":"user581","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000582,"loginCount":1,"nickname":"user582","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.024 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.025 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000573,"loginCount":1,"nickname":"user573","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000637,"loginCount":1,"nickname":"user637","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000570,"loginCount":1,"nickname":"user570","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000568,"loginCount":1,"nickname":"user568","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000567,"loginCount":1,"nickname":"user567","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000572,"loginCount":1,"nickname":"user572","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000638,"loginCount":1,"nickname":"user638","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000564,"loginCount":1,"nickname":"user564","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.026 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.027 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000565,"loginCount":1,"nickname":"user565","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000562,"loginCount":1,"nickname":"user562","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000569,"loginCount":1,"nickname":"user569","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000636,"loginCount":1,"nickname":"user636","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000566,"loginCount":1,"nickname":"user566","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000563,"loginCount":1,"nickname":"user563","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000557,"loginCount":1,"nickname":"user557","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000640,"loginCount":1,"nickname":"user640","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000559,"loginCount":1,"nickname":"user559","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000560,"loginCount":1,"nickname":"user560","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.029 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.030 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.030 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.030 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.030 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.030 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.030 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000641,"loginCount":1,"nickname":"user641","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000634,"loginCount":1,"nickname":"user634","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000555,"loginCount":1,"nickname":"user555","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000629,"loginCount":1,"nickname":"user629","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000639,"loginCount":1,"nickname":"user639","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000627,"loginCount":1,"nickname":"user627","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000556,"loginCount":1,"nickname":"user556","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000635,"loginCount":1,"nickname":"user635","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000633,"loginCount":1,"nickname":"user633","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.031 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.032 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000632,"loginCount":1,"nickname":"user632","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000643,"loginCount":1,"nickname":"user643","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000648,"loginCount":1,"nickname":"user648","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000631,"loginCount":1,"nickname":"user631","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000644,"loginCount":1,"nickname":"user644","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000647,"loginCount":1,"nickname":"user647","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000646,"loginCount":1,"nickname":"user646","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000642,"loginCount":1,"nickname":"user642","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000630,"loginCount":1,"nickname":"user630","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.038  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000645,"loginCount":1,"nickname":"user645","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.039 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.040 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000653,"loginCount":1,"nickname":"user653","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000652,"loginCount":1,"nickname":"user652","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000660,"loginCount":1,"nickname":"user660","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000650,"loginCount":1,"nickname":"user650","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000651,"loginCount":1,"nickname":"user651","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000649,"loginCount":1,"nickname":"user649","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000654,"loginCount":1,"nickname":"user654","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000655,"loginCount":1,"nickname":"user655","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000656,"loginCount":1,"nickname":"user656","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.041 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.042 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.043  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000659,"loginCount":1,"nickname":"user659","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.043 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.043 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.043 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000665,"loginCount":1,"nickname":"user665","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000662,"loginCount":1,"nickname":"user662","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000657,"loginCount":1,"nickname":"user657","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000664,"loginCount":1,"nickname":"user664","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000666,"loginCount":1,"nickname":"user666","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000658,"loginCount":1,"nickname":"user658","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000663,"loginCount":1,"nickname":"user663","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000661,"loginCount":1,"nickname":"user661","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000667,"loginCount":1,"nickname":"user667","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.045 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.046 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000668,"loginCount":1,"nickname":"user668","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000669,"loginCount":1,"nickname":"user669","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000671,"loginCount":1,"nickname":"user671","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000685,"loginCount":1,"nickname":"user685","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000674,"loginCount":1,"nickname":"user674","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000673,"loginCount":1,"nickname":"user673","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000678,"loginCount":1,"nickname":"user678","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000672,"loginCount":1,"nickname":"user672","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000670,"loginCount":1,"nickname":"user670","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000675,"loginCount":1,"nickname":"user675","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.047 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.048 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000681,"loginCount":1,"nickname":"user681","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000679,"loginCount":1,"nickname":"user679","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000682,"loginCount":1,"nickname":"user682","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000684,"loginCount":1,"nickname":"user684","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000686,"loginCount":1,"nickname":"user686","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000676,"loginCount":1,"nickname":"user676","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000680,"loginCount":1,"nickname":"user680","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000677,"loginCount":1,"nickname":"user677","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000683,"loginCount":1,"nickname":"user683","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.050 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.051 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.051 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.051 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.051 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000693,"loginCount":1,"nickname":"user693","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000690,"loginCount":1,"nickname":"user690","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000688,"loginCount":1,"nickname":"user688","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000687,"loginCount":1,"nickname":"user687","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000689,"loginCount":1,"nickname":"user689","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000691,"loginCount":1,"nickname":"user691","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000692,"loginCount":1,"nickname":"user692","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000694,"loginCount":1,"nickname":"user694","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000696,"loginCount":1,"nickname":"user696","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000695,"loginCount":1,"nickname":"user695","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.052 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000698,"loginCount":1,"nickname":"user698","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000700,"loginCount":1,"nickname":"user700","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000704,"loginCount":1,"nickname":"user704","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000701,"loginCount":1,"nickname":"user701","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000699,"loginCount":1,"nickname":"user699","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000703,"loginCount":1,"nickname":"user703","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000697,"loginCount":1,"nickname":"user697","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000702,"loginCount":1,"nickname":"user702","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000705,"loginCount":1,"nickname":"user705","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.054 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000713,"loginCount":1,"nickname":"user713","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000708,"loginCount":1,"nickname":"user708","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000714,"loginCount":1,"nickname":"user714","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000710,"loginCount":1,"nickname":"user710","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000711,"loginCount":1,"nickname":"user711","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000712,"loginCount":1,"nickname":"user712","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000707,"loginCount":1,"nickname":"user707","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000715,"loginCount":1,"nickname":"user715","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000706,"loginCount":1,"nickname":"user706","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000709,"loginCount":1,"nickname":"user709","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.056 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.057 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000719,"loginCount":1,"nickname":"user719","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000724,"loginCount":1,"nickname":"user724","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000716,"loginCount":1,"nickname":"user716","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000720,"loginCount":1,"nickname":"user720","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000723,"loginCount":1,"nickname":"user723","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000718,"loginCount":1,"nickname":"user718","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000726,"loginCount":1,"nickname":"user726","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000722,"loginCount":1,"nickname":"user722","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000717,"loginCount":1,"nickname":"user717","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000721,"loginCount":1,"nickname":"user721","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.058 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.059 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000727,"loginCount":1,"nickname":"user727","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000728,"loginCount":1,"nickname":"user728","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000730,"loginCount":1,"nickname":"user730","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000732,"loginCount":1,"nickname":"user732","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000725,"loginCount":1,"nickname":"user725","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000729,"loginCount":1,"nickname":"user729","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000736,"loginCount":1,"nickname":"user736","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000733,"loginCount":1,"nickname":"user733","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000731,"loginCount":1,"nickname":"user731","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.060 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000737,"loginCount":1,"nickname":"user737","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000742,"loginCount":1,"nickname":"user742","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000734,"loginCount":1,"nickname":"user734","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000738,"loginCount":1,"nickname":"user738","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000740,"loginCount":1,"nickname":"user740","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000743,"loginCount":1,"nickname":"user743","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000735,"loginCount":1,"nickname":"user735","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000739,"loginCount":1,"nickname":"user739","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000744,"loginCount":1,"nickname":"user744","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.061 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.061  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000741,"loginCount":1,"nickname":"user741","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.062 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000747,"loginCount":1,"nickname":"user747","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000750,"loginCount":1,"nickname":"user750","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000745,"loginCount":1,"nickname":"user745","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000753,"loginCount":1,"nickname":"user753","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000746,"loginCount":1,"nickname":"user746","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000749,"loginCount":1,"nickname":"user749","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000752,"loginCount":1,"nickname":"user752","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000748,"loginCount":1,"nickname":"user748","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000751,"loginCount":1,"nickname":"user751","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.063 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.064 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000758,"loginCount":1,"nickname":"user758","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000755,"loginCount":1,"nickname":"user755","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000754,"loginCount":1,"nickname":"user754","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000761,"loginCount":1,"nickname":"user761","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000759,"loginCount":1,"nickname":"user759","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000756,"loginCount":1,"nickname":"user756","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000762,"loginCount":1,"nickname":"user762","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000763,"loginCount":1,"nickname":"user763","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000760,"loginCount":1,"nickname":"user760","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000757,"loginCount":1,"nickname":"user757","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.065 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.066 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000767,"loginCount":1,"nickname":"user767","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000766,"loginCount":1,"nickname":"user766","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000769,"loginCount":1,"nickname":"user769","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000770,"loginCount":1,"nickname":"user770","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000772,"loginCount":1,"nickname":"user772","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000771,"loginCount":1,"nickname":"user771","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000765,"loginCount":1,"nickname":"user765","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000764,"loginCount":1,"nickname":"user764","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000768,"loginCount":1,"nickname":"user768","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000773,"loginCount":1,"nickname":"user773","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.067 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.068 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.068 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000774,"loginCount":1,"nickname":"user774","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000776,"loginCount":1,"nickname":"user776","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000777,"loginCount":1,"nickname":"user777","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000779,"loginCount":1,"nickname":"user779","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000775,"loginCount":1,"nickname":"user775","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000781,"loginCount":1,"nickname":"user781","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000782,"loginCount":1,"nickname":"user782","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000780,"loginCount":1,"nickname":"user780","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000778,"loginCount":1,"nickname":"user778","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.069 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.070 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.070 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.070  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000784,"loginCount":1,"nickname":"user784","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000783,"loginCount":1,"nickname":"user783","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000790,"loginCount":1,"nickname":"user790","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000788,"loginCount":1,"nickname":"user788","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.070  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000785,"loginCount":1,"nickname":"user785","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000791,"loginCount":1,"nickname":"user791","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.070  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000786,"loginCount":1,"nickname":"user786","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000787,"loginCount":1,"nickname":"user787","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000792,"loginCount":1,"nickname":"user792","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000789,"loginCount":1,"nickname":"user789","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.071 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.072 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000793,"loginCount":1,"nickname":"user793","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000799,"loginCount":1,"nickname":"user799","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000797,"loginCount":1,"nickname":"user797","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000798,"loginCount":1,"nickname":"user798","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000796,"loginCount":1,"nickname":"user796","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000795,"loginCount":1,"nickname":"user795","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.072  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000794,"loginCount":1,"nickname":"user794","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.073  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000801,"loginCount":1,"nickname":"user801","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000802,"loginCount":1,"nickname":"user802","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000800,"loginCount":1,"nickname":"user800","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.073 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000803,"loginCount":1,"nickname":"user803","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000806,"loginCount":1,"nickname":"user806","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000804,"loginCount":1,"nickname":"user804","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000811,"loginCount":1,"nickname":"user811","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000809,"loginCount":1,"nickname":"user809","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000805,"loginCount":1,"nickname":"user805","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000807,"loginCount":1,"nickname":"user807","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000810,"loginCount":1,"nickname":"user810","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000808,"loginCount":1,"nickname":"user808","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.074 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.075 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000837,"loginCount":1,"nickname":"user837","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000816,"loginCount":1,"nickname":"user816","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000815,"loginCount":1,"nickname":"user815","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000813,"loginCount":1,"nickname":"user813","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000812,"loginCount":1,"nickname":"user812","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000820,"loginCount":1,"nickname":"user820","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000838,"loginCount":1,"nickname":"user838","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000814,"loginCount":1,"nickname":"user814","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000821,"loginCount":1,"nickname":"user821","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000840,"loginCount":1,"nickname":"user840","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.076 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.077 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000818,"loginCount":1,"nickname":"user818","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000841,"loginCount":1,"nickname":"user841","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000825,"loginCount":1,"nickname":"user825","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000823,"loginCount":1,"nickname":"user823","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000819,"loginCount":1,"nickname":"user819","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000847,"loginCount":1,"nickname":"user847","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000817,"loginCount":1,"nickname":"user817","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000822,"loginCount":1,"nickname":"user822","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000835,"loginCount":1,"nickname":"user835","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.078 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.079 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000833,"loginCount":1,"nickname":"user833","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000828,"loginCount":1,"nickname":"user828","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000826,"loginCount":1,"nickname":"user826","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000827,"loginCount":1,"nickname":"user827","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000843,"loginCount":1,"nickname":"user843","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000830,"loginCount":1,"nickname":"user830","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000829,"loginCount":1,"nickname":"user829","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000836,"loginCount":1,"nickname":"user836","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000845,"loginCount":1,"nickname":"user845","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000824,"loginCount":1,"nickname":"user824","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.080 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.081 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.081 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000831,"loginCount":1,"nickname":"user831","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000842,"loginCount":1,"nickname":"user842","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000844,"loginCount":1,"nickname":"user844","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000839,"loginCount":1,"nickname":"user839","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000848,"loginCount":1,"nickname":"user848","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000832,"loginCount":1,"nickname":"user832","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000846,"loginCount":1,"nickname":"user846","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000834,"loginCount":1,"nickname":"user834","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000849,"loginCount":1,"nickname":"user849","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000854,"loginCount":1,"nickname":"user854","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.082 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000850,"loginCount":1,"nickname":"user850","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000860,"loginCount":1,"nickname":"user860","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000851,"loginCount":1,"nickname":"user851","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000855,"loginCount":1,"nickname":"user855","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000852,"loginCount":1,"nickname":"user852","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000853,"loginCount":1,"nickname":"user853","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000861,"loginCount":1,"nickname":"user861","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000865,"loginCount":1,"nickname":"user865","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000864,"loginCount":1,"nickname":"user864","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000866,"loginCount":1,"nickname":"user866","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.083 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.084 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000876,"loginCount":1,"nickname":"user876","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000857,"loginCount":1,"nickname":"user857","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000858,"loginCount":1,"nickname":"user858","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000863,"loginCount":1,"nickname":"user863","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000894,"loginCount":1,"nickname":"user894","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000874,"loginCount":1,"nickname":"user874","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000877,"loginCount":1,"nickname":"user877","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000862,"loginCount":1,"nickname":"user862","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000873,"loginCount":1,"nickname":"user873","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000875,"loginCount":1,"nickname":"user875","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.085 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.086 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000893,"loginCount":1,"nickname":"user893","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000859,"loginCount":1,"nickname":"user859","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000885,"loginCount":1,"nickname":"user885","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000867,"loginCount":1,"nickname":"user867","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000882,"loginCount":1,"nickname":"user882","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000886,"loginCount":1,"nickname":"user886","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000870,"loginCount":1,"nickname":"user870","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000902,"loginCount":1,"nickname":"user902","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000881,"loginCount":1,"nickname":"user881","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.087 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.088 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.088 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.088 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.088 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000896,"loginCount":1,"nickname":"user896","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000872,"loginCount":1,"nickname":"user872","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000900,"loginCount":1,"nickname":"user900","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000883,"loginCount":1,"nickname":"user883","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000868,"loginCount":1,"nickname":"user868","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000897,"loginCount":1,"nickname":"user897","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000901,"loginCount":1,"nickname":"user901","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000856,"loginCount":1,"nickname":"user856","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000884,"loginCount":1,"nickname":"user884","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000869,"loginCount":1,"nickname":"user869","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.089 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.090 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000878,"loginCount":1,"nickname":"user878","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000871,"loginCount":1,"nickname":"user871","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000910,"loginCount":1,"nickname":"user910","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000891,"loginCount":1,"nickname":"user891","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000880,"loginCount":1,"nickname":"user880","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000887,"loginCount":1,"nickname":"user887","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000899,"loginCount":1,"nickname":"user899","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000892,"loginCount":1,"nickname":"user892","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000909,"loginCount":1,"nickname":"user909","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.091 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.092 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.092 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000912,"loginCount":1,"nickname":"user912","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000903,"loginCount":1,"nickname":"user903","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000913,"loginCount":1,"nickname":"user913","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000905,"loginCount":1,"nickname":"user905","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000879,"loginCount":1,"nickname":"user879","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000895,"loginCount":1,"nickname":"user895","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000907,"loginCount":1,"nickname":"user907","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000898,"loginCount":1,"nickname":"user898","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000916,"loginCount":1,"nickname":"user916","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000904,"loginCount":1,"nickname":"user904","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.093 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000915,"loginCount":1,"nickname":"user915","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000919,"loginCount":1,"nickname":"user919","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000924,"loginCount":1,"nickname":"user924","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000908,"loginCount":1,"nickname":"user908","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000930,"loginCount":1,"nickname":"user930","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000890,"loginCount":1,"nickname":"user890","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000906,"loginCount":1,"nickname":"user906","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.095  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000914,"loginCount":1,"nickname":"user914","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.094  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000918,"loginCount":1,"nickname":"user918","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.095 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000935,"loginCount":1,"nickname":"user935","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000921,"loginCount":1,"nickname":"user921","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000923,"loginCount":1,"nickname":"user923","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000920,"loginCount":1,"nickname":"user920","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000888,"loginCount":1,"nickname":"user888","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000922,"loginCount":1,"nickname":"user922","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000925,"loginCount":1,"nickname":"user925","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000889,"loginCount":1,"nickname":"user889","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000917,"loginCount":1,"nickname":"user917","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000911,"loginCount":1,"nickname":"user911","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.096 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.097 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000937,"loginCount":1,"nickname":"user937","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000946,"loginCount":1,"nickname":"user946","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000939,"loginCount":1,"nickname":"user939","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000934,"loginCount":1,"nickname":"user934","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000943,"loginCount":1,"nickname":"user943","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000931,"loginCount":1,"nickname":"user931","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000938,"loginCount":1,"nickname":"user938","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000926,"loginCount":1,"nickname":"user926","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000936,"loginCount":1,"nickname":"user936","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.098 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000932,"loginCount":1,"nickname":"user932","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000950,"loginCount":1,"nickname":"user950","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000927,"loginCount":1,"nickname":"user927","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000933,"loginCount":1,"nickname":"user933","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000929,"loginCount":1,"nickname":"user929","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000951,"loginCount":1,"nickname":"user951","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000928,"loginCount":1,"nickname":"user928","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000940,"loginCount":1,"nickname":"user940","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000948,"loginCount":1,"nickname":"user948","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000945,"loginCount":1,"nickname":"user945","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.099 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.100 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000949,"loginCount":1,"nickname":"user949","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000942,"loginCount":1,"nickname":"user942","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000947,"loginCount":1,"nickname":"user947","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000941,"loginCount":1,"nickname":"user941","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000957,"loginCount":1,"nickname":"user957","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000952,"loginCount":1,"nickname":"user952","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000953,"loginCount":1,"nickname":"user953","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000944,"loginCount":1,"nickname":"user944","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000959,"loginCount":1,"nickname":"user959","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000954,"loginCount":1,"nickname":"user954","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.101 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.102 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.102 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000956,"loginCount":1,"nickname":"user956","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000961,"loginCount":1,"nickname":"user961","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000958,"loginCount":1,"nickname":"user958","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000955,"loginCount":1,"nickname":"user955","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000960,"loginCount":1,"nickname":"user960","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000966,"loginCount":1,"nickname":"user966","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000968,"loginCount":1,"nickname":"user968","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000962,"loginCount":1,"nickname":"user962","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000965,"loginCount":1,"nickname":"user965","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.103 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000974,"loginCount":1,"nickname":"user974","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000971,"loginCount":1,"nickname":"user971","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000975,"loginCount":1,"nickname":"user975","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000973,"loginCount":1,"nickname":"user973","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000969,"loginCount":1,"nickname":"user969","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000963,"loginCount":1,"nickname":"user963","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000967,"loginCount":1,"nickname":"user967","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000970,"loginCount":1,"nickname":"user970","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000976,"loginCount":1,"nickname":"user976","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000972,"loginCount":1,"nickname":"user972","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.104 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.105 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000964,"loginCount":1,"nickname":"user964","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000983,"loginCount":1,"nickname":"user983","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000977,"loginCount":1,"nickname":"user977","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000979,"loginCount":1,"nickname":"user979","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000984,"loginCount":1,"nickname":"user984","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000980,"loginCount":1,"nickname":"user980","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000981,"loginCount":1,"nickname":"user981","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000982,"loginCount":1,"nickname":"user982","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000985,"loginCount":1,"nickname":"user985","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.106 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.107 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.107 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.107 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.107 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.107 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.107 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000978,"loginCount":1,"nickname":"user978","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.108 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.108 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000989,"loginCount":1,"nickname":"user989","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000988,"loginCount":1,"nickname":"user988","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000997,"loginCount":1,"nickname":"user997","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000986,"loginCount":1,"nickname":"user986","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000993,"loginCount":1,"nickname":"user993","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000987,"loginCount":1,"nickname":"user987","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.108 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000991,"loginCount":1,"nickname":"user991","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000994,"loginCount":1,"nickname":"user994","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.108  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000990,"loginCount":1,"nickname":"user990","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-3] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-9] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.109 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.110  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000996,"loginCount":1,"nickname":"user996","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.110  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000995,"loginCount":1,"nickname":"user995","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.110  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000992,"loginCount":1,"nickname":"user992","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.110  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000999,"loginCount":1,"nickname":"user999","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.110 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-8] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:27:34.111  INFO 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] com.flipped.seckill.rabbitmq.MQReceiver  : 用户接收消息：{"goodId":1,"user":{"id":13000000998,"loginCount":1,"nickname":"user998","password":"5769fdc2c3a99436d5b15de35dd4f15d","registerDate":1625905034000,"salt":"1a2b3c4d"}}
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 22:27:34.111 DEBUG 36520 --- [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 22:32:00.006 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:33:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:34:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:35:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:36:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:37:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:38:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:39:00.005 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:40:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:41:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:42:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:43:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:44:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:45:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:46:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:47:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:48:00.005 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:49:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:50:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:51:00.005 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:52:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:53:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:54:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:55:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:56:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:57:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:58:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 22:59:00.005 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:00:00.005 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:01:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:02:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:03:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:04:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:05:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:06:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:07:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:08:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:09:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:10:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:11:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:12:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:13:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:14:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:15:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:16:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:17:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:18:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:19:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:20:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:21:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:22:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:23:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:24:00.001 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:25:00.006 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:26:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:27:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:28:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:29:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:30:00.002 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:31:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:32:00.003 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:33:00.004 ERROR 36520 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:34:03.546  INFO 42024 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 42024 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:34:03.548  INFO 42024 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:34:04.134  INFO 42024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:34:04.136  INFO 42024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:34:04.155  INFO 42024 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2021-07-10 23:34:04.516  INFO 42024 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:34:04.523  INFO 42024 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:34:04.523  INFO 42024 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:34:04.636  INFO 42024 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:34:04.637  INFO 42024 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1056 ms
2021-07-10 23:34:04.918  INFO 42024 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:34:05.077  INFO 42024 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:34:05.832 DEBUG 42024 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:34:05.847 DEBUG 42024 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:34:05.865 DEBUG 42024 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:34:06.155  WARN 42024 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seckillController' defined in file [E:\GDUT\JavaProject\seckill\target\classes\com\flipped\seckill\controller\SeckillController.class]: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
2021-07-10 23:34:06.157  INFO 42024 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-10 23:34:06.160  INFO 42024 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-10 23:34:06.372  INFO 42024 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-10 23:34:06.380  INFO 42024 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-10 23:34:06.398 ERROR 42024 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seckillController' defined in file [E:\GDUT\JavaProject\seckill\target\classes\com\flipped\seckill\controller\SeckillController.class]: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:438) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:337) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1336) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1325) [spring-boot-2.5.0.jar:2.5.0]
	at com.flipped.seckill.DemoApplication.main(DemoApplication.java:14) [classes/:na]
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1621) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1529) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1315) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1298) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1039) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:371) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:209) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.DefaultValueOperations.set(DefaultValueOperations.java:236) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at com.flipped.seckill.controller.SeckillController.lambda$afterPropertiesSet$0(SeckillController.java:92) ~[classes/:na]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[na:1.8.0_261]
	at com.flipped.seckill.controller.SeckillController.afterPropertiesSet(SeckillController.java:91) ~[classes/:na]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782) ~[spring-beans-5.3.7.jar:5.3.7]
	... 16 common frames omitted
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1527) ~[spring-data-redis-2.5.1.jar:2.5.1]
	... 32 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at java.util.Optional.orElseGet(Optional.java:267) ~[na:1.8.0_261]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:58) ~[commons-pool2-2.9.0.jar:2.9.0]
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:918) ~[commons-pool2-2.9.0.jar:2.9.0]
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:431) ~[commons-pool2-2.9.0.jar:2.9.0]
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:356) ~[commons-pool2-2.9.0.jar:2.9.0]
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103) ~[spring-data-redis-2.5.1.jar:2.5.1]
	... 33 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_261]

2021-07-10 23:36:35.623  INFO 40656 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 40656 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:36:35.624  INFO 40656 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:36:36.127  INFO 40656 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:36:36.128  INFO 40656 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:36:36.148  INFO 40656 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2021-07-10 23:36:36.500  INFO 40656 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:36:36.505  INFO 40656 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:36:36.506  INFO 40656 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:36:36.611  INFO 40656 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:36:36.611  INFO 40656 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 955 ms
2021-07-10 23:36:36.872  INFO 40656 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:36:37.014  INFO 40656 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:36:37.700 DEBUG 40656 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:36:37.715 DEBUG 40656 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:36:37.729 DEBUG 40656 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:36:38.507  INFO 40656 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:36:38.509  INFO 40656 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:36:38.530  INFO 40656 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#2f20f7ad:0/SimpleConnection@5bb2fb2b [delegate=amqp://guest@192.168.73.133:5672/, localPort= 59899]
2021-07-10 23:36:39.116  INFO 40656 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:36:39.122  INFO 40656 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.788 seconds (JVM running for 4.404)
2021-07-10 23:36:39.123  INFO 40656 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:36:39.124  INFO 40656 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:37:08.257  INFO 40656 --- [http-nio-8888-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:37:08.257  INFO 40656 --- [http-nio-8888-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:37:08.258  INFO 40656 --- [http-nio-8888-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-07-10 23:37:08.336 DEBUG 40656 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:37:08.337 DEBUG 40656 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:37:08.338 DEBUG 40656 --- [http-nio-8888-exec-2] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:37:08.413 DEBUG 40656 --- [http-nio-8888-exec-3] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:37:08.413 DEBUG 40656 --- [http-nio-8888-exec-3] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:37:08.414 DEBUG 40656 --- [http-nio-8888-exec-3] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:37:10.057 DEBUG 40656 --- [http-nio-8888-exec-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:37:10.058 DEBUG 40656 --- [http-nio-8888-exec-5] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 1(Long)
2021-07-10 23:37:10.059 DEBUG 40656 --- [http-nio-8888-exec-5] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:37:13.677 DEBUG 40656 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:37:13.677 DEBUG 40656 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:37:13.678 DEBUG 40656 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:38:29.177  INFO 40516 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 40516 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:38:29.179  INFO 40516 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:38:29.669  INFO 40516 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:38:29.671  INFO 40516 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:38:29.690  INFO 40516 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2021-07-10 23:38:30.026  INFO 40516 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:38:30.032  INFO 40516 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:38:30.032  INFO 40516 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:38:30.122  INFO 40516 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:38:30.122  INFO 40516 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 913 ms
2021-07-10 23:38:30.383  INFO 40516 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:38:30.522  INFO 40516 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:38:31.165 DEBUG 40516 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:38:31.179 DEBUG 40516 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:38:31.193 DEBUG 40516 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:38:31.798  INFO 40516 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:38:31.800  INFO 40516 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:38:31.818  INFO 40516 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#2f20f7ad:0/SimpleConnection@63485d7 [delegate=amqp://guest@192.168.73.133:5672/, localPort= 56899]
2021-07-10 23:38:32.421  INFO 40516 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:38:32.426  INFO 40516 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.525 seconds (JVM running for 4.095)
2021-07-10 23:38:32.427  INFO 40516 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:38:32.428  INFO 40516 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:38:34.623  INFO 40516 --- [http-nio-8888-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:38:34.624  INFO 40516 --- [http-nio-8888-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:38:34.624  INFO 40516 --- [http-nio-8888-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-07-10 23:38:34.764 DEBUG 40516 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:38:34.765 DEBUG 40516 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:38:34.766 DEBUG 40516 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:38:40.238 DEBUG 40516 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:38:40.238 DEBUG 40516 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:38:40.239 DEBUG 40516 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:38:40.258 DEBUG 40516 --- [http-nio-8888-exec-5] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:38:40.258 DEBUG 40516 --- [http-nio-8888-exec-5] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:38:40.259 DEBUG 40516 --- [http-nio-8888-exec-5] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:38:43.581 DEBUG 40516 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:38:43.581 DEBUG 40516 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:38:43.582 DEBUG 40516 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:41:19.048  INFO 35684 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 35684 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:41:19.050  INFO 35684 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:41:19.562  INFO 35684 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:41:19.563  INFO 35684 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:41:19.583  INFO 35684 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2021-07-10 23:41:19.939  INFO 35684 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:41:19.945  INFO 35684 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:41:19.945  INFO 35684 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:41:20.055  INFO 35684 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:41:20.055  INFO 35684 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 976 ms
2021-07-10 23:41:20.322  INFO 35684 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:41:20.473  INFO 35684 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:41:21.143 DEBUG 35684 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:41:21.159 DEBUG 35684 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:41:21.173 DEBUG 35684 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:41:21.902  INFO 35684 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:41:21.904  INFO 35684 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:41:21.922  INFO 35684 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#469a7575:0/SimpleConnection@5c4f4330 [delegate=amqp://guest@192.168.73.133:5672/, localPort= 54615]
2021-07-10 23:41:22.514  INFO 35684 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:41:22.520  INFO 35684 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.759 seconds (JVM running for 4.432)
2021-07-10 23:41:22.520  INFO 35684 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:41:22.521  INFO 35684 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:41:25.931  INFO 35684 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:41:25.932  INFO 35684 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:41:25.932  INFO 35684 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-07-10 23:41:26.039 DEBUG 35684 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:41:26.039 DEBUG 35684 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:41:26.040 DEBUG 35684 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:41:26.077 DEBUG 35684 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:41:26.077 DEBUG 35684 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:41:26.079 DEBUG 35684 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:41:27.253 DEBUG 35684 --- [http-nio-8888-exec-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:41:27.254 DEBUG 35684 --- [http-nio-8888-exec-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:41:27.255 DEBUG 35684 --- [http-nio-8888-exec-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:41:37.407 DEBUG 35684 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:41:37.407 DEBUG 35684 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:41:37.408 DEBUG 35684 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:42:00.008 ERROR 35684 --- [pool-3-thread-1] o.s.s.s.TaskUtils$LoggingErrorHandler    : Unexpected error occurred in scheduled task

org.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:271) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1062) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:919) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:94) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.del(LettuceKeyCommands.java:90) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.del(DefaultedRedisConnection.java:83) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.lambda$delete$2(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:222) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.delete(RedisTemplate.java:708) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions(RedisSessionExpirationPolicy.java:133) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.session.data.redis.RedisIndexedSessionRepository.cleanupExpiredSessions(RedisIndexedSessionRepository.java:424) ~[spring-session-data-redis-2.5.0.jar:2.5.0]
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) [spring-context-5.3.7.jar:5.3.7]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_261]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_261]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_261]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_261]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_261]
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	... 1 common frames omitted

2021-07-10 23:42:12.883  INFO 35684 --- [lettuce-eventExecutorLoop-1-2] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was /192.168.73.131:6379
2021-07-10 23:42:12.883  INFO 35684 --- [lettuce-eventExecutorLoop-1-1] i.l.core.protocol.ConnectionWatchdog     : Reconnecting, last destination was /192.168.73.131:6379
2021-07-10 23:42:14.894  WARN 35684 --- [lettuce-nioEventLoop-4-3] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [192.168.73.131:6379]: Connection refused: no further information: /192.168.73.131:6379
2021-07-10 23:42:14.894  WARN 35684 --- [lettuce-nioEventLoop-4-4] i.l.core.protocol.ConnectionWatchdog     : Cannot reconnect to [192.168.73.131:6379]: Connection refused: no further information: /192.168.73.131:6379
2021-07-10 23:42:17.582  INFO 35684 --- [lettuce-nioEventLoop-4-8] i.l.core.protocol.ReconnectionHandler    : Reconnected to 192.168.73.131:6379
2021-07-10 23:42:17.588  INFO 35684 --- [lettuce-nioEventLoop-4-7] i.l.core.protocol.ReconnectionHandler    : Reconnected to 192.168.73.131:6379
2021-07-10 23:42:26.570  INFO 21136 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 21136 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:42:26.572  INFO 21136 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:42:27.055  INFO 21136 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:42:27.056  INFO 21136 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:42:27.074  INFO 21136 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2021-07-10 23:42:27.410  INFO 21136 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:42:27.416  INFO 21136 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:42:27.417  INFO 21136 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:42:27.518  INFO 21136 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:42:27.518  INFO 21136 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 915 ms
2021-07-10 23:42:27.770  INFO 21136 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:42:27.908  INFO 21136 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:42:28.554 DEBUG 21136 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:42:28.568 DEBUG 21136 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:42:28.583 DEBUG 21136 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:42:29.299  INFO 21136 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:42:29.300  INFO 21136 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:42:29.319  INFO 21136 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#2f20f7ad:0/SimpleConnection@5bb2fb2b [delegate=amqp://guest@192.168.73.133:5672/, localPort= 58114]
2021-07-10 23:42:29.899  INFO 21136 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:42:29.905  INFO 21136 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.654 seconds (JVM running for 4.327)
2021-07-10 23:42:29.905  INFO 21136 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:42:29.906  INFO 21136 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:42:31.577  INFO 21136 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:42:31.577  INFO 21136 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:42:31.578  INFO 21136 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2021-07-10 23:42:31.648 DEBUG 21136 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:42:31.649 DEBUG 21136 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:42:31.650 DEBUG 21136 --- [http-nio-8888-exec-1] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:42:31.724 DEBUG 21136 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:42:31.724 DEBUG 21136 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:42:31.725 DEBUG 21136 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:42:33.644 DEBUG 21136 --- [http-nio-8888-exec-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:42:33.644 DEBUG 21136 --- [http-nio-8888-exec-4] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:42:33.645 DEBUG 21136 --- [http-nio-8888-exec-4] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:43:21.685 DEBUG 21136 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:43:21.685 DEBUG 21136 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:43:21.686 DEBUG 21136 --- [http-nio-8888-exec-4] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:43:21.700 DEBUG 21136 --- [http-nio-8888-exec-6] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:43:21.700 DEBUG 21136 --- [http-nio-8888-exec-6] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:43:21.702 DEBUG 21136 --- [http-nio-8888-exec-6] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:43:24.215 DEBUG 21136 --- [http-nio-8888-exec-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:43:24.215 DEBUG 21136 --- [http-nio-8888-exec-10] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:43:24.217 DEBUG 21136 --- [http-nio-8888-exec-10] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:44:27.961  WARN 21136 --- [http-nio-8888-exec-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 63736
2021-07-10 23:44:27.962  WARN 21136 --- [http-nio-8888-exec-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 120058
2021-07-10 23:44:27.962  WARN 21136 --- [http-nio-8888-exec-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 120060
2021-07-10 23:44:27.962  WARN 21136 --- [http-nio-8888-exec-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 120062
2021-07-10 23:44:27.962  WARN 21136 --- [http-nio-8888-exec-7] c.a.druid.pool.DruidAbstractDataSource   : discard long time none received connection. , jdbcUrl : jdbc:mysql://localhost:3306/seckill?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false, version : 1.2.4, lastPacketReceivedIdleMillis : 120065
2021-07-10 23:44:27.964 DEBUG 21136 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:44:27.964 DEBUG 21136 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:44:27.966 DEBUG 21136 --- [http-nio-8888-exec-7] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:46:27.232  INFO 23532 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 23532 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:46:27.234  INFO 23532 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:46:27.731  INFO 23532 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:46:27.733  INFO 23532 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:46:27.750  INFO 23532 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2021-07-10 23:46:28.075  INFO 23532 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:46:28.080  INFO 23532 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:46:28.081  INFO 23532 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:46:28.181  INFO 23532 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:46:28.181  INFO 23532 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 910 ms
2021-07-10 23:46:28.434  INFO 23532 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:46:28.568  INFO 23532 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:46:29.216 DEBUG 23532 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:46:29.229 DEBUG 23532 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:46:29.243 DEBUG 23532 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:46:29.971  INFO 23532 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:46:29.973  INFO 23532 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:46:29.993  INFO 23532 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#2f20f7ad:0/SimpleConnection@6b09ce57 [delegate=amqp://guest@192.168.73.133:5672/, localPort= 51965]
2021-07-10 23:46:30.587  INFO 23532 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:46:30.593  INFO 23532 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.634 seconds (JVM running for 4.188)
2021-07-10 23:46:30.593  INFO 23532 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:46:30.594  INFO 23532 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:46:39.014  INFO 23532 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:46:39.014  INFO 23532 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:46:39.015  INFO 23532 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-07-10 23:46:39.142 DEBUG 23532 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:46:39.142 DEBUG 23532 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:46:39.144 DEBUG 23532 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:46:53.930 DEBUG 23532 --- [http-nio-8888-exec-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:46:53.930 DEBUG 23532 --- [http-nio-8888-exec-6] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:46:53.931 DEBUG 23532 --- [http-nio-8888-exec-6] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:47:51.201  INFO 34896 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 34896 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:47:51.203  INFO 34896 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:47:51.675  INFO 34896 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:47:51.677  INFO 34896 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:47:51.696  INFO 34896 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2021-07-10 23:47:52.031  INFO 34896 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:47:52.037  INFO 34896 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:47:52.037  INFO 34896 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:47:52.140  INFO 34896 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:47:52.141  INFO 34896 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 908 ms
2021-07-10 23:47:52.388  INFO 34896 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:47:52.526  INFO 34896 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:47:53.179 DEBUG 34896 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:47:53.193 DEBUG 34896 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:47:53.206 DEBUG 34896 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:47:53.472  WARN 34896 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seckillController' defined in file [E:\GDUT\JavaProject\seckill\target\classes\com\flipped\seckill\controller\SeckillController.class]: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
2021-07-10 23:47:53.474  INFO 34896 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closing ...
2021-07-10 23:47:53.477  INFO 34896 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2021-07-10 23:47:53.588  INFO 34896 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2021-07-10 23:47:53.596  INFO 34896 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-07-10 23:47:53.608 ERROR 34896 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'seckillController' defined in file [E:\GDUT\JavaProject\seckill\target\classes\com\flipped\seckill\controller\SeckillController.class]: Invocation of init method failed; nested exception is org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.7.jar:5.3.7]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:438) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:337) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1336) [spring-boot-2.5.0.jar:2.5.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1325) [spring-boot-2.5.0.jar:2.5.0]
	at com.flipped.seckill.DemoApplication.main(DemoApplication.java:14) [classes/:na]
Caused by: org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.translateException(LettuceConnectionFactory.java:1621) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1529) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1315) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1298) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:1039) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:371) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisConnectionUtils.fetchConnection(RedisConnectionUtils.java:193) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:144) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:105) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:209) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:189) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.core.DefaultValueOperations.set(DefaultValueOperations.java:236) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at com.flipped.seckill.controller.SeckillController.lambda$afterPropertiesSet$0(SeckillController.java:94) ~[classes/:na]
	at java.util.ArrayList.forEach(ArrayList.java:1259) ~[na:1.8.0_261]
	at com.flipped.seckill.controller.SeckillController.afterPropertiesSet(SeckillController.java:93) ~[classes/:na]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845) ~[spring-beans-5.3.7.jar:5.3.7]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782) ~[spring-beans-5.3.7.jar:5.3.7]
	... 16 common frames omitted
Caused by: org.springframework.data.redis.connection.PoolException: Could not get a resource from the pool; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:109) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$ExceptionTranslatingConnectionProvider.getConnection(LettuceConnectionFactory.java:1527) ~[spring-data-redis-2.5.1.jar:2.5.1]
	... 32 common frames omitted
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 192.168.73.131:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:330) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:216) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at java.util.Optional.orElseGet(Optional.java:267) ~[na:1.8.0_261]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.lambda$null$0(LettucePoolingConnectionProvider.java:97) ~[spring-data-redis-2.5.1.jar:2.5.1]
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:211) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.support.ConnectionPoolSupport$RedisPooledObjectFactory.create(ConnectionPoolSupport.java:201) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at org.apache.commons.pool2.BasePooledObjectFactory.makeObject(BasePooledObjectFactory.java:58) ~[commons-pool2-2.9.0.jar:2.9.0]
	at org.apache.commons.pool2.impl.GenericObjectPool.create(GenericObjectPool.java:918) ~[commons-pool2-2.9.0.jar:2.9.0]
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:431) ~[commons-pool2-2.9.0.jar:2.9.0]
	at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:356) ~[commons-pool2-2.9.0.jar:2.9.0]
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:122) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.support.ConnectionPoolSupport$1.borrowObject(ConnectionPoolSupport.java:117) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettucePoolingConnectionProvider.getConnection(LettucePoolingConnectionProvider.java:103) ~[spring-data-redis-2.5.1.jar:2.5.1]
	... 33 common frames omitted
Caused by: io.lettuce.core.RedisCommandExecutionException: MISCONF Redis is configured to save RDB snapshots, but it is currently not able to persist on disk. Commands that may modify the data set are disabled, because this instance is configured to report errors during writes if RDB snapshotting fails (stop-writes-on-bgsave-error option). Please check the Redis logs for details about the RDB error.
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:137) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.internal.ExceptionFactory.createExecutionException(ExceptionFactory.java:110) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:746) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:681) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:598) ~[lettuce-core-6.1.2.RELEASE.jar:6.1.2.RELEASE]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.65.Final.jar:4.1.65.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_261]

2021-07-10 23:48:14.799  INFO 24904 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 24904 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:48:14.800  INFO 24904 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:48:16.824  INFO 6760 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 6760 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:48:16.826  INFO 6760 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:48:17.374  INFO 6760 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:48:17.375  INFO 6760 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:48:17.393  INFO 6760 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2021-07-10 23:48:17.725  INFO 6760 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:48:17.731  INFO 6760 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:48:17.731  INFO 6760 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:48:17.831  INFO 6760 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:48:17.831  INFO 6760 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 974 ms
2021-07-10 23:48:18.078  INFO 6760 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:48:18.215  INFO 6760 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:48:18.869 DEBUG 6760 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:48:18.883 DEBUG 6760 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:48:18.896 DEBUG 6760 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:48:19.600  INFO 6760 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:48:19.602  INFO 6760 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:48:19.621  INFO 6760 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#637791d:0/SimpleConnection@5e69cf07 [delegate=amqp://guest@192.168.73.133:5672/, localPort= 60131]
2021-07-10 23:48:20.214  INFO 6760 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:48:20.220  INFO 6760 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.746 seconds (JVM running for 4.334)
2021-07-10 23:48:20.220  INFO 6760 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:48:20.221  INFO 6760 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:48:25.068  INFO 6760 --- [http-nio-8888-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:48:25.068  INFO 6760 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:48:25.069  INFO 6760 --- [http-nio-8888-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-07-10 23:48:25.146 DEBUG 6760 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:48:25.147 DEBUG 6760 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:48:25.148 DEBUG 6760 --- [http-nio-8888-exec-2] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:48:42.554 DEBUG 6760 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==>  Preparing: SELECT id,nickname,password,salt,head,register_date,last_login_date,login_count FROM t_user WHERE id=?
2021-07-10 23:48:42.555 DEBUG 6760 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : ==> Parameters: 11111111111(String)
2021-07-10 23:48:42.556 DEBUG 6760 --- [http-nio-8888-exec-8] c.f.s.mapper.TUserMapper.selectById      : <==      Total: 1
2021-07-10 23:48:42.604 DEBUG 6760 --- [http-nio-8888-exec-9] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:48:42.604 DEBUG 6760 --- [http-nio-8888-exec-9] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:48:42.605 DEBUG 6760 --- [http-nio-8888-exec-9] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:48:44.018 DEBUG 6760 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:48:44.019 DEBUG 6760 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:48:44.020 DEBUG 6760 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
2021-07-10 23:49:47.669  INFO 16156 --- [main] com.flipped.seckill.DemoApplication      : Starting DemoApplication using Java 1.8.0_261 on flipped with PID 16156 (E:\GDUT\JavaProject\seckill\target\classes started by zh in E:\GDUT\JavaProject\seckill)
2021-07-10 23:49:47.670  INFO 16156 --- [main] com.flipped.seckill.DemoApplication      : No active profile set, falling back to default profiles: default
2021-07-10 23:49:48.155  INFO 16156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2021-07-10 23:49:48.157  INFO 16156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2021-07-10 23:49:48.174  INFO 16156 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2021-07-10 23:49:48.506  INFO 16156 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8888 (http)
2021-07-10 23:49:48.512  INFO 16156 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2021-07-10 23:49:48.512  INFO 16156 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.46]
2021-07-10 23:49:48.612  INFO 16156 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2021-07-10 23:49:48.612  INFO 16156 --- [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 913 ms
2021-07-10 23:49:48.872  INFO 16156 --- [main] c.a.d.s.b.a.DruidDataSourceAutoConfigure : Init DruidDataSource
2021-07-10 23:49:49.021  INFO 16156 --- [main] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2021-07-10 23:49:49.674 DEBUG 16156 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id
2021-07-10 23:49:49.688 DEBUG 16156 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : ==> Parameters: 
2021-07-10 23:49:49.704 DEBUG 16156 --- [main] c.f.s.m.TGoodsMapper.selectGoodsList     : <==      Total: 2
2021-07-10 23:49:50.406  INFO 16156 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8888 (http) with context path ''
2021-07-10 23:49:50.408  INFO 16156 --- [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [192.168.73.133:5672]
2021-07-10 23:49:50.427  INFO 16156 --- [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#469a7575:0/SimpleConnection@28367da7 [delegate=amqp://guest@192.168.73.133:5672/, localPort= 61039]
2021-07-10 23:49:51.021  INFO 16156 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2021-07-10 23:49:51.027  INFO 16156 --- [main] com.flipped.seckill.DemoApplication      : Started DemoApplication in 3.668 seconds (JVM running for 4.271)
2021-07-10 23:49:51.028  INFO 16156 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state LivenessState changed to CORRECT
2021-07-10 23:49:51.029  INFO 16156 --- [main] o.s.b.a.ApplicationAvailabilityBean      : Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2021-07-10 23:49:53.909  INFO 16156 --- [http-nio-8888-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-07-10 23:49:53.909  INFO 16156 --- [http-nio-8888-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2021-07-10 23:49:53.910  INFO 16156 --- [http-nio-8888-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2021-07-10 23:49:54.035 DEBUG 16156 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==>  Preparing: SELECT g.id, g.goods_name, g.goods_title, g.goods_img, g.goods_detail, g.goods_price, g.goods_stock, sg.seckill_price, sg.stock_count, sg.start_date, sg.end_date FROM t_goods AS g LEFT JOIN t_seckill_goods AS sg ON g.id = sg.goods_id where g.id=?
2021-07-10 23:49:54.036 DEBUG 16156 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : ==> Parameters: 2(Long)
2021-07-10 23:49:54.037 DEBUG 16156 --- [http-nio-8888-exec-1] c.f.s.m.TGoodsMapper.selectGoodsById     : <==      Total: 1
